{"version":3,"sources":["containers/Patient/MedicalFacilities/profileClinic.js","axios.js","services/userServices.js","containers/Patient/Doctor/HeaderDoctor.js","store/actions/actionTypes.js","utils/CommonUtils.js","utils/KeyCodeUtils.js","utils/LanguageUtils.js","containers/System/Admin/UserRedux.js","containers/System/Admin/TableManageUser.js","containers/HomePage/Section/OutstandingDoctor.js","utils/constant.js","store/actions/userActions.js","store/actions/adminActions.js","containers/HomePage/HomeHeader.js","containers/HomePage/HomeFooter.js","store/reducers/appReducer.js","store/reducers/userReducer.js","store/reducers/adminReducer.js","store/reducers/rootReducer.js","redux.js","hoc/authentication.js","routes/Home.js","containers/Auth/Login.js","components/Input/DatePicker.js","containers/System/Doctor/ManageSchedule.js","components/Navigator.js","containers/Header/menuApp.js","containers/Header/Header.js","containers/Patient/Doctor/modal/RemedyModal.js","containers/System/Doctor/ManagePatient.js","routes/Doctor.js","utils/emitter.js","containers/System/ModalUser.js","containers/System/ModalEditUser.js","containers/System/UserManage.js","containers/System/Admin/ManageDoctor.js","containers/System/Specialty/ManageSpecialty.js","components/InputFrom/InputForm.js","containers/System/Admin/ManageDefault.js","containers/System/Admin/ManageMedicalFacilities.js","containers/System/Clinic/ManageClinic.js","containers/System/Specialty/AddSpecialty.js","containers/System/AskAnswered/TableQA.js","containers/System/AskAnswered/ManageQA.js","routes/System.js","components/ConfirmModal.js","containers/HomePage/Section/Specialty.js","containers/HomePage/Section/MedicalFacility.js","containers/HomePage/Section/AnsweredDoctor.js","containers/HomePage/Section/ForYou.js","containers/HomePage/Section/MentalHealth.js","assets/img-specialty/sieu-am-thai.jpg","containers/HomePage/Section/ForLife.js","containers/HomePage/Section/VideoDoctor.js","containers/HomePage/HomePage.js","containers/Patient/Doctor/modal/DetailsModal.js","containers/Patient/DetailsDefault/DetailsDefault.js","containers/Patient/Clinic/HeaderClinic.js","containers/Patient/Doctor/ProfileDoctor.js","containers/Patient/Doctor/modal/BookingModal.js","containers/Patient/Doctor/doctorSchedule.js","containers/Patient/Doctor/DoctorExtralnfor.js","containers/Patient/Doctor/DetaiDoctor.js","containers/Patient/Specialty/DetailSpecialty.js","containers/Patient/MedicalFacilities/DetailClinic.js","containers/Patient/VerifyEmail.js","containers/Patient/Specialty/HeaderSpecialty.js","containers/Patient/Details/DetailsAskAnswer.js","components/Slider/SliderBG.js","containers/Patient/Clinic/PatientAsked.js","containers/App.js","serviceWorker.js","hoc/IntlProviderWrapper.js","index.js","store/actions/appActions.js","components/CustomToast.js","components/CustomScrollbars.js"],"names":["DefaultClass","props","state","detailClinic","a","prevProps","prevState","snapshot","this","setState","Fragment","className","image","style","backgroundImage","name","address","Component","connect","language","app","dispatch","instance","axios","create","baseURL","process","interceptors","response","use","data","handleLoginApi","email","password","post","getAllUsers","inputId","get","createNewUser","deleteUser","userId","delete","id","editUser","inputData","put","getAllCodeService","inputType","getTopDoctorHomeService","getAllDoctorService","saveDetailDoctor","getDetailDoctor","saveBulkScheduleDoctor","getScheduleDoctor","doctorId","date","getProfileDoctor","postPatientBooking","postVerifyBookApp","postSendRemedy","getAllPatientBooking","getExtraInfoById","createNewSpecialty","getAllSpecialty","getDetailSpecialtyById","location","createNewMedicalFacilities","getAllMedicalFacilities","getMedicalFacilitiesById","saveInfoMedicalFacilities","saveInfoSpecialty","handleDeleteSpecialty","deleteMedicalFacilities","createNewQuestion","getQuestion","getQuestionById","search","sendQuestion","getReply","HeaderDoctor","handleViewDetailDoctor","doctor","history","push","arrDoctors","loadDoctors","doctorsRedux","console","log","length","map","item","index","imageBase64","Buffer","toString","nameVi","positionData","valueVi","lastName","firstName","nameEn","valueEn","onClick","languages","VI","Doctor_info","specialtyData","withRouter","admin","topDoctors","actions","actionTypes","Object","freeze","APP_START_UP_COMPLETE","SET_CONTENT_OF_CONFIRM_MODAL","CHANGE_LANGUAGE","ADD_USER_SUCCESS","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","PROCESS_LOGOUT","FETCH_GENDER_START","FETCH_GENDER_SUCCESS","FETCH_GENDER_FAILED","FETCH_POSITION_START","FETCH_POSITION_SUCCESS","FETCH_POSITION_FAILED","FETCH_ROLE_START","FETCH_ROLE_SUCCESS","FETCH_ROLE_FAILED","CREATE_USER_SUCCESS","CREATE_USER_FAILED","FETCH_ALL_USERS_SUCCESS","FETCH_ALL_USERS_FAILED","DELETE_USER_SUCCESS","DELETE_USER_FAILED","EDIT_USER_SUCCESS","EDIT_USER_FAILED","FETCH_TOP_DOCTOR_SUCCESS","FETCH_TOP_DOCTOR_FAILED","FETCH_ALL_DOCTOR_SUCCESS","FETCH_ALL_DOCTOR_FAILED","SAVE_DOCTOR_SUCCESS","SAVE_DOCTOR_FAILED","FETCH_ALLCODE_SCHEDULE_TIME_SUCCESS","FETCH_ALLCODE_SCHEDULE_TIME_FAILED","FETCH_REQUIRE_DOCTOR_START","FETCH_REQUIRE_DOCTOR_SUCCESS","FETCH_REQUIRE_DOCTOR_FAILED","FETCH_EXTRA_INFO_SUCCESS","FETCH_EXTRA_INFO_FAILED","CommonUtils","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","error","KeyCodeUtils","e","UP","DOWN","TAB","ENTER","E","ESCAPE","flattenMessages","nestedMessages","prefix","keys","reduce","messages","key","value","prefixedKey","assign","messages_vi","messages_en","LanguageUtils","lang","UserRedux","handleOnChangeImg","event","target","files","getBase64","base64","objectUrl","URL","createObjectURL","previewImgURL","avatar","openImg","isOpen","handleSaveUser","checkValidateInput","action","CRUD_ACTIONS","CREATE","createNewUserStart","gender","roleID","role","phoneNumber","positionId","position","EDIT","editId","onChangeInput","copyState","isValid","arrCheck","i","alert","handleEditUserFrom","user","genderArr","positionArr","roleArr","getGenderStart","getPositionStart","getRoleStart","genderRedux","arrGenders","keyMap","positionRedux","arrPosition","roleRedux","arrRole","listUsers","genders","positions","roles","htmlFor","type","onChange","disabled","hidden","mainSrc","onCloseRequest","users","fetchUserRedux","TableManageUser","handleDeleteUser","deleteUserStart","handleEditUser","userRedux","arrUsers","scope","marginRight","paddingRight","paddingLeft","OutstandingDoctor","handleOnClickDoctor","loadTopDoctors","topDoctorsRedux","arrDoctor","settings","isLoggedIn","path","HOME","HOMEPAGE","LOGIN","LOG_OUT","SYSTEM","DETAIL_DOCTOR","DETAIL_SPECIALTY","DETAIL_CLINIC","HEADER_CLINIC","HEADER_SPECIALTY","ASK_ANSWER","HEADER_DOCTOR","PATIENT_ASKED","VERIFY_EMAIL_BOOKING","EN","DELETE","READ","USER_ROLE","ADMIN","DOCTOR","PATIENT","OnlineDoctor","CommunityDoctor","userLoginSuccess","userInfo","processLogout","fetchGenderStart","getState","res","errCode","fetchGenderSuccess","fetchGenderFailed","genderData","fetchRequiredDoctorStart","resPrice","resPayment","resProvince","resSpecialty","resClinic","fetchRequiredDoctorSuccess","fetchRequiredDoctorFailed","allRequiredData","fetchPositionStart","fetchPositionSuccess","fetchPositionFailed","fetchRoleStart","fetchRoleSuccess","fetchRoleFailed","RoleData","message","toast","success","fetchAllUserStart","saveUserSuccess","saveUserFailed","fetchAllUserSuccess","reverse","fetchAllUserFailed","deleteUserSuccess","deleteUserFailed","editUserStart","editUserSuccess","editUserFailed","fetchTopDoctor","fetchTopDoctorSuccess","fetchTopDoctorFailed","dataDoctor","fetchAllDoctor","fetchAllDoctorSuccess","fetchAllDoctorFailed","dataDR","saveDoctor","saveDoctorSuccess","saveDoctorFailed","fetchAllTimeDoctor","fetchAllTimeDoctorSuccess","fetchAllTimeDoctorFailed","dataTime","fetchExtraInfo","fetchExtraInfoSuccess","fetchExtraInfoFailed","HomeHeader","changeLanguage","changeLanguageAppRedux","handleImgLogo","handleOnClickClinic","handleOnClickSpecialty","href","isShowBanner","placeholder","changeLanguageApp","HomeFooter","initialState","started","systemMenuPath","contentOfConfirmModal","messageId","handleFunc","dataFunc","appReducer","isLoadingGender","isLoadingPosition","isLoadingRole","isLoadingRequired","allDoctors","timeDoctor","allRequired","extraInfo","adminReducer","persistCommonConfig","storage","stateReconciler","autoMergeLevel2","userPersistConfig","whitelist","appPersistConfig","createBrowserHistory","basename","reduxStateSyncConfig","rootReducer","combineReducers","router","connectRouter","persistReducer","userReducer","middleware","routerMiddleware","thunkMiddleware","createStateSyncMiddleware","composeEnhancers","compose","reduxStore","createStore","applyMiddleware","persistor","persistStore","locationHelper","locationHelperBuilder","userIsAuthenticated","connectedRouterRedirect","authenticatedSelector","wrapperDisplayName","redirectPath","userIsNotAuthenticated","ownProps","getRedirectQueryParam","allowRedirectBack","Home","linkToRedirect","to","Login","handleOnChangeUserName","userName","handleOnChangePassWord","handleLogin","errMessage","handleShowHidePassWord","isShowPassWord","handleKeyDown","keyCode","onKeyDown","color","navigate","DatePicker","flatpickrNode","nodeRef","element","flatpickr","node","addEventListener","handleBlur","handlerKeyDown","which","preventDefault","valueMoment","moment","toDate","onOpen","blur","checkDateValue","str","max","charAt","num","parseInt","isNaN","autoFormatOnChange","seperator","input","RegExp","test","substr","values","split","v","replace","join","onInputChange","DISPLAY_FORMAT","DATE_FORMAT_AUTO_FILL","converted","SEPERATOR","onInputBlur","removeEventListener","close","minDate","onClose","otherProps","options","dateFormat","allowInput","disableMobile","ref","ManageSchedule","buildNameDoctor","labelVi","labelEn","buildDataInputSelect","object","label","handleChange","selectedOption","selectedDoctor","handleOnChangeDatePicket","currentDate","handleClickBtnTime","time","rangeTime","isSelected","handSaveSchedule","doctorIdOne","roleIDUser","formattedDate","Date","getTime","selectedTime","filter","timeType","arrSchedule","handleChangeInput","allTimeDoctor","roleId","nameDoctor","fetchAllDoctorRedux","fetchAllTimeDoctorRedux","allDoctor","dataSelect","yesterday","setDate","getDate","MenuGroup","children","Menu","active","link","hasSubMenu","onLinkClick","data-toggle","aria-expanded","SubMenu","getItemClass","pathname","MenuGroupWithRouter","MenuWithRouter","SubMenuWithRouter","Navigator","expandedMenu","toggle","groupIndex","menuIndex","isMenuHasSubMenuActive","subMenus","currentPath","checkActiveMenu","menus","outerLoop","group","j","menu","isSubMenuOpen","subMenu","subMenuIndex","closeOtherExpand","withRouterInnerRef","WrappedComponent","InnerComponentWithRef","forwardRef","rest","React","ComponentWithRef","withRef","adminMenu","doctorMenu","communityDoctorMenu","onlineDoctorMenu","Header","handleChangeLanguage","menuApp","RemedyModal","handOnchangeReply","reply","handleOnchangeEmail","handleSendRemedy","sendRemedy","handleSendEmail","dataReply","img","sendEmail","dataModal","isOpenModal","closeModal","isReply","isImg","isEmail","Modal","size","ModalHeader","ModalBody","rows","ModalFooter","Button","ManagePatient","getDataPatient","formatDate","dataPatient","isOpenRemedy","handlePatientRemedy","patientId","patientData","patientName","dataChileModal","isShowLoading","imgBase64","startOf","valueOf","timeTypePatient","colSpan","textAlign","spinner","text","Doctor","component","_emitter","EventEmitter","setMaxListeners","emitter","ModalUser","toggleNewUser","handleOnChangeInput","arrInput","handleAddNewUser","listenToEmitter","on","centered","Form","FormGroup","Label","for","Input","ModalEditUser","currentUser","_","isEmpty","UserManage","getAllUSersFromReact","isOpenModalUser","toggleEditUser","isOpenEditUser","emit","userEdit","mdParser","MarkdownIt","ManageDoctor","handleEditorChange","html","contentMarkdown","contentHtml","handleSaveContentMarkdown","hasOldData","saveDoctorRedux","description","selectedPrice","selectedPayment","selectedProvince","addressClinic","nameClinic","note","clinicId","selectedClinic","specialtyId","selectedSpecialty","handleOnChangeText","listPayment","listPrice","listProvince","listSpecialty","listClinic","Markdown","markdown","paymentId","priceId","provinceId","find","handleChangeSelectDoctorInfo","tateName","fullNameDoctor","fetchRequiredDoctor","requireDoctor","dataSelectPrice","dataSelectPayment","dataSelectProvince","dataSelectSpecialty","dataSelectClinic","height","renderHTML","render","ManageSpecialty","descriptionMarkdown","descriptionHtml","arrClinic","handleClickSave","handleClickDeleted","handleOnchangeName","InputForm","handleOnChange","rests","ManageDefault","getDataQuestion","useState","inputs","setInputs","setPreviewImgURL","setImageBase64","setIsOpen","setDescriptionHtml","setDescriptionMarkdown","title","isOpenInput","ManageMedicalFacilities","ManageClinic","AddSpecialty","TableQA","dataQuestion","setDataQuestion","setIsOpenRemedy","setDateModal","useEffect","question","fullName","handleQA","ManageQA","System","ConfirmModal","acceptBtnRef","current","click","onAcceptBtnClick","setContentOfConfirmModal","createRef","document","Specialty","handleViewDetailSpecialty","specialty","dataSpecialty","MedicalFacility","handleViewDetailClinic","clinic","arrMedicalFacility","AnsweredDoctor","handleDetailerAsKAnswer","handleOnClickPatientAsked","ForYou","MentalHealth","ForLife","textDecoration","VideoDoctor","width","src","frameBorder","allow","allowFullScreen","HomePage","dots","infinite","speed","slidesToShow","slidesToScroll","responsive","breakpoint","initialSlide","DetailsModal","questionId","setDataModal","nameLink","setSizeImg","modal","arrDetails","setQuestion","setQuestionId","handleOnClick","backgroundSize","HeaderClinic","setArrClinic","ProfileDoctor","getInfoDoctor","renderTimeBooking","format","locale","timeTypeData","dataProfile","isShowDescription","typeProvinceData","BookingModal","valueInput","stateCopy","birthday","handleConfirmBooking","timeString","buildTimeBooking","dataScheduleTimeModal","nameString","buildDoctorName","reason","doctorName","closeModalBooking","doctorData","fetchExtra","fetchExtraDoctor","isOpenModalBooking","class","checked","typePriceData","displayType","thousandSeparator","suffix","doctorSchedule","getArrDays","arrDate","ddMM","today","add","capitalizeFirstLetter","handleOnChangeSelect","doctorIdFromParent","allTimes","handleClickScheduleTime","allDay","string","toUpperCase","slice","timeDisplay","DoctorExtralnfor","showHideDetailInfo","status","isShowDetailInfo","typePaymentData","DetaiDoctor","detailDoctor","currentDoctorId","match","params","dangerouslySetInnerHTML","__html","DetailSpecialty","handleChangeSelect","arrDoctorId","arr","doctorSpecialty","detailSpecialty","selectProvince","DetailClinic","doctorClinic","VerifyEmail","statusVerify","urlParams","URLSearchParams","token","HeaderSpecialty","arrSpecialty","setArrSpecialty","setIsOpenInput","DetailsAskAnswer","arrQuestions","setArrQuestions","SliderBG","autoplaySpeed","autoplay","PatientAsked","textarea","setTextarea","getDataPatientQuestion","App","handlePersistorState","bootstrapped","onBeforeLift","then","catch","CustomScrollbars","with","exact","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","theme","Boolean","window","hostname","getFlattenedMessages","IntlProviderWrapper","defaultLocale","ReactDOM","store","getElementById","navigator","serviceWorker","ready","registration","unregister","languageInput","CustomToast","titleId","hour","minute","second","hour12","autoHeight","autoHeightMin","autoHeightMax","msg","getScrollLeft","getScrollTop","scrollToBottom","targetScrollTop","getScrollHeight","scrollTo","targetTop","quickScroll","scrollbars","originalTop","iteration","scroll","scrollTop","setTimeout","renderTrackHorizontal","renderTrackVertical","renderThumbHorizontal","renderThumbVertical","renderNone","disableVerticalScroll","disableHorizontalScroll","autoHide","autoHideTimeout","hideTracksWhenNotNeeded"],"mappings":"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","file":"static/js/main.af38e451.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport './profileClinic.scss'\r\n\r\n\r\nclass DefaultClass extends Component {\r\n\r\n        \r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            detailClinic: {}\r\n        }\r\n    }\r\n  \r\n\r\n    async componentDidMount(){\r\n        \r\n       \r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot){\r\n        if(prevProps.detailClinic !== this.props.detailClinic){\r\n            this.setState({\r\n                detailClinic: this.props.detailClinic\r\n            \r\n            })\r\n        }\r\n    }\r\n  \r\n\r\n\r\n\r\n\r\n    render() {\r\n\r\n        let {detailClinic} = this.state;\r\n       \r\n     \r\n      \r\n        return (\r\n\r\n            <React.Fragment>\r\n               <div className=\"container\">\r\n                    \r\n                    <div className=\"row mt\">\r\n                        <div className=\"col-5\">\r\n\r\n                        {detailClinic && detailClinic.image && \r\n                            <div className=\"detail-clinic__img\"\r\n\r\n                            style={{backgroundImage: `url(${detailClinic.image})`}}\r\n                            \r\n                            >\r\n\r\n                            </div>\r\n                        }\r\n                           \r\n                        </div>\r\n\r\n                        <div className=\"col-7\">\r\n                                <div className=\"detail-clinic__body-text\">\r\n                                {detailClinic && detailClinic.name && \r\n                                <div className=\"detail-clinic__text-up\">\r\n                                    {detailClinic.name}\r\n                                </div>\r\n                                }\r\n\r\n                                {detailClinic && detailClinic.address && \r\n                                <div className=\"detail-clinic__dow\">\r\n                                    {detailClinic.address}\r\n                                </div>\r\n                                }\r\n                                </div>\r\n                        </div>\r\n                    </div>\r\n               </div>\r\n    \r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        language: state.app.language\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DefaultClass);\r\n","import axios from 'axios';\r\nimport _ from 'lodash';\r\n// import config from './config';\r\n\r\nconst instance = axios.create({\r\n    baseURL: process.env.REACT_APP_BACKEND_URL,\r\n});\r\n\r\n\r\n\r\ninstance.interceptors.response.use(\r\n    (response) => {\r\n        // Thrown error for request with OK status code\r\n        const { data } = response;\r\n        return response.data;\r\n    }\r\n );\r\n\r\nexport default instance;\r\n","import axios from \"../axios\";\r\n\r\n\r\n const handleLoginApi = (email, password) =>{\r\n    return axios.post('/api/login', {email, password});\r\n}\r\n\r\nconst getAllUsers = (inputId) => {\r\n    return axios.get(`/api/get-all-users?id=${inputId}`);\r\n}\r\n\r\nconst createNewUser = (data) => {\r\n    return axios.post(`/api/create-new-users`, data);\r\n}\r\n\r\nconst deleteUser = (userId) => {\r\n    return axios.delete(`/api/delete-users`, \r\n    {\r\n        data: {\r\n            id: userId\r\n        }   \r\n    });\r\n}\r\n\r\nconst editUser = (inputData) => {\r\n    return axios.put(`/api/edit-users`,inputData);\r\n}\r\n\r\nconst getAllCodeService = (inputType) => {\r\n    return axios.get(`/api/all-code?type=${inputType}`);\r\n}\r\n\r\n\r\nconst getTopDoctorHomeService = () => {\r\n    return axios.get(`/api/top-doctor-home`);\r\n}\r\n\r\nconst getAllDoctorService = () => {\r\n    return axios.get(`/api/get-all-doctor`);\r\n}\r\n\r\nconst saveDetailDoctor = (data) => {\r\n    return axios.post(`/api/save-info-doctor`, data);\r\n}\r\n\r\nconst getDetailDoctor = (inputId) => {\r\n    return axios.get(`/api/get-detail-doctor-by-id?id=${inputId}`);\r\n}\r\n\r\nconst saveBulkScheduleDoctor = (data) => {\r\n    return axios.post(`/api/bilk-create-schedule`, data);\r\n}\r\n\r\nconst getScheduleDoctor = (doctorId, date) => {\r\n    return axios.get(`/api/get-schedule-by-date?doctorId=${doctorId}&date=${date}`);\r\n}\r\n\r\nconst getProfileDoctor = (doctorId) => {\r\n    return axios.get(`/api/get-profile-doctor-by-id?doctorId=${doctorId}`);\r\n}\r\n\r\nconst postPatientBooking = (data) => {\r\n    return axios.post(`/api/patient-booking-app`, data);\r\n}\r\n\r\nconst postVerifyBookApp = (data) => {\r\n    return axios.post(`/api/verify-book-app`, data);\r\n}\r\n\r\nconst postSendRemedy= (data) => {\r\n    return axios.post(`/api/send-remedy`, data);\r\n}\r\n\r\nconst getAllPatientBooking = (data) => {\r\n    return axios.get(`/api/get-list-patient-for-doctor?doctorId=${data.doctorId}&date=${data.date}`);\r\n}\r\n\r\n\r\nconst getExtraInfoById = (doctorId) => {\r\n    return axios.get(`/api/get-extra-info-by-id?doctorId=${doctorId}`);\r\n}\r\n\r\n\r\nconst createNewSpecialty = (data) => {\r\n    return axios.post(`/api/create-new-specialty`, data);\r\n}\r\n\r\nconst getAllSpecialty = () => {\r\n    return axios.get(`/api/get-specialty-home`);\r\n}\r\n\r\nconst getDetailSpecialtyById = (data) => {\r\n    return axios.get(`/api/get-detail-specialty-by-id?id=${data.id}&location=${data.location}`);\r\n}\r\n\r\nconst createNewMedicalFacilities = (data) => {\r\n    return axios.post(`/api/create-new-medical-facilities`, data);\r\n}\r\n\r\nconst getAllMedicalFacilities = (data) => {\r\n    return axios.get(`/api/get-medical-facilities`);\r\n}\r\n\r\nconst getMedicalFacilitiesById = (data) => {\r\n    return axios.get(`/api/get-medical-facilities-by-id?id=${data.id}`);\r\n}\r\n\r\nconst saveInfoMedicalFacilities = (data) => {\r\n    return axios.post(`/api/save-info-medical-facilities`, data);\r\n}\r\nconst saveInfoSpecialty = (data) => {\r\n    return axios.post(`/api/save-info-specialty`, data);\r\n}\r\n\r\n\r\nconst handleDeleteSpecialty = (data) => {\r\n    return axios.delete(`/api/delete-specialty?id=${data.id}`);\r\n}\r\n\r\nconst deleteMedicalFacilities = (data) => {\r\n    return axios.delete(`/api/delete-medical-facilities?id=${data.id}`);\r\n}\r\n\r\nconst createNewQuestion = (data) => {\r\n    return axios.post('/api/create-new-question', data);\r\n}\r\n\r\nconst getQuestion = (data) => {\r\n    return axios.get(`/api/get-question`);\r\n}\r\n\r\nconst getQuestionById = (data) => {\r\n    return axios.get(`/api/get-question-by-id?id=${data.id}`)\r\n}\r\n\r\nconst search = (data) => {\r\n    return axios.post(`/api/search?searchTerm=${data.search}`)\r\n}\r\n\r\nconst sendQuestion = (data) => {\r\n    return axios.post(`/api/send-question`, data);\r\n}\r\n\r\n\r\nconst getReply = (data) => {\r\n    return axios.get(`/api/get-reply`);\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport {\r\n    search,\r\n    getQuestionById,\r\n    handleLoginApi,\r\n    getQuestion,\r\n    getAllUsers,\r\n    createNewUser,\r\n    deleteUser,\r\n    editUser,\r\n    getAllCodeService,\r\n    getTopDoctorHomeService,\r\n    getAllDoctorService,\r\n    saveDetailDoctor,\r\n    getDetailDoctor,\r\n    saveBulkScheduleDoctor,\r\n    getScheduleDoctor,\r\n    getProfileDoctor,\r\n    postPatientBooking,\r\n    postVerifyBookApp,\r\n    getAllPatientBooking,\r\n    postSendRemedy,\r\n    getExtraInfoById,\r\n    createNewSpecialty,\r\n    getAllSpecialty,\r\n    getDetailSpecialtyById,\r\n    createNewMedicalFacilities,\r\n    getAllMedicalFacilities,\r\n    getMedicalFacilitiesById,\r\n    saveInfoMedicalFacilities,\r\n    saveInfoSpecialty,\r\n    handleDeleteSpecialty,\r\n    deleteMedicalFacilities,\r\n    createNewQuestion,\r\n    sendQuestion,\r\n    getReply\r\n};","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { FormattedDate } from 'react-intl';\r\nimport HomeHeader from '../../HomePage/HomeHeader';\r\nimport HomeFooter from '../../HomePage/HomeFooter';\r\nimport './HeaderDoctor.scss';\r\nimport ProfileClinic from '../MedicalFacilities/profileClinic';\r\nimport * as actions from '../../../store/actions';\r\nimport { languages } from '../../../utils';\r\n\r\n\r\nimport { withRouter } from 'react-router';\r\n\r\n\r\nclass HeaderDoctor extends Component {\r\n\r\n        \r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            arrDoctors: []\r\n           \r\n        }\r\n    }\r\n  \r\n\r\n    async componentDidMount(){\r\n\r\n        this.props.loadDoctors()\r\n     \r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot){\r\n      \r\n        if(prevProps.doctorsRedux !== this.props.doctorsRedux){\r\n\r\n            this.setState({\r\n                arrDoctors: this.props.doctorsRedux\r\n            \r\n            })\r\n        }\r\n    }\r\n  \r\n    handleViewDetailDoctor = (doctor) => {\r\n       \r\n        this.props.history.push(`/detail-doctor/${doctor.id}`)\r\n\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        \r\n        let {arrDoctors} = this.state\r\n        let {language} = this.props;\r\n        console.log(this.props.doctorsRedux)\r\n      \r\n        return (\r\n\r\n            <React.Fragment>\r\n                <HomeHeader />\r\n               <div className=\"clinic-link-container mt mr-t\">\r\n                    <div className=\"container\">\r\n\r\n          \r\n                    <div className=\"row\">\r\n                        <div className=\"col-12\">\r\n                            <div className=\"clinic-link-text\">Bác sĩ....</div>\r\n                        </div>\r\n                    </div>\r\n                    </div>\r\n                   \r\n                        <div className=\"container\">\r\n                           \r\n\r\n                           \r\n                            {arrDoctors && arrDoctors.length > 0 &&\r\n                            \r\n                            arrDoctors.map((item, index) => {\r\n                                let imageBase64 = '';\r\n\r\n                                if(item.image){\r\n                                    imageBase64 = new Buffer(item.image, 'base64'). toString('binary')\r\n                                }  \r\n                                let nameVi = `${item.positionData.valueVi}, ${item.lastName} ${item.firstName} `\r\n                                let nameEn = `${item.positionData.valueEn}, ${item.firstName} ${item.lastName}`\r\n                                return (\r\n\r\n\r\n                                    \r\n                         \r\n                                \r\n                                       \r\n                                <div className=\"row mt mt-child\"\r\n                                \r\n                                    onClick={() => this.handleViewDetailDoctor(item)}\r\n                                >\r\n                                        \r\n                                            <div className=\"col-2\">\r\n\r\n                                            \r\n                                                <div className=\"detail-clinic__doctor\"\r\n\r\n                                                style={{backgroundImage: `url(${imageBase64})`}}\r\n                                                \r\n                                                >\r\n\r\n                                                </div>\r\n                                    \r\n                                            \r\n                                            </div>\r\n\r\n                                            <div className=' col-10 ' \r\n\r\n>\r\n                                            <span className=\"name_doctor\">{language === languages.VI ? nameVi : nameEn}</span>\r\n                                            <div className=\"department-doctor\">{item.Doctor_info.specialtyData.name}</div>\r\n                                        </div>\r\n                                </div>\r\n                                     \r\n                                       \r\n                            \r\n\r\n                                )\r\n                            })\r\n\r\n                            \r\n                            \r\n                            }\r\n                            \r\n                          \r\n                    </div>\r\n                    \r\n               </div>\r\n\r\n               <HomeFooter />\r\n    \r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        language: state.app.language,\r\n        doctorsRedux: state.admin.topDoctors,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        loadDoctors: () => dispatch(actions.fetchTopDoctor())\r\n    };\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(HeaderDoctor));\r\n","const actionTypes = Object.freeze({\r\n    //app\r\n    APP_START_UP_COMPLETE: 'APP_START_UP_COMPLETE',\r\n    SET_CONTENT_OF_CONFIRM_MODAL: 'SET_CONTENT_OF_CONFIRM_MODAL',\r\n    CHANGE_LANGUAGE: 'CHANGE-LANGUAGE',\r\n\r\n    //user\r\n    ADD_USER_SUCCESS: 'ADD_USER_SUCCESS',\r\n    USER_LOGIN_SUCCESS: 'USER_LOGIN_SUCCESS',\r\n    USER_LOGIN_FAIL: 'USER_LOGIN_FAIL',\r\n    PROCESS_LOGOUT: 'PROCESS_LOGOUT',\r\n\r\n    //admin\r\n    FETCH_GENDER_START: 'FETCH_GENDER_START',\r\n    FETCH_GENDER_SUCCESS: 'FETCH_GENDER_SUCCESS',\r\n    FETCH_GENDER_FAILED: 'FETCH_GENDER_FAILED',\r\n\r\n    FETCH_POSITION_START: 'FETCH_POSITION_START',\r\n    FETCH_POSITION_SUCCESS: 'FETCH_POSITION_SUCCESS',\r\n    FETCH_POSITION_FAILED: 'FETCH_POSITION_FAILED',\r\n    \r\n    FETCH_ROLE_START: 'FETCH_ROLE_START',\r\n    FETCH_ROLE_SUCCESS: 'FETCH_ROLE_SUCCESS',\r\n    FETCH_ROLE_FAILED: 'FETCH_ROLE_FAILED',\r\n\r\n    CREATE_USER_SUCCESS: 'CREATE_USER_SUCCESS',\r\n    CREATE_USER_FAILED: 'CREATE_USER_FAILED',\r\n    \r\n    FETCH_ALL_USERS_SUCCESS: 'FETCH_ALL_USERS_SUCCESS',\r\n    FETCH_ALL_USERS_FAILED: ' FETCH_ALL_USERS_FAILED',\r\n\r\n    DELETE_USER_SUCCESS: 'DELETE_USER_SUCCESS',\r\n    DELETE_USER_FAILED: 'DELETE_USER_FAILED',\r\n\r\n    EDIT_USER_SUCCESS: 'EDIT_USER_SUCCESS',\r\n    EDIT_USER_FAILED: 'EDIT_USER_FAILED',\r\n\r\n    FETCH_TOP_DOCTOR_SUCCESS: 'FETCH_TOP_DOCTOR_SUCCESS',\r\n    FETCH_TOP_DOCTOR_FAILED: ' FETCH_TOP_DOCTOR_FAILED',\r\n\r\n    FETCH_ALL_DOCTOR_SUCCESS: 'FETCH_ALL_DOCTOR_SUCCESS',\r\n    FETCH_ALL_DOCTOR_FAILED: ' FETCH_ALL_DOCTOR_FAILED',\r\n    \r\n    SAVE_DOCTOR_SUCCESS: 'SAVE_DOCTOR_SUCCESS',\r\n    SAVE_DOCTOR_FAILED: ' SAVE_DOCTOR_FAILED',\r\n\r\n    FETCH_ALLCODE_SCHEDULE_TIME_SUCCESS: 'FETCH_ALLCODE_SCHEDULE_TIME_SUCCESS',\r\n    FETCH_ALLCODE_SCHEDULE_TIME_FAILED: ' FETCH_ALLCODE_SCHEDULE_TIME_FAILED',\r\n\r\n    FETCH_REQUIRE_DOCTOR_START: 'FETCH_REQUIRE_DOCTOR_START',\r\n    FETCH_REQUIRE_DOCTOR_SUCCESS: 'FETCH_REQUIRE_DOCTOR_SUCCESS',\r\n    FETCH_REQUIRE_DOCTOR_FAILED: 'FETCH_REQUIRE_DOCTOR_FAILED',\r\n\r\n    FETCH_EXTRA_INFO_SUCCESS: 'FETCH_EXTRA_INFO_SUCCESS',\r\n    FETCH_EXTRA_INFO_FAILED: ' FETCH_EXTRA_INFO_FAILED',\r\n    \r\n})\r\n\r\nexport default actionTypes;","import { reduce, reject } from \"lodash\";\r\n\r\nclass CommonUtils {\r\n \r\n    static getBase64(file){\r\n        return new Promise ((resolve, reject) => {\r\n            const reader = new FileReader();\r\n            reader.readAsDataURL(file);\r\n            reader.onload = () => resolve(reader.result);\r\n            reader.onerror = error => reject(error);\r\n        })\r\n    }\r\n}\r\n\r\nexport default CommonUtils;","class KeyCodeUtils {\r\n\r\n    static UP = 38;\r\n\r\n    static DOWN = 40;\r\n\r\n    static TAB = 9;\r\n\r\n    static ENTER = 13;\r\n\r\n    static E = 69;\r\n\r\n    static ESCAPE = 27; \r\n\r\n    static isNavigation(e) {\r\n        return (e >= 33 && e <= 40) || e === 9 || e === 8 || e === 46 || e === 14 || e === 13;\r\n    }\r\n\r\n    static isNumeric(e) {\r\n        return (e >= 48 && e <= 57) || (e >= 96 && e <= 105);\r\n    }\r\n    static isAlphabetic(e) {\r\n        return (e >= 65 && e <= 90);\r\n    }\r\n    static isDecimal(e) {\r\n        return e === 190 || e === 188 || e === 108 || e === 110;\r\n    }\r\n\r\n    static isDash(e) {\r\n        return e === 109 || e === 189;\r\n    }\r\n}\r\n\r\nexport default KeyCodeUtils;","import messages_vi from '../translations/vi.json';\r\nimport messages_en from '../translations/en.json';\r\n\r\nconst flattenMessages = ((nestedMessages, prefix = '') => {\r\n    if (nestedMessages == null) {\r\n        return {}\r\n    }\r\n    return Object.keys(nestedMessages).reduce((messages, key) => {\r\n        const value = nestedMessages[key];\r\n        const prefixedKey = prefix ? `${prefix}.${key}` : key;\r\n\r\n        if (typeof value === 'string') {\r\n            Object.assign(messages, {[prefixedKey]: value})\r\n        } else {\r\n            Object.assign(messages, flattenMessages(value, prefixedKey))\r\n        }\r\n\r\n        return messages\r\n    }, {})\r\n});\r\n\r\nconst messages = {\r\n    'vi': flattenMessages(messages_vi),\r\n    'en': flattenMessages(messages_en),\r\n};\r\n\r\nexport default class LanguageUtils {\r\n    static getMessageByKey(key, lang) {\r\n        return messages[lang][key]\r\n    }\r\n\r\n    static getFlattenedMessages() {\r\n        return messages;\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { connect } from 'react-redux';\r\nimport Lightbox from 'react-image-lightbox';\r\nimport 'react-image-lightbox/style.css';\r\n\r\nimport { languages, CRUD_ACTIONS, CommonUtils } from '../../../utils';\r\n\r\nimport * as actions from '../../../store/actions'\r\nimport './UserRedux.scss';\r\nimport TableManageUser from './TableManageUser';\r\n\r\n\r\n\r\nclass UserRedux extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            genderArr: [],\r\n            positionArr: [],\r\n            roleArr: [],\r\n            previewImgURL: '',\r\n            isOpen: false,\r\n\r\n            email: '',\r\n            password: '',\r\n            firstName: '',\r\n            lastName: '',\r\n            phoneNumber: '',\r\n            address: '',\r\n            gender: '',\r\n            position: '',\r\n            role: '',\r\n            avatar: '',\r\n\r\n            action: '',\r\n            editId: ''\r\n\r\n        }\r\n    }\r\n  \r\n  \r\n    async componentDidMount() {\r\n        this.props.getGenderStart();\r\n        this.props.getPositionStart();\r\n        this.props.getRoleStart();\r\n\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot){\r\n        if(prevProps.genderRedux !== this.props.genderRedux){\r\n            let arrGenders = this.props.genderRedux\r\n            this.setState({\r\n                genderArr: arrGenders,\r\n                gender: arrGenders &&  arrGenders.length > 0 ? arrGenders[0].keyMap : ''\r\n            })\r\n        }\r\n\r\n        //position\r\n        if(prevProps.positionRedux !== this.props.positionRedux){\r\n            let arrPosition = this.props.positionRedux;\r\n            this.setState({\r\n                positionArr: arrPosition,\r\n                position: arrPosition && arrPosition.length > 0 ? arrPosition[0].keyMap : ''\r\n            })\r\n        }\r\n\r\n        //role\r\n        if(prevProps.roleRedux !== this.props.roleRedux){\r\n            let arrRole = this.props.roleRedux;\r\n            this.setState({\r\n                roleArr: arrRole,\r\n                role: arrRole && arrRole.length > 0 ? arrRole[0].keyMap : ''\r\n            })\r\n        }\r\n\r\n        if(prevProps.listUsers !== this.props.listUsers){\r\n            let arrRole = this.props.roleRedux;\r\n            let arrPosition = this.props.positionRedux;\r\n            let arrGenders = this.props.genderRedux\r\n            this.setState({\r\n                email: '',\r\n                password: '',\r\n                firstName: '',\r\n                lastName: '',\r\n                phoneNumber: '',\r\n                address: '',\r\n                gender: '',\r\n                position: '',\r\n                role: '',\r\n                avatar: '',\r\n                gender: arrGenders &&  arrGenders.length > 0 ? arrGenders[0].keyMap : '',\r\n                position: arrPosition && arrPosition.length > 0 ? arrPosition[0].keyMap : '',\r\n                role: arrRole && arrRole.length > 0 ? arrRole[0].keyMap : '',\r\n                action: CRUD_ACTIONS.CREATE,\r\n                previewImgURL: ''\r\n                \r\n            })\r\n        }\r\n    }\r\n\r\n    handleOnChangeImg = async (event) => {\r\n        let data = event.target.files;\r\n        let file = data[0];\r\n        if(file){\r\n            let base64 = await CommonUtils.getBase64(file);\r\n           \r\n            let objectUrl = URL.createObjectURL(file);\r\n            this.setState({\r\n                previewImgURL : objectUrl,\r\n                avatar: base64\r\n            })\r\n        }\r\n        \r\n        \r\n    }\r\n\r\n    openImg = () => {\r\n        if(!this.state.previewImgURL){\r\n            return\r\n        }\r\n        this.setState({\r\n            isOpen: true,\r\n           \r\n        })\r\n    }\r\n\r\n\r\n    handleSaveUser = () => {\r\n        let check = this.checkValidateInput();\r\n        if(check === false) return;\r\n        let {action} = this.state;\r\n        \r\n        if(action === CRUD_ACTIONS.CREATE){\r\n            this.props.createNewUserStart({\r\n                email: this.state.email,\r\n                password: this.state.password, \r\n                firstName: this.state.firstName,\r\n                lastName: this.state.lastName,\r\n                address: this.state.address,\r\n                gender: this.state.gender,\r\n                roleID: this.state.role,\r\n                phoneNumber: this.state.phoneNumber,\r\n                positionId: this.state.position,\r\n                avatar: this.state.avatar\r\n            })\r\n        }\r\n\r\n        if(action === CRUD_ACTIONS.EDIT){\r\n            this.props.editUser({\r\n                id: this.state.editId,\r\n                email: this.state.email,\r\n                password: this.state.password, \r\n                firstName: this.state.firstName,\r\n                lastName: this.state.lastName,\r\n                address: this.state.address,\r\n                gender: this.state.gender,\r\n                roleID: this.state.role,\r\n                phoneNumber: this.state.phoneNumber,\r\n                positionId: this.state.position,\r\n                avatar: this.state.avatar\r\n                \r\n            })\r\n           \r\n        }\r\n\r\n    }\r\n\r\n    onChangeInput = (event, id) => {\r\n        let copyState = {...this.state}\r\n        \r\n        copyState[id] = event.target.value;\r\n        this.setState({\r\n            ...copyState\r\n        })\r\n        \r\n    }\r\n\r\n    checkValidateInput = () => {\r\n        let isValid = true;\r\n        let arrCheck = ['email','password','firstName','lastName','phoneNumber','address'];\r\n\r\n        for( let i = 0; i < arrCheck.length; i++){\r\n            if(!this.state[arrCheck[i]]){\r\n                isValid = false;\r\n                alert('This input is required: ' + arrCheck[i]);\r\n                break;\r\n            }\r\n        }\r\n        return isValid;\r\n    }\r\n\r\n    handleEditUserFrom = (user) => {\r\n        let imageBase64 = '';\r\n        if(user.image){\r\n            imageBase64 = new Buffer(user.image, 'base64'). toString('binary')\r\n        }\r\n\r\n  \r\n\r\n\r\n        this.setState({\r\n            email: user.email,\r\n            password: 'hard code',\r\n            firstName: user.firstName,\r\n            lastName: user.lastName,\r\n            phoneNumber: user.phoneNumber,\r\n            address: user.address,\r\n            gender: user.gender,\r\n            position: user.positionId,\r\n            role: user.roleID,\r\n            avatar: '',\r\n            previewImgURL: imageBase64,\r\n            action: CRUD_ACTIONS.EDIT,\r\n            editId: user.id\r\n\r\n\r\n        })\r\n    }\r\n\r\n    render() {\r\n        let language = this.props.language;\r\n        let genders = this.state.genderArr;\r\n        let positions = this.state.positionArr;\r\n        let roles = this.state.roleArr;\r\n \r\n\r\n\r\n        let {email,password,firstName,lastName,phoneNumber,address,gender,position,role,avatar} = this.state\r\n        return (\r\n            \r\n        \r\n            <div className=\"user-redux__container\">\r\n                <div className=\"title\">Thêm thông tin</div>\r\n                <div className=\"user-redux-body\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12\">\r\n                                <FormattedMessage id=\"manage-user.add\"/>\r\n                            </div>\r\n                            <div className=\"col-6\">\r\n                                <label htmlFor=\"\"> <FormattedMessage id=\"manage-user.email\"/></label>\r\n                                <input className='form-control' type=\"email\" \r\n                                    value={email}\r\n                                    onChange={(event) => {this.onChangeInput(event, 'email')}}\r\n                                    disabled={this.state.action === CRUD_ACTIONS.EDIT ? true : false}\r\n                                />\r\n                            </div>\r\n                            <div className=\"col-6\">\r\n                                <label htmlFor=\"\">  <FormattedMessage id=\"manage-user.password\"/></label>\r\n                                <input className='form-control' type=\"password\" \r\n                                value={password}\r\n                                onChange={(event) => {this.onChangeInput(event, 'password')}}\r\n                                disabled={this.state.action === CRUD_ACTIONS.EDIT ? true : false}\r\n                                />\r\n                            </div>\r\n                            <div className=\"col-6\">\r\n                                <label htmlFor=\"\">  <FormattedMessage id=\"manage-user.firstName\"/></label>\r\n                                <input className='form-control' type=\"text\" \r\n                                value={firstName}\r\n                                onChange={(event) => {this.onChangeInput(event, 'firstName')}}\r\n                                />\r\n                            </div>\r\n                            <div className=\"col-6\">\r\n                                <label htmlFor=\"\">  <FormattedMessage id=\"manage-user.lastName\"/></label>\r\n                                <input className='form-control' type=\"text\" \r\n                                value={lastName}\r\n                                onChange={(event) => {this.onChangeInput(event, 'lastName')}}\r\n                                />\r\n                            </div>\r\n                            <div className=\"col-3\">\r\n                                <label htmlFor=\"\">  <FormattedMessage id=\"manage-user.phone-number\"/></label>\r\n                                <input className='form-control' type=\"text\" \r\n                                value={phoneNumber}\r\n                                onChange={(event) => {this.onChangeInput(event, 'phoneNumber')}}\r\n                                />\r\n                            </div>\r\n                            <div className=\"col-9\">\r\n                                <label htmlFor=\"\">  <FormattedMessage id=\"manage-user.address\"/></label>\r\n                                <input className='form-control' type=\"text\" \r\n                                value={address}\r\n                                onChange={(event) => {this.onChangeInput(event, 'address')}}/>\r\n                            </div>\r\n\r\n                            <div className=\"col-3\">\r\n                                <label htmlFor=\"\">  <FormattedMessage id=\"manage-user.gender\"/></label>\r\n                                <select className=\"form-control\"\r\n                                 \r\n                                 onChange={(event) => {this.onChangeInput(event, 'gender')}}\r\n                                value={gender}\r\n                                >\r\n\r\n                                    {genders && genders.length > 0 && \r\n                                        genders.map((item, index) => {\r\n                                            return (\r\n                                                <option keyMap={index}  value={item.keyMap}> \r\n                                                    {language === languages.VI ? item.valueVi : item.valueEn}\r\n                                                </option>\r\n                                            )\r\n                                        })\r\n                                    }\r\n      \r\n                                  \r\n                                </select>\r\n                            </div>\r\n\r\n                            <div className=\"col-3\">\r\n                                <label htmlFor=\"\">  <FormattedMessage id=\"manage-user.position\"/></label>\r\n                                <select className=\"form-control\"\r\n                                 \r\n                                 onChange={(event) => {this.onChangeInput(event, 'position')}}\r\n                                 value={position}\r\n                                >\r\n                                {positions && positions.length > 0 && \r\n                                        positions.map((item, index) => {\r\n                                            return (\r\n                                                <option keyMap={index} value={item.keyMap} > \r\n                                                    {language === languages.VI ? item.valueVi : item.valueEn}\r\n                                                </option>\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                </select>\r\n                            </div>\r\n\r\n                            <div className=\"col-3\">\r\n                                <label htmlFor=\"\">  <FormattedMessage id=\"manage-user.role-id\"/></label>\r\n                                <select className=\"form-control\"\r\n                                \r\n                             \r\n                                onChange={(event) => {this.onChangeInput(event, 'role')}}\r\n                                value={role}\r\n                                >\r\n                                {roles && roles.length > 0 && \r\n                                        roles.map((item, index) => {\r\n                                            return (\r\n                                                <option keyMap={index}  value={item.keyMap}> \r\n                                                    {language === languages.VI ? item.valueVi : item.valueEn}\r\n                                                </option>\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                </select>\r\n                            </div>\r\n\r\n                           \r\n\r\n                            <div className=\"col-2\">\r\n                                <label htmlFor=\"\">  <FormattedMessage id=\"manage-user.img\"/></label>\r\n                                <div className='label-upload'>\r\n\r\n                                    <input id=\"preview-img\" type=\"file\" hidden\r\n                                        onChange={(event) => this.handleOnChangeImg(event)}\r\n                                    \r\n                                    />\r\n                                    <label htmlFor=\"preview-img\" className='preview-img'>Tải ảnh <i className=\"fas fa-upload\"></i> </label>\r\n                                    \r\n                                    <div className=\"preview-image\"\r\n                                        style={{backgroundImage: `url(${this.state.previewImgURL})`}}\r\n                                        onClick={() => this.openImg()}\r\n                                    > \r\n                                    \r\n                                    </div>\r\n                                </div>\r\n                                \r\n                            </div>\r\n\r\n                            <div className=\"col-12 mt-4\">\r\n                                <button className={this.state.action === CRUD_ACTIONS.EDIT ? \"btn btn-warning\" : \"btn btn-primary\"} type=\"submit\"\r\n                                onClick={() => this.handleSaveUser()}\r\n                                >  \r\n\r\n                                {this.state.action === CRUD_ACTIONS.EDIT ? \r\n                                 <FormattedMessage id=\"manage-user.edit\"/>\r\n                                 :\r\n                                 <FormattedMessage id=\"manage-user.save\"/>\r\n                                }\r\n                               \r\n                                </button>\r\n                            </div>\r\n                            \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 mt-4\">\r\n                            <TableManageUser \r\n                                handleEditUserFrom = {this.handleEditUserFrom}\r\n                                action = {this.state.action}\r\n                            />   \r\n                        </div>\r\n                    </div> \r\n                </div>\r\n                \r\n\r\n                {this.state.isOpen === true && \r\n                    <Lightbox\r\n                        mainSrc={this.state.previewImgURL}\r\n                        onCloseRequest={() => this.setState({ isOpen: false })}\r\n                    />\r\n                 } \r\n                \r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        language: state.app.language,\r\n       genderRedux: state.admin.genders,\r\n        positionRedux: state.admin.positions,\r\n       roleRedux: state.admin.roles,\r\n       listUsers: state.admin.users\r\n        \r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        // processLogout: () => dispatch(actions.processLogout()),\r\n      \r\n        // changeLanguageAppRedux: (language) => dispatch(actions.changeLanguageApp(language))\r\n\r\n        getGenderStart: () => dispatch(actions.fetchGenderStart()),\r\n        getPositionStart: () => dispatch(actions.fetchPositionStart()),\r\n        getRoleStart: () => dispatch(actions.fetchRoleStart()),\r\n        createNewUserStart: (data) => dispatch(actions.createNewUserStart(data)),\r\n        fetchUserRedux: () => dispatch(actions.fetchAllUserStart()),\r\n        editUser: (data) => dispatch(actions.editUserStart(data))\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserRedux);\r\n\r\n\t\t\t\t\t\t\t\t","import React, { Component } from 'react';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { connect } from 'react-redux';\r\n\r\nimport * as actions from '../../../store/actions'\r\n\r\n\r\n\r\n\r\n\r\nclass TableManageUser extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            userRedux: []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n       this.props.fetchUserRedux();\r\n    }\r\n\r\n    componentDidUpdate(prevProps,prevState) {\r\n        if(prevProps.listUsers !== this.props.listUsers){\r\n            this.setState({\r\n                userRedux: this.props.listUsers\r\n            })\r\n        }\r\n    }\r\n\r\n    handleDeleteUser = (user) => {\r\n        this.props.deleteUserStart(user.id);\r\n    }\r\n\r\n    handleEditUser = (user) => {\r\n        console.log(user);\r\n        this.props.handleEditUserFrom(user);\r\n    }\r\n\r\n    render() {\r\n        let arrUsers = this.state.userRedux; \r\n        return (\r\n            <React.Fragment>\r\n                 <div className=\"user-container\">\r\n               \r\n               <div className='users-table'>\r\n                   <table className=\"table table-dark\">\r\n                       <thead>\r\n                           <tr>\r\n                           <th scope=\"col\">#</th>\r\n                           <th scope=\"col\">Email</th>\r\n                           <th scope=\"col\">First Name</th>\r\n                           <th scope=\"col\">Last Name</th>\r\n                           <th scope=\"col\">Address</th>\r\n                           <th scope=\"col\">Actions</th>\r\n                           </tr>\r\n                       </thead>\r\n                       <tbody>\r\n\r\n                           <>\r\n                         \r\n                           { arrUsers && arrUsers .length > 0 && arrUsers.map((item, index) => {\r\n                               return(\r\n                                   <tr>\r\n                                       <th scope=\"row\">{index + 1}</th>\r\n                                       <td>{item.email}</td>\r\n                                       <td>{item.firstName}</td>\r\n                                       <td>{item.lastName}</td>\r\n                                       <td>{item.address}</td>\r\n                                       <td>    \r\n                                       <button type=\"button\" \r\n                                           className=\"btn btn-success\" \r\n                                           style={{marginRight: 10, paddingRight:10 , paddingLeft: 10}}\r\n\r\n                                           onClick={() => {\r\n                                               this.handleEditUser(item);\r\n                                           }}\r\n                                           >Edit</button>\r\n                                       <button type=\"button\" \r\n                                           className=\"btn btn-danger\"\r\n                                           // style={{marginRight: 10, paddingRight:10 , paddingLeft: 10}}\r\n                                           onClick={() => {\r\n                                               this.handleDeleteUser(item);\r\n                                           }}\r\n                                           >Delete</button>\r\n                                       </td>\r\n                                               \r\n                                   </tr>     \r\n                               )\r\n                           })}\r\n                                       \r\n                           </>\r\n    \r\n                 \r\n                       </tbody>\r\n                   </table>\r\n               </div>\r\n                </div>\r\n                \r\n            </React.Fragment>\r\n           \r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        listUsers: state.admin.users\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        fetchUserRedux: () => dispatch(actions.fetchAllUserStart()),\r\n        deleteUserStart: (id) => dispatch(actions.deleteUserStart(id))\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TableManageUser);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Slider from \"react-slick\";\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\nimport './OutstandingDoctor.scss'\r\nimport * as actions from '../../../store/actions'\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { withRouter } from 'react-router';\r\nimport { languages } from '../../../utils';\r\n\r\n\r\n\r\nclass OutstandingDoctor extends Component {\r\n  \r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            arrDoctors: [],\r\n        }\r\n    }\r\n  \r\n\r\n    async componentDidMount(){\r\n        this.props.loadTopDoctors();\r\n    }\r\n\r\n\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot){\r\n        if(prevProps.topDoctorsRedux !== this.props.topDoctorsRedux){\r\n            this.setState({\r\n                arrDoctors: this.props.topDoctorsRedux\r\n            \r\n            })\r\n        }\r\n    }\r\n    handleViewDetailDoctor = (doctor) => {\r\n       \r\n        this.props.history.push(`/detail-doctor/${doctor.id}`)\r\n\r\n    }\r\n\r\n    handleOnClickDoctor = () => {\r\n        this.props.history.push(`/header-doctor`)\r\n    }\r\n\r\n\r\n    \r\n    \r\n   \r\n    render() {\r\n       \r\n\r\n        \r\n        let arrDoctor = this.state.arrDoctors;\r\n        // console.log()\r\n        \r\n        \r\n        let {language} = this.props;\r\n    \r\n\r\n        return (\r\n            < React.Fragment>\r\n            <div className=\"doctor-container bg\">\r\n                <div className=\"section-specialty\">\r\n                    <div className=\"grid wide \">\r\n                        <div className=\"row center\">\r\n                            \r\n                            <div className=\"col-8 header__title--body\">\r\n                                    <div className=\"specialty-header__title\"><FormattedMessage id =\"home-page.outstanding-doctor\"/></div>\r\n                            </div>\r\n                            <div className=\"col-4 header__button--body\">\r\n                                <button type=\"button\" className=\"btn btn-info specialty-header__button\"\r\n                                onClick={() => this.handleOnClickDoctor()}\r\n                                \r\n                                \r\n                                ><FormattedMessage id =\"home-page.see-more\"/></button>\r\n                            </div>\r\n                        \r\n                        </div>\r\n                    </div>\r\n                    \r\n                </div>\r\n                <div className=\"grid wide\">\r\n                    <Slider {...this.props.settings}>\r\n             \r\n\r\n                    {arrDoctor && arrDoctor.length > 0 && arrDoctor.map((item, index) => {\r\n\r\n                         let imageBase64 = '';\r\n                        \r\n                         if(item.image){\r\n                             imageBase64 = new Buffer(item.image, 'base64'). toString('binary')\r\n                             \r\n                          \r\n                         }           \r\n                         let nameVi = `${item.positionData.valueVi}, ${item.lastName} ${item.firstName} `\r\n                         let nameEn = `${item.positionData.valueEn}, ${item.firstName} ${item.lastName}`\r\n                         return(\r\n                                \r\n                             <div className=\"specialty-content__body\" \r\n                                onClick={() => this.handleViewDetailDoctor(item)}\r\n                             >\r\n                                 <div className='specialty-content doctor-container__dow'> \r\n                                     <div className=\"specialty-content__img img_doctor\"\r\n                                    \r\n                                     style={{backgroundImage: `url(${imageBase64})`}}\r\n                                     ></div>\r\n                                    \r\n                                     <div className='specialty-content doctor-container__text'\r\n\r\n                                     >\r\n                                         <span className=\"name_doctor\">{language === languages.VI ? nameVi : nameEn}</span>\r\n                                         <div className=\"department-doctor\">{item.Doctor_info.specialtyData.name}</div>\r\n                                     </div>\r\n                                 </div>\r\n                             </div>\r\n                         )\r\n\r\n\r\n                    })}\r\n\r\n\r\n                   \r\n                    </Slider>\r\n                </div>\r\n            </div>\r\n            \r\n                    \r\n             \r\n        </React.Fragment>\r\n        )\r\n      \r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isLoggedIn: state.user.isLoggedIn,\r\n        topDoctorsRedux: state.admin.topDoctors,\r\n        language: state.app.language\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        loadTopDoctors: () => dispatch(actions.fetchTopDoctor())\r\n       \r\n    };\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(OutstandingDoctor));\r\n","export const path = {\r\n    HOME: '/',\r\n    HOMEPAGE: '/home',\r\n    LOGIN: '/login',\r\n    LOG_OUT: '/logout',\r\n    SYSTEM: '/system',\r\n    DETAIL_DOCTOR: '/detail-doctor/:id',\r\n    DETAIL_SPECIALTY: '/detail-specialty/:id',\r\n    DETAIL_CLINIC: '/detail-clinic/:id',\r\n\r\n    HEADER_CLINIC: '/header-clinic',\r\n    HEADER_SPECIALTY: '/header-specialty',\r\n    ASK_ANSWER: '/doctor_ask-answer',\r\n    HEADER_DOCTOR: '/header-doctor',\r\n\r\n    PATIENT_ASKED: '/patient_asked',\r\n\r\n\r\n    VERIFY_EMAIL_BOOKING: '/verify-booking'\r\n\r\n};\r\n\r\nexport const languages = {\r\n    VI: 'vi',\r\n    EN: 'en'\r\n};\r\n \r\nexport const CRUD_ACTIONS = {\r\n    CREATE: \"CREATE\",\r\n    EDIT: \"EDIT\",\r\n    DELETE: \"DELETE\",\r\n    READ : \"READ\"\r\n};\r\n\r\nexport const dateFormat = {\r\n    SEND_TO_SERVER: 'DD/MM/YYYY'\r\n};\r\n\r\nexport const YesNoObj = {\r\n    YES: 'Y',\r\n    NO: 'N'\r\n}\r\n\r\nexport const USER_ROLE = {\r\n    ADMIN: 'R1',\r\n    DOCTOR: 'R2',\r\n    PATIENT: 'R3',\r\n    OnlineDoctor: 'R5',\r\n    CommunityDoctor: 'R4',\r\n}","import actionTypes from './actionTypes';\r\n\r\nexport const addUserSuccess = () => ({\r\n    type: actionTypes.ADD_USER_SUCCESS\r\n})\r\n\r\n\r\nexport const userLoginSuccess = (userInfo) => ({\r\n    type: actionTypes.USER_LOGIN_SUCCESS,\r\n    userInfo: userInfo\r\n})\r\n\r\nexport const userLoginFail = (userInfo) => ({\r\n    type: actionTypes.USER_LOGIN_FAIL,\r\n   \r\n})\r\n\r\n\r\nexport const processLogout = (userInfo) => ({\r\n    type: actionTypes.PROCESS_LOGOUT,\r\n\r\n})\r\n\r\n\r\n\r\n","import actionTypes from './actionTypes';\r\nimport { getAllCodeService, createNewUser, getAllUsers, deleteUser,editUser, getTopDoctorHomeService \r\n    ,getAllDoctorService,saveDetailDoctor,getAllSpecialty,\r\n     getExtraInfoById, getAllMedicalFacilities} from '../../services/userServices';\r\nimport {  toast } from 'react-toastify';\r\nimport { get } from 'lodash';\r\n\r\n// export const fetchGenderStart = () => ({\r\n//     type: actionTypes.FETCH_GENDER_START\r\n// })\r\n\r\nexport const fetchGenderStart = () => {\r\n\r\n    return async (dispatch, getState) => {\r\n        try {\r\n            dispatch({\r\n                type: actionTypes.FETCH_GENDER_START\r\n            })\r\n\r\n            let res = await getAllCodeService(\"GENDER\");\r\n            if(res && res.errCode === 0) {\r\n                dispatch(fetchGenderSuccess(res.data));\r\n            }else{\r\n                dispatch(fetchGenderFailed())\r\n            }\r\n        } catch (error) {\r\n            dispatch(fetchGenderFailed())\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const fetchGenderSuccess = (genderData) => ({\r\n    type: actionTypes.FETCH_GENDER_SUCCESS,\r\n    data: genderData \r\n})\r\n\r\nexport const fetchGenderFailed = () => ({\r\n    type: actionTypes.FETCH_GENDER_FAILED\r\n})\r\n\r\n\r\n\r\nexport const fetchRequiredDoctorStart = () => {\r\n\r\n    return async (dispatch, getState) => {\r\n        try {\r\n            dispatch({\r\n                type: actionTypes.FETCH_REQUIRE_DOCTOR_START\r\n            })\r\n\r\n            let resPrice = await getAllCodeService(\"PRICE\");\r\n            let resPayment = await getAllCodeService(\"PAYMENT\");\r\n            let resProvince = await getAllCodeService(\"PROVINCE\");\r\n            let resSpecialty = await getAllSpecialty()\r\n            let resClinic = await getAllMedicalFacilities()\r\n\r\n\r\n            if(resPrice && resPrice.errCode === 0\r\n                && resPayment && resPayment.errCode === 0\r\n                && resProvince && resProvince.errCode === 0\r\n                && resSpecialty && resSpecialty.errCode === 0\r\n                && resClinic && resClinic.errCode === 0\r\n                ) {\r\n                    let data = {\r\n                        resPrice: resPrice.data,\r\n                        resPayment: resPayment.data,\r\n                        resProvince: resProvince.data,\r\n                        resSpecialty: resSpecialty.data,\r\n                        resClinic: resClinic.data\r\n                    }\r\n\r\n                dispatch(fetchRequiredDoctorSuccess(data));\r\n            }else{\r\n                dispatch(fetchRequiredDoctorFailed())\r\n            }\r\n        } catch (error) {\r\n            dispatch(fetchRequiredDoctorFailed())\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const fetchRequiredDoctorSuccess = (allRequiredData) => ({\r\n    type: actionTypes.FETCH_REQUIRE_DOCTOR_SUCCESS,\r\n    data: allRequiredData\r\n})\r\n\r\nexport const fetchRequiredDoctorFailed = () => ({\r\n    type: actionTypes.FETCH_REQUIRE_DOCTOR_FAILED\r\n})\r\n\r\n\r\n\r\n///position\r\nexport const fetchPositionStart = () => {\r\n    return async (dispatch, getState) => {\r\n        try {\r\n            dispatch({\r\n                type: actionTypes.FETCH_POSITION_SUCCESS\r\n            })\r\n\r\n            let res = await getAllCodeService(\"POSITION\");\r\n            if(res && res.errCode === 0) {\r\n                dispatch(fetchPositionSuccess(res.data));\r\n            }else{\r\n                dispatch(fetchPositionFailed())\r\n            }\r\n        } catch (error) {\r\n            dispatch(fetchPositionFailed())\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const fetchPositionSuccess = (positionData) => ({\r\n    type: actionTypes.FETCH_POSITION_SUCCESS,\r\n    data: positionData\r\n})\r\n\r\nexport const fetchPositionFailed = () => ({\r\n    type: actionTypes.FETCH_POSITION_FAILED\r\n})\r\n\r\n//role\r\nexport const fetchRoleStart = () => {\r\n    return async (dispatch, getState) => {\r\n        try {\r\n            dispatch({\r\n                type: actionTypes.FETCH_ROLE_START\r\n            })\r\n\r\n            let res = await getAllCodeService(\"ROLE\");\r\n            if(res && res.errCode === 0) {\r\n                dispatch(fetchRoleSuccess(res.data));\r\n            }else{\r\n                dispatch(fetchRoleFailed())\r\n            }\r\n        } catch (error) {\r\n            dispatch(fetchRoleFailed())\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const fetchRoleSuccess = (RoleData) => ({\r\n    type: actionTypes.FETCH_ROLE_SUCCESS,\r\n    data: RoleData\r\n})\r\n\r\nexport const fetchRoleFailed = () => ({\r\n    type: actionTypes.FETCH_ROLE_FAILED\r\n})\r\n\r\n\r\n\r\nexport const createNewUserStart = (data) => {\r\n    return async (dispatch, getState) => {\r\n        try {\r\n            let res = await createNewUser(data);\r\n          \r\n            if(res && res.message.errCode === 0) {\r\n                toast.success(\"Create a new user succeed\");\r\n                dispatch(fetchAllUserStart());\r\n                dispatch(saveUserSuccess());\r\n             \r\n            }else{\r\n                toast.error(\"Create a new user error\");\r\n                dispatch(saveUserFailed())\r\n            }\r\n        } catch (error) {\r\n            dispatch(saveUserFailed())\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\nexport const saveUserSuccess = () => ({\r\n    type: actionTypes.CREATE_USER_SUCCESS,\r\n    \r\n   \r\n})\r\n\r\nexport const saveUserFailed = () => ({\r\n    type: actionTypes.CREATE_USER_FAILED\r\n})\r\n\r\n\r\n\r\n\r\nexport const fetchAllUserStart = () => {\r\n    return async (dispatch, getState) => {\r\n        try {\r\n            let res = await getAllUsers(\"ALL\");\r\n            if(res && res.errCode === 0) {\r\n                dispatch(fetchAllUserSuccess(res.users.reverse()));\r\n            }else{\r\n                dispatch(fetchAllUserFailed())\r\n            }\r\n        } catch (error) {\r\n            dispatch(fetchAllUserFailed())\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\nexport const fetchAllUserSuccess = (data) => ({\r\n    type: actionTypes.FETCH_ALL_USERS_SUCCESS,\r\n    users: data\r\n   \r\n})\r\n\r\nexport const fetchAllUserFailed = () => ({\r\n    type: actionTypes.FETCH_ALL_USERS_FAILED\r\n})\r\n\r\n\r\n\r\nexport const deleteUserStart = (userId) => {\r\n    return async (dispatch, getState) => {\r\n        try {\r\n            let res = await deleteUser(userId);\r\n            if(res && res.errCode === 0) {\r\n                toast.success(\"Deleted the user succeed\");\r\n            \r\n                dispatch(deleteUserSuccess());\r\n                dispatch(fetchAllUserStart());\r\n            }else{\r\n                toast.error(\"Deleted the user error\");\r\n                dispatch(deleteUserFailed())\r\n            }\r\n        } catch (error) {\r\n            dispatch(fetchAllUserFailed())\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\nexport const deleteUserSuccess = (data) => ({\r\n    type: actionTypes.DELETE_USER_SUCCESS,\r\n  \r\n   \r\n})\r\n\r\nexport const deleteUserFailed = () => ({\r\n    type: actionTypes.DELETE_USER_FAILED\r\n})\r\n\r\n\r\nexport const editUserStart = (data) => {\r\n    return async (dispatch, getState) => {\r\n        try {\r\n            let res = await editUser(data);\r\n            if(res && res.errCode === 0) {\r\n                toast.success(\"Update the user succeed\");\r\n            \r\n                dispatch(editUserSuccess());\r\n                dispatch(fetchAllUserStart());\r\n            }else{\r\n                toast.error(\"Update the user error\");\r\n                dispatch(editUserFailed())\r\n            }\r\n        } catch (error) {\r\n            dispatch(editUserFailed())\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\nexport const editUserSuccess = () => ({\r\n    type: actionTypes.DELETE_USER_SUCCESS,\r\n  \r\n   \r\n})\r\n\r\nexport const editUserFailed = () => ({\r\n    type: actionTypes.DELETE_USER_FAILED\r\n})\r\n\r\n\r\nexport const fetchTopDoctor = () => {\r\n    return async (dispatch, getState) => {\r\n        try {\r\n            let res = await getTopDoctorHomeService();    \r\n            if(res && res.errCode === 0) {\r\n                dispatch(fetchTopDoctorSuccess(res.data));\r\n            }else{\r\n                dispatch(fetchTopDoctorFailed())\r\n            }\r\n        } catch (error) {\r\n            dispatch(fetchTopDoctorFailed())\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\nexport const fetchTopDoctorSuccess = (data) => ({\r\n    \r\n    type: actionTypes.FETCH_TOP_DOCTOR_SUCCESS,\r\n    dataDoctor: data\r\n\r\n})\r\n\r\nexport const fetchTopDoctorFailed = () => ({\r\n    type: actionTypes.FETCH_TOP_DOCTOR_FAILED,\r\n    \r\n})\r\n\r\n\r\n\r\nexport const fetchAllDoctor = () => {\r\n    return async (dispatch, getState) => {\r\n        try {\r\n            let res = await getAllDoctorService();\r\n            if(res && res.errCode === 0) {\r\n                dispatch(fetchAllDoctorSuccess(res.data));\r\n            }else{\r\n                dispatch(fetchAllDoctorFailed())\r\n            }\r\n        } catch (error) {\r\n            dispatch(fetchAllDoctorFailed())\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\nexport const fetchAllDoctorSuccess = (data) => ({\r\n    \r\n    type: actionTypes.FETCH_ALL_DOCTOR_SUCCESS,\r\n    dataDR: data\r\n\r\n})\r\n\r\nexport const fetchAllDoctorFailed = () => ({\r\n    type: actionTypes.FETCH_ALL_DOCTOR_FAILED,\r\n    \r\n})\r\n\r\n\r\nexport const saveDoctor = (data) => {\r\n    return async (dispatch, getState) => {\r\n        try {\r\n            let res = await saveDetailDoctor(data);\r\n            if(res && res.errCode === 0) {\r\n                toast.success(\"Save Info Doctor succeed\")\r\n                dispatch(saveDoctorSuccess());\r\n            }else{\r\n                toast.error(\"Save Info Doctor error\")\r\n                dispatch(saveDoctorFailed())\r\n            }\r\n        } catch (error) {\r\n            toast.error(\"Save Info Doctor Error\")\r\n            dispatch(saveDoctorFailed())\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\nexport const saveDoctorSuccess = () => ({\r\n    \r\n    type: actionTypes.SAVE_DOCTOR_SUCCESS,\r\n\r\n\r\n})\r\n\r\nexport const saveDoctorFailed = () => ({\r\n    type: actionTypes.SAVE_DOCTOR_FAILED,\r\n    \r\n})\r\n\r\n\r\n\r\nexport const fetchAllTimeDoctor = (type) => {\r\n    return async (dispatch, getState) => {\r\n        try {\r\n            let res = await getAllCodeService(\"TIME\");\r\n         \r\n            if(res && res.errCode === 0) {\r\n                dispatch(fetchAllTimeDoctorSuccess(res.data));\r\n            }else{\r\n                dispatch(fetchAllTimeDoctorFailed())\r\n            }\r\n        } catch (error) {\r\n            dispatch(fetchAllTimeDoctorFailed())\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\nexport const fetchAllTimeDoctorSuccess = (data) => ({\r\n    \r\n    type: actionTypes.FETCH_ALLCODE_SCHEDULE_TIME_SUCCESS,\r\n   \r\n    dataTime: data\r\n})\r\n\r\nexport const fetchAllTimeDoctorFailed = () => ({\r\n    type: actionTypes.FETCH_ALLCODE_SCHEDULE_TIME_FAILED\r\n    \r\n})\r\n\r\n\r\n\r\n\r\nexport const fetchExtraInfo = (doctorId) => {\r\n    return async (dispatch, getState) => {\r\n        try {\r\n            let res = await getExtraInfoById(doctorId);\r\n            if(res && res.errCode === 0) {\r\n                dispatch(fetchExtraInfoSuccess(res.data));\r\n            }else{\r\n                dispatch(fetchExtraInfoFailed())\r\n            }\r\n        } catch (error) {\r\n            dispatch(fetchExtraInfoFailed())\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\nexport const fetchExtraInfoSuccess = (data) => ({\r\n    \r\n    type: actionTypes.FETCH_EXTRA_INFO_SUCCESS,\r\n    data: data\r\n\r\n})\r\n\r\nexport const fetchExtraInfoFailed = () => ({\r\n    type: actionTypes.FETCH_EXTRA_INFO_FAILED,\r\n    \r\n})","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport './HomeHeader.scss';\r\nimport { languages } from '../../utils/constant';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { changeLanguageApp } from '../../store/actions/appActions';\r\nimport '../gird/gird.scss';\r\nimport { withRouter } from 'react-router';\r\n\r\n\r\nclass HomeHeader extends Component {\r\n\r\n    changeLanguage = (language) => {\r\n        this.props.changeLanguageAppRedux(language)\r\n    }\r\n\r\n    handleImgLogo = () =>{\r\n        this.props.history.push(`/home`)\r\n    }\r\n\r\n\r\n    handleOnClickClinic = () => {\r\n        this.props.history.push(`/header-clinic`)\r\n    }\r\n\r\n    handleOnClickSpecialty = () => {\r\n        this.props.history.push(`/header-specialty`)\r\n    }\r\n\r\n    handleOnClickDoctor = () => {\r\n        this.props.history.push(`/header-doctor`)\r\n    }\r\n\r\n    \r\n\r\n    render() {\r\n\r\n       \r\n        let language = this.props.language;\r\n        return (\r\n           < React.Fragment>\r\n            <div className=\"home-header-container\">\r\n                <div className=\"grid wide\">\r\n                    <div className=\"row center\">\r\n                        <div className=\"col l-4 c-8 \">\r\n                            <div className=\"left-content\">\r\n                               \r\n                                <div className=\"header-logo\" \r\n                                    onClick={() => this.handleImgLogo()}\r\n                                ></div>\r\n                                <span className='name-logo'>Booking Care</span>\r\n\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col l-6 m-0 c-0\">\r\n                            <div className=\"center-container\">\r\n                                <div className='center-content'>\r\n                                    <span \r\n                                    onClick={() => this.handleOnClickSpecialty()}\r\n                                    > \r\n                                        <FormattedMessage id =\"home-header.specialist\"/> \r\n                                    </span>\r\n                                           \r\n                                </div>           \r\n        \r\n                                <div className='center-content' >\r\n                                    <span onClick={() => this.handleOnClickClinic()}>\r\n                                        <FormattedMessage id =\"home-header.health-facility\"/> \r\n                                    </span>\r\n                              \r\n                                </div>           \r\n\r\n                                <div className='center-content'>\r\n                                    <span\r\n                                    onClick={() => this.handleOnClickDoctor()}\r\n                                    \r\n                                    > <FormattedMessage id =\"home-header.doctor\"/></span>\r\n                                          \r\n                                    </div>           \r\n    \r\n                                         \r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col l-2 c-4 \">\r\n                          \r\n                                <div className=\"right-content\">\r\n                                    <div className=\"right-content-support \">\r\n                                        <a href=\"https://bookingcare.vn/hotro\">\r\n                                            <i className=\"fas fa-question-circle right-content-icon\"></i>\r\n                                            <span className='support-text c-0' > <FormattedMessage id =\"header-banner.support\"/></span>      \r\n                                        </a>\r\n                                                        \r\n                                    </div>\r\n\r\n                                    <div className={language === languages.VI ? 'language-vi active' : 'language-vi'}>\r\n                                        <span \r\n                                        onClick={\r\n                                            () => {\r\n                                                this.changeLanguage(languages.VI)\r\n                                            }\r\n                                        }\r\n                                    \r\n                                        >VN</span>\r\n                          \r\n                                    </div> \r\n\r\n                                    <div className={language === languages.EN ? 'language-en active' : 'language-en'}>\r\n                                        <span\r\n                                        onClick={\r\n                                            () => {\r\n                                                this.changeLanguage(languages.EN)\r\n                                            }\r\n                                        }\r\n                                        >\r\n                                        EN</span>\r\n                            \r\n                                  \r\n                                    </div>\r\n                                </div>\r\n\r\n                         \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div> \r\n\r\n            {this.props.isShowBanner === true && \r\n                <div className=\"home-header-banner\">\r\n                    <div className=\"header-banner__up\">\r\n                        <div className=\"header-banner__title-one\">\r\n                            <FormattedMessage id =\"banner.title-one\"/>\r\n                        </div>\r\n                        <div className=\"header-banner__title-tow\">\r\n                            <FormattedMessage id =\"banner.title-two\"/>\r\n                        \r\n                        </div>\r\n                        <div className=\"header-banner__search \"\r\n                        \r\n                        onClick={() => this.handleOnClickSpecialty()}\r\n                        >\r\n                            <i className=\"fas fa-search banner__search-icon\" \r\n\r\n                            ></i>\r\n                            <input type=\"text\" className='banner__search-input'  placeholder='Tìm chuyên khoa khám bệnh'/>\r\n                            \r\n                        </div>\r\n                    </div>\r\n                \r\n                    <div className=\"header-banner__dow\">\r\n                        <div className=\"grid wide\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col l-3 c-0\">\r\n                                    <div className=\"dow__footer-menu\">\r\n                                        <div className=\"footer-menu__img footer-img\" ></div>\r\n                                        <span className='footer-menu__title'> <FormattedMessage id =\"header-banner.specialized\"/></span>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col l-3 c-0\">\r\n                                    <div className=\"dow__footer-menu\">\r\n                                        <div className=\"footer-menu__img_1 footer-img\" ></div>\r\n                                        <span className='footer-menu__title'><FormattedMessage id =\"header-banner.remote-examination\"/></span>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col l-3 c-0\">\r\n                                    <div className=\"dow__footer-menu\">\r\n                                        <div className=\"footer-menu__img_2 footer-img\" ></div>\r\n                                        <span className='footer-menu__title'><FormattedMessage id =\"header-banner.general-examination\"/></span>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col l-3 c-0\">\r\n                                    <div className=\"dow__footer-menu\">\r\n                                        <div className=\"footer-menu__img_3 footer-img\" ></div>\r\n                                        <span className='footer-menu__title'><FormattedMessage id =\"header-banner.medical-tests\"/></span>\r\n                                    </div>\r\n                                </div>\r\n                                \r\n                                \r\n                                \r\n                            </div>\r\n                        </div>\r\n\r\n                    \r\n                    </div>\r\n                \r\n                </div>\r\n            }\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isLoggedIn: state.user.isLoggedIn,\r\n       \r\n        language: state.app.language\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        changeLanguageAppRedux: (language) => dispatch(changeLanguageApp(language))\r\n    };\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(HomeHeader));\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport './HomeFooter.scss';\r\nimport '../gird/gird.scss';\r\n\r\n\r\n\r\n\r\nclass HomeFooter extends Component {\r\n\r\n    render() {\r\n      \r\n      \r\n        return (\r\n            < React.Fragment>\r\n                <div className=\"footer-container\">\r\n                    <div className=\"grid wide\">\r\n                        <div className=\"footer-content\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col l-6  c-12\">\r\n                                    <div className=\"footer-content__left\">\r\n                                        <div className=\"left-content\">\r\n                                            <div className=\"content__left-img\"></div>\r\n                                            <span className='name-logo'>Booking Care</span>\r\n                                        </div>\r\n                                        \r\n                                         \r\n                                        <div className=\"content__left-header\">\r\n                                            <div className=\"img-map\"></div>\r\n                                            <div className=\"text-map\"></div>\r\n                                        </div>\r\n                                            <div className=\"content__left-address\">\r\n                                        <div className=\"img-check\">203 - Hoàng Gia- Tổ 6- Tân Thịnh- Thái Nguyên</div>\r\n                                            <div className=\"text-map\">Phòng khám nhi khoa Hoàng Gia.</div>\r\n                                            <div className=\"text-map\">Hotline: 0972385115</div>\r\n                                        </div>\r\n                                        <div className=\"content__left-dk\"></div>\r\n                                    </div>\r\n                                </div>\r\n                             \r\n                                <div className=\"col l-6  c-12\">\r\n                                    <div className=\"footer-content-right\">\r\n                                        <div className=\"content-right__header-body\">\r\n                                            Đối tác bảo trợ nội dung\r\n                                        </div>\r\n                                        <div className=\"content-right__header\">\r\n                                            Phòng khám nhi khoa Hoàng Gia\r\n                                        </div>\r\n                                        <div className=\"content-right__footer\">\r\n                                            Bảo trợ chuyên mục nội dung y khoa nhỉ\r\n                                        </div>\r\n\r\n                                        <div className=\"content-right__header\">\r\n                                            Vinmec \r\n                                        </div>\r\n                                        <div className=\"content-right__footer\">\r\n                                            Bảo trợ chuyên mục nội dung “Sống khoe suốt đời”\r\n                                        </div>\r\n\r\n                                    </div>\r\n                               </div>\r\n                            </div>  \r\n                            \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"footer-end\">\r\n                     <div className=\"grid wide\">\r\n                        <div className=\"footer-end-content\">\r\n                            <div className=\"row footer-center\">\r\n                                <div className=\"col l-6 c-12 m-6\">\r\n                                     <div className=\"text-footer-end\">Copy booking care by @2023</div>\r\n                                </div>\r\n        \r\n                                <div className=\"col l-4 c-0 m-6\">\r\n                                    <div className=\"logo_footer\">\r\n                                        <div className=\"img-facebook\"></div>\r\n                                        <div className=\"img-youtube\"></div>\r\n                                    </div>\r\n                               </div>\r\n                            </div>  \r\n                            \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n           \r\n           </React.Fragment>\r\n            \r\n            \r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isLoggedIn: state.user.isLoggedIn\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HomeFooter);\r\n","import actionTypes from '../actions/actionTypes';\r\n\r\nconst initContentOfConfirmModal = {\r\n    isOpen: false,\r\n    messageId: \"\",\r\n    handleFunc: null,\r\n    dataFunc: null\r\n}\r\n\r\nconst initialState = {\r\n    started: true,\r\n    language: 'vi',\r\n    systemMenuPath: '/system/user-manage',\r\n    contentOfConfirmModal: {\r\n        ...initContentOfConfirmModal\r\n    }\r\n}\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.APP_START_UP_COMPLETE: \r\n            return {\r\n                ...state,\r\n                started: true\r\n            }\r\n        case actionTypes.SET_CONTENT_OF_CONFIRM_MODAL: \r\n            return {\r\n                ...state,\r\n                contentOfConfirmModal: {\r\n                    ...state.contentOfConfirmModal,\r\n                    ...action.contentOfConfirmModal\r\n                }\r\n            }\r\n        case actionTypes.CHANGE_LANGUAGE: \r\n            return {\r\n                ...state,\r\n                language: action.language,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default appReducer;","import actionTypes from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n    isLoggedIn: false,\r\n    userInfo: null\r\n}\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.USER_LOGIN_SUCCESS:\r\n        \r\n            return {\r\n                ...state,\r\n                isLoggedIn: true,\r\n                userInfo: action.userInfo\r\n            }\r\n        case actionTypes.USER_LOGIN_FAIL:\r\n            return {\r\n                ...state,\r\n                isLoggedIn: false,\r\n                userInfo: null\r\n            }\r\n        case actionTypes.PROCESS_LOGOUT:\r\n            return {\r\n                ...state,\r\n                isLoggedIn: false,\r\n                userInfo: null\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default appReducer;","import actionTypes from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n    isLoadingGender : false,\r\n    isLoadingPosition: false,\r\n    isLoadingRole: false,\r\n    isLoadingRequired : false,\r\n    genders: [],\r\n    roles: [],\r\n    positions: [],\r\n    users: [],\r\n    topDoctors: [],\r\n    allDoctors: [],\r\n    timeDoctor: [],\r\n    allRequired: [],\r\n    extraInfo: [],\r\n}\r\n\r\nconst adminReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        \r\n        case actionTypes.FETCH_GENDER_START:\r\n          \r\n            state.isLoadingGender = true;\r\n            return {\r\n                ...state,\r\n               \r\n            }\r\n        case actionTypes.FETCH_GENDER_SUCCESS:\r\n     \r\n      \r\n            state.genders = action.data\r\n            state.isLoadingGender = false;\r\n            return {\r\n                ...state\r\n               \r\n            }\r\n        case actionTypes.FETCH_GENDER_FAILED:\r\n    \r\n            state.genders = [];\r\n            state.isLoadingGender = false;\r\n\r\n            return {\r\n                ...state\r\n               \r\n            }\r\n\r\n            ////\r\n\r\n            case actionTypes.FETCH_REQUIRE_DOCTOR_START:\r\n                \r\n            state.isLoadingRequired = true;\r\n            return {\r\n                ...state,\r\n               \r\n            }\r\n        case actionTypes.FETCH_REQUIRE_DOCTOR_SUCCESS:\r\n          \r\n        \r\n            state.allRequired = action.data\r\n            state.isLoadingRequired = false;\r\n            return {\r\n                ...state\r\n               \r\n            }\r\n        case actionTypes.FETCH_REQUIRE_DOCTOR_FAILED:\r\n    \r\n            state.allRequired = [];\r\n            state.isLoadingRequired = false;\r\n\r\n            return {\r\n                ...state\r\n               \r\n            }\r\n      \r\n\r\n            //case position\r\n            case actionTypes.FETCH_POSITION_START:\r\n    \r\n            state.isLoadingPosition = true;\r\n            return {\r\n                ...state,\r\n               \r\n            }\r\n            case actionTypes.FETCH_POSITION_SUCCESS:\r\n  \r\n            state.positions = action.data;\r\n            state.isLoadingPosition = false;\r\n            return {\r\n                ...state\r\n               \r\n            }\r\n\r\n            case actionTypes.FETCH_POSITION_FAILED:\r\n           \r\n            state.positions = [];\r\n            state.isLoadingPosition = false;\r\n\r\n            return {\r\n                ...state\r\n            }\r\n\r\n             //case role\r\n             case actionTypes.FETCH_ROLE_START:\r\n               \r\n                state.isLoadingRole = true;\r\n                return {\r\n                    ...state,\r\n                    \r\n             }\r\n             case actionTypes.FETCH_ROLE_SUCCESS:\r\n                \r\n                state.roles = action.data\r\n                state.isLoadingRole = false;\r\n                return {\r\n                    ...state\r\n                    \r\n                }\r\n             case actionTypes.FETCH_ROLE_FAILED:\r\n                 \r\n                state.roles = [];\r\n                state.isLoadingRole = false;\r\n    \r\n                return {\r\n                    ...state\r\n                }\r\n            \r\n            //case fetch all users\r\n            case actionTypes.FETCH_ALL_USERS_SUCCESS:\r\n            \r\n                state.users = action.users;\r\n                return {\r\n                    ...state\r\n                }\r\n\r\n            case actionTypes.FETCH_ALL_USERS_FAILED:\r\n                \r\n                state.users = [];\r\n                return {\r\n                    ...state\r\n                }\r\n            \r\n\r\n\r\n            case actionTypes.FETCH_TOP_DOCTOR_SUCCESS:\r\n              \r\n               \r\n                state.topDoctors = action.dataDoctor;\r\n                return {\r\n                    ...state\r\n                }\r\n\r\n            case actionTypes.FETCH_TOP_DOCTOR_FAILED:\r\n                state.topDoctors = [];\r\n                return {\r\n                    ...state\r\n                }\r\n\r\n\r\n                \r\n\r\n                // get all doc doctor\r\n            case actionTypes.FETCH_ALL_DOCTOR_SUCCESS:\r\n                state.allDoctors = action.dataDR;\r\n                return {\r\n                    ...state\r\n                }\r\n\r\n            case actionTypes.FETCH_ALL_DOCTOR_FAILED:\r\n                state.allDoctors = [];\r\n                return {\r\n                    ...state\r\n                }\r\n\r\n\r\n            case actionTypes.FETCH_ALLCODE_SCHEDULE_TIME_SUCCESS:\r\n                \r\n                state.timeDoctor = action.dataTime;\r\n                \r\n                    return {\r\n                    ...state\r\n                }\r\n    \r\n            case actionTypes.FETCH_ALLCODE_SCHEDULE_TIME_FAILED:\r\n                state.timeDoctor = [];\r\n                return {\r\n                    ...state\r\n                }\r\n\r\n                ///\r\n\r\n\r\n\r\n            case actionTypes.FETCH_EXTRA_INFO_SUCCESS:\r\n     \r\n                state.extraInfo = action.data;\r\n                return {\r\n                    ...state\r\n                }\r\n\r\n            case actionTypes.FETCH_EXTRA_INFO_FAILED:\r\n                state.extraInfo = [];\r\n                return {\r\n                    ...state\r\n                }\r\n\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default adminReducer;","import {combineReducers} from 'redux';\r\nimport { connectRouter } from 'connected-react-router';\r\n\r\nimport appReducer from \"./appReducer\";\r\n\r\nimport userReducer from \"./userReducer\";\r\nimport adminReducer from \"./adminReducer\";\r\n\r\nimport autoMergeLevel2 from 'redux-persist/lib/stateReconciler/autoMergeLevel2';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport { persistReducer } from 'redux-persist';\r\n\r\nconst persistCommonConfig = {\r\n    storage: storage,\r\n    stateReconciler: autoMergeLevel2,\r\n};\r\n\r\n\r\n\r\nconst userPersistConfig = {\r\n    ...persistCommonConfig,\r\n    key: 'user',\r\n    whitelist: ['isLoggedIn', 'userInfo']\r\n};\r\n\r\nconst appPersistConfig = {\r\n    ...persistCommonConfig,\r\n    key: 'app',\r\n    whitelist: ['language']\r\n}\r\n\r\nexport default (history) => combineReducers({\r\n    router: connectRouter(history),\r\n\r\n    user: persistReducer(userPersistConfig, userReducer),\r\n    app: persistReducer(appPersistConfig, appReducer),\r\n\r\n    admin: adminReducer\r\n})","import { logger } from \"redux-logger\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport { routerMiddleware } from 'connected-react-router';\r\nimport { createBrowserHistory } from 'history';\r\n\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\nimport { createStateSyncMiddleware } from 'redux-state-sync';\r\nimport { persistStore } from 'redux-persist';\r\n\r\nimport createRootReducer from './store/reducers/rootReducer';\r\nimport actionTypes from './store/actions/actionTypes';\r\n\r\nconst environment = process.env.NODE_ENV || \"development\";\r\nlet isDevelopment = environment === \"development\";\r\n\r\n//hide redux logs\r\nisDevelopment = false;\r\n\r\n\r\nexport const history = createBrowserHistory({ basename: process.env.REACT_APP_ROUTER_BASE_NAME });\r\n\r\nconst reduxStateSyncConfig = {\r\n    whitelist: [\r\n        actionTypes.APP_START_UP_COMPLETE,\r\n        actionTypes.CHANGE_LANGUAGE\r\n    ]\r\n}\r\n\r\nconst rootReducer = createRootReducer(history);\r\nconst middleware = [\r\n    routerMiddleware(history),\r\n    thunkMiddleware,\r\n    createStateSyncMiddleware(reduxStateSyncConfig),\r\n]\r\nif (isDevelopment) middleware.push(logger);\r\n\r\nconst composeEnhancers = (isDevelopment && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ : compose;\r\n\r\nconst reduxStore = createStore(\r\n    rootReducer,\r\n    composeEnhancers(applyMiddleware(...middleware)),\r\n)\r\n\r\nexport const dispatch = reduxStore.dispatch;\r\n\r\nexport const persistor = persistStore(reduxStore);\r\n\r\nexport default reduxStore;","import locationHelperBuilder from \"redux-auth-wrapper/history4/locationHelper\";\r\nimport { connectedRouterRedirect } from \"redux-auth-wrapper/history4/redirect\";\r\n\r\nconst locationHelper = locationHelperBuilder({});\r\n\r\nexport const userIsAuthenticated = connectedRouterRedirect({\r\n    authenticatedSelector: state => state.user.isLoggedIn,\r\n    wrapperDisplayName: 'UserIsAuthenticated',\r\n    redirectPath: '/login'\r\n});\r\n\r\nexport const userIsNotAuthenticated = connectedRouterRedirect({\r\n    // Want to redirect the user when they are authenticated\r\n    authenticatedSelector: state => !state.user.isLoggedIn,\r\n    wrapperDisplayName: 'UserIsNotAuthenticated',\r\n    redirectPath: (state, ownProps) => locationHelper.getRedirectQueryParam(ownProps) || '/',\r\n    allowRedirectBack: false\r\n});","import React, { Component } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nclass Home extends Component {\r\n\r\n    render() {\r\n        const { isLoggedIn } = this.props;\r\n        let linkToRedirect = isLoggedIn ? '/system/user-manage' : '/home';\r\n\r\n        return (\r\n            <Redirect to={linkToRedirect} />\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isLoggedIn: state.user.isLoggedIn\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { push } from \"connected-react-router\";\r\n\r\nimport * as actions from \"../../store/actions\";\r\n\r\nimport './Login.scss';\r\nimport { FormattedMessage } from 'react-intl';\r\n\r\nimport { handleLoginApi } from '../../services/userServices';\r\n\r\n\r\n\r\n\r\nclass Login extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            userName: '',\r\n            password: '',\r\n            isShowPassWord: true,\r\n            errMessage: '',\r\n        }\r\n    }\r\n\r\n    handleOnChangeUserName = (event) => {\r\n        this.setState({\r\n            userName: event.target.value\r\n        })\r\n     \r\n        \r\n    }\r\n    handleOnChangePassWord =  (event) => {\r\n        this.setState({\r\n            password: event.target.value\r\n        })\r\n      \r\n    }\r\n\r\n    handleLogin = async () => {\r\n       this.setState({\r\n            errMessage: ''\r\n       })\r\n        try {\r\n            let data = await handleLoginApi(this.state.userName, this.state.password);\r\n            if(data && data.errCode !==0){\r\n                \r\n                this.setState({\r\n                    errMessage: data.message ,\r\n                })\r\n            }\r\n            if(data && data.errCode ===0){\r\n               this.props.userLoginSuccess(data.user);\r\n            }\r\n\r\n        } catch (error) {\r\n            if(error.response){\r\n                if(error.response.data){\r\n                    this.setState({\r\n                        errMessage: error.response.data.message\r\n                    })\r\n                }\r\n            }\r\n         \r\n        }\r\n        \r\n    }\r\n\r\n    handleShowHidePassWord= () => {\r\n        this.setState({\r\n            isShowPassWord: !this.state.isShowPassWord,\r\n        })\r\n    }\r\n\r\n    handleKeyDown = (event) => {\r\n        if (event.key === 'Enter' || event.keyCode === 13){\r\n            this.handleLogin()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        \r\n        return (\r\n            <div className='login-bg'>\r\n                <div className='login-container'>\r\n                    <h1>Login</h1>\r\n      \r\n                    <div className=\"form-group \">\r\n                        <label className='label-text' >User Name</label>\r\n                        <input type=\"text\" className=\"form-control user-\" id=\"formGroupExampleInput\" placeholder=\"User Name\"\r\n                        \r\n                        value={this.state.userName}\r\n                        onChange={\r\n                            (event) => {\r\n                                this.handleOnChangeUserName(event)\r\n                            }\r\n                        }\r\n                        \r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group password\">\r\n                        <label className='label-text' >Pass Word</label>\r\n                        \r\n                        <input type={this.state.isShowPassWord ? 'test' : 'password'}\r\n                        className=\"form-control\"  placeholder=\"Pass Word\"\r\n                        \r\n                        onChange={\r\n                            (event) => {\r\n                                this.handleOnChangePassWord(event)\r\n                            }\r\n\r\n                        }\r\n                        onKeyDown={(event) => this.handleKeyDown(event)}\r\n\r\n                        />\r\n                        <span \r\n                            onClick={\r\n                                () => {\r\n                                    this.handleShowHidePassWord();\r\n                                }\r\n                            }\r\n\r\n                        >\r\n                        <i className={\r\n                            this.state.isShowPassWord ? 'far fa-eye-slash fa-lg': 'far fa-eye fa-lg'\r\n                        }>\r\n\r\n                        </i>\r\n                        </span>\r\n                       \r\n                    </div>\r\n\r\n                        <div style={{color: 'red'}}>\r\n                            {this.state.errMessage}\r\n                        </div>\r\n\r\n                    <button className=\"btn btn-primary btn-login\"\r\n                    onClick={\r\n                        () => {\r\n                            this.handleLogin();\r\n                        }\r\n                    }\r\n                    \r\n                    \r\n                    \r\n                    >Login</button>\r\n               \r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        lang: state.app.language\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        navigate: (path) => dispatch(push(path)),\r\n     \r\n        // adminLoginFail: () => dispatch(actions.adminLoginFail()),\r\n        userLoginSuccess: (userInfo) => dispatch(actions.userLoginSuccess(userInfo)),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\r\n","import React, { Component } from 'react';\r\nimport Flatpickr from 'react-flatpickr';\r\nimport moment from 'moment';\r\n\r\nimport { KeyCodeUtils } from \"../../utils\";\r\nimport './DatePicker.scss';\r\n\r\n// const CustomInput = ({ value, defaultValue, inputRef, onInputChange, onInputBlur, ...props }) => {\r\n//     return <input {...props} className='custom-form-control custom-date-input' defaultValue={defaultValue} ref={inputRef}\r\n//         onChange={onInputChange}\r\n//         onBlur={onInputBlur}\r\n//     />;\r\n// };\r\n\r\nclass DatePicker extends Component {\r\n\r\n    flatpickrNode = null;\r\n\r\n    nodeRef = element => {\r\n        this.flatpickr = element && element.flatpickr;\r\n        this.flatpickrNode = element && element.node;\r\n        if (this.flatpickrNode) {\r\n            this.flatpickrNode.addEventListener('blur', this.handleBlur);\r\n            this.flatpickrNode.addEventListener('keydown', this.handlerKeyDown);\r\n        }\r\n    };\r\n\r\n    handlerKeyDown = (event) => {\r\n        const keyCode = event.which || event.keyCode;\r\n        if (keyCode === KeyCodeUtils.ENTER) {\r\n            event.preventDefault();\r\n            const { onChange } = this.props;\r\n            const value = event.target.value;\r\n\r\n            // Take the blur event and process the string value\r\n            const valueMoment = moment(value, 'DD/MM/YYYY');\r\n            onChange([valueMoment.toDate(), valueMoment.toDate()]);\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        if (this.flatpickrNode) {\r\n            this.flatpickrNode.removeEventListener('blur', this.handleBlur);\r\n            this.flatpickrNode.removeEventListener('keydown', this.handlerKeyDown);\r\n        }\r\n    }\r\n\r\n    handleBlur = (event) => {\r\n        const { onChange } = this.props;\r\n        const value = event.target.value;\r\n\r\n        // Take the blur event and process the string value\r\n        event.preventDefault();\r\n        const valueMoment = moment(value, 'DD/MM/YYYY');\r\n        onChange([valueMoment.toDate(), valueMoment.toDate()]);\r\n    };\r\n\r\n    onOpen = () => {\r\n        if (this.flatpickrNode) {\r\n            this.flatpickrNode.blur();\r\n        }\r\n    }\r\n\r\n    close() {\r\n        this.flatpickr.close();\r\n    }\r\n\r\n    checkDateValue = (str, max) => {\r\n        if (str.charAt(0) !== '0' || str === '00') {\r\n            var num = parseInt(str);\r\n            if (isNaN(num) || num <= 0 || num > max) num = 1;\r\n            str = num > parseInt(max.toString().charAt(0)) && num.toString().length === 1 ? '0' + num : num.toString();\r\n        };\r\n        return str;\r\n    }\r\n\r\n    // autoFormatonBlur = (value) => {\r\n    //     var input = value;\r\n    //     var values = input.split('/').map(function (v, i) {\r\n    //         return v.replace(/\\D/g, '')\r\n    //     });\r\n    //     var output = '';\r\n\r\n    //     if (values.length == 3) {\r\n    //         var year = values[2].length !== 4 ? parseInt(values[2]) + 2000 : parseInt(values[2]);\r\n    //         var month = parseInt(values[0]) - 1;\r\n    //         var day = parseInt(values[1]);\r\n    //         var d = new Date(year, month, day);\r\n    //         if (!isNaN(d)) {\r\n    //             //document.getElementById('result').innerText = d.toString();\r\n    //             var dates = [d.getMonth() + 1, d.getDate(), d.getFullYear()];\r\n    //             output = dates.map(function (v) {\r\n    //                 v = v.toString();\r\n    //                 return v.length == 1 ? '0' + v : v;\r\n    //             }).join(' / ');\r\n    //         };\r\n    //     };\r\n    //     // this.value = output;\r\n    //     return output;\r\n    // }\r\n\r\n    autoFormatOnChange = (value, seperator) => {\r\n        var input = value;\r\n\r\n        let regexForDeleting = new RegExp(`\\\\D\\\\${seperator}$`);\r\n\r\n        //if (/\\D\\/$/.test(input)) input = input.substr(0, input.length - 3); // dat.nt: Xóa thêm 1 ký tự nếu xóa dấu cách sau / (VD: 12 / 12 /=> 12 / 1)\r\n\r\n        if (regexForDeleting.test(input)) input = input.substr(0, input.length - 3);\r\n\r\n        var values = input.split(seperator).map(function (v) {\r\n            return v.replace(/\\D/g, '')\r\n        });\r\n\r\n        if (values[0]) values[0] = this.checkDateValue(values[0], 31);\r\n        if (values[1]) values[1] = this.checkDateValue(values[1], 12);\r\n        var output = values.map(function (v, i) {\r\n            return v.length === 2 && i < 2 ? v + ' ' + seperator + ' ' : v;\r\n        });\r\n        return output.join('').substr(0, 14);\r\n    }\r\n\r\n    onInputChange = (e) => {\r\n        if (this.DISPLAY_FORMAT === this.DATE_FORMAT_AUTO_FILL) {\r\n            let converted = this.autoFormatOnChange(e.target.value, this.SEPERATOR);\r\n            e.target.value = converted;\r\n        }\r\n    }\r\n\r\n    onInputBlur = (e) => {\r\n    }\r\n\r\n    //dat.nt : Auto Fill cho dạng ngăn cách và format cụ thể (seperator có thể dc thay thế)\r\n    SEPERATOR = \"/\";\r\n    DATE_FORMAT_AUTO_FILL = \"d/m/Y\"; // Format không thay đổi\r\n\r\n    // dat.nt : Format ngày hiển thị\r\n    DISPLAY_FORMAT = \"d/m/Y\";\r\n\r\n    render() {\r\n        const { value, onChange, minDate, onClose, ...otherProps } = this.props;\r\n        const options = {\r\n            dateFormat: this.DISPLAY_FORMAT,\r\n            allowInput: true,\r\n            disableMobile: true,\r\n            onClose: onClose,\r\n            onOpen: this.onOpen\r\n        };\r\n        if (minDate) {\r\n            options.minDate = minDate;\r\n        }\r\n        return (\r\n            <Flatpickr\r\n                ref={this.nodeRef}\r\n                value={value}\r\n                onChange={onChange}\r\n                options={options}\r\n                // render={\r\n                //     ({ defaultValue, value, ...props }, ref) => {\r\n                //         return <CustomInput defaultValue={defaultValue} inputRef={ref} onInputChange={this.onInputChange} onInputBlur={this.onInputBlur} />\r\n                //     }\r\n                // }\r\n                {...otherProps}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default DatePicker;\r\n","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect, Route, Switch } from 'react-router-dom';\r\nimport './ManageSchedule.scss'\r\nimport { FormattedMessage } from 'react-intl';\r\nimport * as actions from '../../../store/actions'\r\nimport Select from 'react-select';\r\nimport { CRUD_ACTIONS, languages, dateFormat } from '../../../utils/constant';\r\nimport DatePicker from '../../../components/Input/DatePicker';\r\nimport moment from 'moment';\r\nimport {  toast } from 'react-toastify';\r\nimport _ from 'lodash'\r\nimport { saveBulkScheduleDoctor, getDetailDoctor } from '../../../services/userServices';\r\n\r\n\r\nclass ManageSchedule extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n    \r\n            arrDoctor: [],\r\n            selectedDoctor: {},\r\n            currentDate: '',\r\n            allTimeDoctor: [],\r\n            rangeTime: [],\r\n            doctorId: '',\r\n            roleId: '',\r\n            nameDoctor: ''\r\n  \r\n\r\n        }\r\n    }\r\n \r\n\r\n    async componentDidMount () {\r\n        this.props.fetchAllDoctorRedux();\r\n        this.props.fetchAllTimeDoctorRedux();\r\n\r\n\r\n        let res = await getDetailDoctor(this.props.userInfo.id);\r\n        \r\n        \r\n        this.setState({\r\n            roleId: res.data.roleID,\r\n            nameDoctor: this.buildNameDoctor(res.data)\r\n        })\r\n\r\n      \r\n      \r\n\r\n\r\n       \r\n       \r\n    }\r\n\r\n    buildNameDoctor = (data) => {\r\n        let language = this.props.language;\r\n        let labelVi = `${data.lastName} ${data.firstName}`;\r\n        let labelEn = `${data.firstName} ${data.lastName} `;\r\n\r\n        let nameDoctor = language === languages.VI ? labelVi : labelEn\r\n\r\n        return nameDoctor;\r\n    }\r\n\r\n    componentDidUpdate(prevProps,prevState) {\r\n        if(prevProps.allDoctor !== this.props.allDoctor){\r\n            let dataSelect = this.buildDataInputSelect(this.props.allDoctor)\r\n            this.setState({\r\n                arrDoctor: dataSelect\r\n            })\r\n\r\n\r\n        }\r\n        if(prevProps.allTimeDoctor !== this.props.allTimeDoctor){\r\n            let data = this.props.allTimeDoctor;\r\n\r\n            if(data && data.length > 0){\r\n               data = data.map(item=> ({...item, isSelected: false}))\r\n            }\r\n\r\n            this.setState({\r\n                rangeTime: data\r\n            })\r\n\r\n\r\n\r\n\r\n        }\r\n      \r\n    }\r\n\r\n    buildDataInputSelect = (inputData) => {\r\n        let result = [];\r\n        let {language} = this.props\r\n    \r\n        if(inputData && inputData.length > 0){\r\n            inputData.map((item, index) => {\r\n                let object = {};\r\n                let labelVi = `${item.lastName} ${item.firstName}`\r\n                let labelEn = `${item.firstName} ${item.lastName} `\r\n                object.label = language === languages.VI ? labelVi : labelEn\r\n\r\n                object.value = item.id;\r\n                result.push(object)\r\n            })\r\n           \r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    handleChange = async(selectedOption) => {\r\n        this.setState({ selectedDoctor:  selectedOption});\r\n    };\r\n\r\n    handleOnChangeDatePicket = (date) => {\r\n        this.setState({\r\n            currentDate: date[0]\r\n        })\r\n    }\r\n\r\n\r\n    handleClickBtnTime = (time) => {\r\n        let {rangeTime} = this.state;\r\n        if (rangeTime && rangeTime.length > 0){\r\n            let data = rangeTime.map(item => {\r\n                if(item.id === time.id) item.isSelected = !item.isSelected\r\n                return item;\r\n            })\r\n            this.setState({\r\n                rangeTime: data\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    handSaveSchedule = async() => {\r\n\r\n     \r\n        let result = [];\r\n        let {rangeTime, selectedDoctor, currentDate, } = this.state;\r\n        let doctorIdOne = this.props.userInfo.id;\r\n        let roleIDUser = this.props.userInfo.roleID;\r\n        if(!currentDate){\r\n            toast.error('Time error!');\r\n            return;\r\n        }\r\n        // if(selectedDoctor && _.isEmpty(selectedDoctor)){\r\n        //     toast.error('Invalid Selected Doctor!');\r\n        //     return;\r\n        // }\r\n\r\n        let formattedDate = new Date(currentDate).getTime();\r\n     \r\n\r\n        if(rangeTime && rangeTime.length > 0){\r\n            let selectedTime = rangeTime.filter(item => item.isSelected === true);\r\n            if(selectedTime && selectedTime.length > 0){\r\n                selectedTime.map((time) => {\r\n                    let object = {};\r\n                    object.doctorId =  roleIDUser === 'R2' ? doctorIdOne : selectedDoctor.value //this.props.userInfo.id//;\r\n                    object.date = formattedDate;\r\n                    object.timeType = time.keyMap;\r\n                    result.push(object);\r\n                })\r\n\r\n                \r\n               \r\n            }else{\r\n                toast.error('Invalid Selected Time!');\r\n                return;\r\n            }\r\n          \r\n\r\n           let res = await saveBulkScheduleDoctor({\r\n                arrSchedule: result,\r\n                doctorId: roleIDUser === 'R2' ? doctorIdOne : selectedDoctor.value,\r\n                formattedDate: formattedDate\r\n            });\r\n            \r\n            \r\n            if(res && res.errCode === 0){\r\n                toast.success(' Save info success!');\r\n            }else{\r\n                toast.error('error saveBulkScheduleDoctor!');\r\n            }\r\n            \r\n        }\r\n\r\n        \r\n    }\r\n\r\n    handleChangeInput = (event) => {\r\n        \r\n    }\r\n    render() {\r\n        let {rangeTime, roleId} = this.state\r\n        let {language} = this.props\r\n     \r\n      \r\n\r\n        let yesterday = new Date(new Date().setDate(new Date().getDate()-1));\r\n\r\n        console.log(yesterday);\r\n        return (\r\n\r\n            <React.Fragment>\r\n               <div className=\"manage-schedule__container\">\r\n                    <div className=\"m-s-title\">\r\n                        <FormattedMessage id = \"manage-schedule.title\"/>\r\n                    </div>\r\n\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-6 form-group\">\r\n                                <label> <FormattedMessage id = \"manage-schedule.choose-doctor\"/></label>\r\n                               {roleId && roleId === 'R1' ? <Select\r\n                            \r\n                                    onChange={this.handleChange}\r\n                                    value={this.state.selectedDoctor}\r\n                                    options={this.state.arrDoctor}\r\n                            \r\n                                />\r\n                                : \r\n                                    <input type=\"text\" className= 'form-control' \r\n                                    value={this.state.nameDoctor}\r\n                                    onChange={(event) =>this.handleChangeInput (event)}\r\n                                    />\r\n                                }\r\n                            </div>\r\n                            <div className=\"col-6 form-group\">\r\n                                <label > <FormattedMessage id = \"manage-schedule.choose-time\"/></label>\r\n                               <DatePicker \r\n                                    onChange={this.handleOnChangeDatePicket}\r\n                                    className= 'form-control'\r\n                                    value={this.state.currentDate}\r\n                                    minDate = {yesterday}\r\n                          \r\n                               />\r\n                            </div>\r\n                            <div className=\"col-12 pick-hour\">\r\n                             {\r\n                                rangeTime && rangeTime.length > 0 && \r\n                                rangeTime.map((item, index) => {\r\n                                    return(\r\n                                        <button className={item.isSelected === true ? 'btn btn-schedule active': 'btn btn-schedule '}  key={index}\r\n                                        \r\n                                        onClick={() => this.handleClickBtnTime(item)}\r\n                                        >\r\n\r\n                                            {language === languages.VI ? item.valueVi : item.valueEn}\r\n                                        </button>\r\n                                    )\r\n                                })\r\n                             }\r\n                            </div>\r\n\r\n                            <button className='btn btn-primary mt-4 ml-3'\r\n                            onClick={() => this.handSaveSchedule()}\r\n                            \r\n                            ><FormattedMessage id = \"manage-schedule.save\"/> </button>\r\n                        </div>\r\n                    </div>\r\n               </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        language: state.app.language,\r\n        allDoctor: state.admin.allDoctors,\r\n        isLoggedIn: state.user.isLoggedIn,\r\n        allTimeDoctor: state.admin.timeDoctor,\r\n        userInfo: state.user.userInfo,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        fetchAllDoctorRedux: () => dispatch(actions.fetchAllDoctor()),\r\n        fetchAllTimeDoctorRedux: () => dispatch(actions.fetchAllTimeDoctor()),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ManageSchedule);\r\n","import React, { Component, Fragment } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { connect } from 'react-redux';\r\n\r\nimport './Navigator.scss';\r\n\r\nclass MenuGroup extends Component {\r\n\r\n    render() {\r\n        const { name, children } = this.props;\r\n        return (\r\n            <li className=\"menu-group\">\r\n                <div className=\"menu-group-name\">\r\n                    <FormattedMessage id={name} />\r\n                </div>\r\n                <ul className=\"menu-list list-unstyled\">\r\n                    {children}\r\n                </ul>\r\n            </li>\r\n        );\r\n    }\r\n}\r\n\r\nclass Menu extends Component {\r\n\r\n    render() {\r\n        const { name, active, link, children, onClick, hasSubMenu, onLinkClick } = this.props;\r\n        return (\r\n            <li className={\"menu\" + (hasSubMenu ? \" has-sub-menu\" : \"\") + (\"\") + (active ? \" active\" : \"\")}>\r\n                {hasSubMenu ? (\r\n                    <Fragment>\r\n                        <span\r\n                            data-toggle=\"collapse\"\r\n                            className={\"menu-link collapsed\"}\r\n                            onClick={onClick}\r\n                            aria-expanded={\"false\"}\r\n                        >\r\n                            <FormattedMessage id={name} />\r\n                            <div className=\"icon-right\">\r\n                                <i className={\"far fa-angle-right\"} />\r\n                            </div>\r\n                        </span>\r\n                        <div>\r\n                            <ul className=\"sub-menu-list list-unstyled\">\r\n                                {children}\r\n                            </ul>\r\n                        </div>\r\n                    </Fragment>\r\n                ) : (\r\n                        <Link to={link} className=\"menu-link\" onClick={onLinkClick}>\r\n                            <FormattedMessage id={name} />\r\n                        </Link>\r\n                    )}\r\n            </li>\r\n        );\r\n    }\r\n}\r\n\r\nclass SubMenu extends Component {\r\n\r\n    getItemClass = path => {\r\n        return this.props.location.pathname === path ? \"active\" : \"\";\r\n    };\r\n\r\n    render() {\r\n        const { name, link, onLinkClick } = this.props;\r\n        return (\r\n            <li className={\"sub-menu \" + this.getItemClass(link)}>\r\n                <Link to={link} className=\"sub-menu-link\" onClick={onLinkClick}>\r\n                    <FormattedMessage id={name} />\r\n                </Link>\r\n            </li>\r\n        );\r\n    }\r\n}\r\n\r\nconst MenuGroupWithRouter = withRouter(MenuGroup);\r\nconst MenuWithRouter = withRouter(Menu);\r\nconst SubMenuWithRouter = withRouter(SubMenu);\r\n\r\nconst withRouterInnerRef = (WrappedComponent) => {\r\n\r\n    class InnerComponentWithRef extends React.Component {\r\n        render() {\r\n            const { forwardRef, ...rest } = this.props;\r\n            return <WrappedComponent {...rest} ref={forwardRef} />;\r\n        }\r\n    }\r\n\r\n    const ComponentWithRef = withRouter(InnerComponentWithRef, { withRef: true });\r\n\r\n    return React.forwardRef((props, ref) => {\r\n        return <ComponentWithRef {...props} forwardRef={ref} />;\r\n    });\r\n};\r\n\r\nclass Navigator extends Component {\r\n    state = {\r\n        expandedMenu: {}\r\n    };\r\n\r\n    toggle = (groupIndex, menuIndex) => {\r\n        const expandedMenu = {};\r\n        const needExpand = !(this.state.expandedMenu[groupIndex + '_' + menuIndex] === true);\r\n        if (needExpand) {\r\n            expandedMenu[groupIndex + '_' + menuIndex] = true;\r\n        }\r\n\r\n        this.setState({\r\n            expandedMenu: expandedMenu\r\n        });\r\n    };\r\n\r\n    isMenuHasSubMenuActive = (location, subMenus, link) => {\r\n        if (subMenus) {\r\n            if (subMenus.length === 0) {\r\n                return false;\r\n            }\r\n\r\n            const currentPath = location.pathname;\r\n            for (let i = 0; i < subMenus.length; i++) {\r\n                const subMenu = subMenus[i];\r\n                if (subMenu.link === currentPath) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (link) {\r\n            return this.props.location.pathname === link;\r\n        }\r\n\r\n        return false;\r\n    };\r\n\r\n    checkActiveMenu = () => {\r\n        const { menus, location } = this.props;\r\n        outerLoop:\r\n        for (let i = 0; i < menus.length; i++) {\r\n            const group = menus[i];\r\n            if (group.menus && group.menus.length > 0) {\r\n                for (let j = 0; j < group.menus.length; j++) {\r\n                    const menu = group.menus[j];\r\n                    if (menu.subMenus && menu.subMenus.length > 0) {\r\n                        if (this.isMenuHasSubMenuActive(location, menu.subMenus, null)) {\r\n                            const key = i + '_' + j;\r\n                            this.setState({\r\n                                expandedMenu: {\r\n                                    [key]: true\r\n                                }\r\n                            });\r\n                            break outerLoop;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.checkActiveMenu();\r\n    };\r\n\r\n    // componentWillReceiveProps(nextProps, prevState) {\r\n    //     const { location, setAccountMenuPath, setSettingMenuPath } = this.props;\r\n    //     const { location: nextLocation } = nextProps;\r\n    //     if (location !== nextLocation) {\r\n    //         let pathname = nextLocation && nextLocation.pathname;\r\n    //         if ((pathname.startsWith('/account/') || pathname.startsWith('/fds/account/'))) {\r\n    //             setAccountMenuPath(pathname);\r\n    //         }\r\n    //         if (pathname.startsWith('/settings/')) {\r\n    //             setSettingMenuPath(pathname);\r\n    //         };\r\n    //     };\r\n    // };\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        const { location } = this.props;\r\n        const { location: prevLocation } = prevProps;\r\n        if (location !== prevLocation) {\r\n            this.checkActiveMenu();\r\n        };\r\n    };\r\n\r\n    render() {\r\n        const { menus, location, onLinkClick } = this.props;\r\n        return (\r\n            <Fragment>\r\n                <ul className=\"navigator-menu list-unstyled\">\r\n                    {\r\n                        menus.map((group, groupIndex) => {\r\n                            return (\r\n                                <Fragment key={groupIndex}>\r\n                                    <MenuGroupWithRouter name={group.name}>\r\n                                        {group.menus ? (\r\n                                            group.menus.map((menu, menuIndex) => {\r\n                                                const isMenuHasSubMenuActive = this.isMenuHasSubMenuActive(location, menu.subMenus, menu.link);\r\n                                                const isSubMenuOpen = this.state.expandedMenu[groupIndex + '_' + menuIndex] === true;\r\n                                                return (\r\n                                                    <MenuWithRouter\r\n                                                        key={menuIndex}\r\n                                                        active={isMenuHasSubMenuActive}\r\n                                                        name={menu.name}\r\n                                                        link={menu.link}\r\n                                                        hasSubMenu={menu.subMenus}\r\n                                                        isOpen={isSubMenuOpen}\r\n                                                        onClick={() => this.toggle(groupIndex, menuIndex)}\r\n                                                        onLinkClick={onLinkClick}\r\n                                                    >\r\n                                                        {menu.subMenus && menu.subMenus.map((subMenu, subMenuIndex) => (\r\n                                                            <SubMenuWithRouter\r\n                                                                key={subMenuIndex}\r\n                                                                name={subMenu.name}\r\n                                                                link={subMenu.link}\r\n                                                                onClick={this.closeOtherExpand}\r\n                                                                onLinkClick={onLinkClick}\r\n                                                            />\r\n                                                        ))}\r\n                                                    </MenuWithRouter>\r\n                                                );\r\n                                            })\r\n                                        ) : null}\r\n                                    </MenuGroupWithRouter>\r\n                                </Fragment>\r\n                            );\r\n                        })\r\n                    }\r\n                </ul>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n    }\r\n}\r\n\r\nexport default withRouterInnerRef(connect(mapStateToProps, mapDispatchToProps)(Navigator));\r\n","export const adminMenu = [\r\n\r\n    // quan ly nguoi dung\r\n    { \r\n        name: 'menu.admin.manage-user',\r\n        menus: [\r\n            // {\r\n            //     name: 'menu.admin.crud',link: '/system/user-manage'\r\n            // },\r\n            {\r\n                name: 'menu.admin.crud-redux',link: '/system/user-redux'\r\n\r\n            },\r\n            {\r\n                name: 'menu.admin.manage-doctor',link: '/system/manage-doctor'\r\n                // subMenus: [\r\n                //     { name: 'menu.system.system-administrator.user-manage', link: '/system/user-manage' },\r\n                //     { name: 'menu.system.system-administrator.user-redux', link: '/system/user-redux' },\r\n                 \r\n                // ]\r\n\r\n            },\r\n            // {\r\n            //     name: 'menu.admin.manage-admin',link: '/system/user-admin'\r\n            // },\r\n            { \r\n                        name: 'menu.doctor.manage-schedule',link: '/doctor/manage-schedule'\r\n              \r\n            },\r\n            \r\n\r\n        ]\r\n    },\r\n    //quan ly phong kham\r\n    { \r\n        name: 'menu.admin.medical-facilities',\r\n        menus: [\r\n            {\r\n                name: 'menu.admin.manage-medical-facilities',link: '/system/manage-medical-facilities'\r\n            },\r\n            {\r\n                name: 'menu.admin.manage-update-clinic',link: '/system/manage-update-clinic'\r\n            },\r\n        ]\r\n    },\r\n\r\n    // quan ly chuyen khoa\r\n    { \r\n        name: 'menu.admin.specialty',\r\n        menus: [\r\n            {\r\n                name: 'menu.admin.add-specialty',link: '/system/add-specialty'\r\n            },\r\n\r\n            {\r\n                name: 'menu.admin.manage-specialty',link: '/system/manage-specialty'\r\n            },\r\n            \r\n        ]\r\n    },\r\n      // quan ly hoi dap\r\n      { \r\n        name: 'menu.admin.asked-answered',\r\n        menus: [\r\n            {\r\n                name: 'menu.admin.manage-asked-answered',link: '/system/manage-asked-answered'\r\n            },\r\n            \r\n            \r\n        ]\r\n    },\r\n];\r\n\r\n\r\n\r\n\r\nexport const doctorMenu = [\r\n    {\r\n        name: 'menu.admin.manage-user',\r\n\r\n        menus: [\r\n            {     \r\n            name: 'menu.doctor.manage-schedule',link: '/doctor/manage-schedule'\r\n \r\n            },\r\n            {     \r\n                name: 'menu.doctor.manage-patient',link: '/doctor/manage-patient'\r\n     \r\n            }\r\n        \r\n        ],\r\n       \r\n        \r\n    }\r\n    \r\n  \r\n];\r\n\r\nexport const communityDoctorMenu = [\r\n    \r\n        { \r\n        name: 'menu.admin.asked-answered',\r\n        menus: [\r\n            {\r\n                name: 'menu.admin.manage-asked-answered',link: '/system/manage-asked-answered'\r\n            },\r\n            \r\n            \r\n        ]\r\n    },\r\n       \r\n        \r\n    \r\n  \r\n];\r\n\r\n\r\nexport const onlineDoctorMenu = [\r\n    {\r\n        name: 'menu.admin.manage-user',\r\n\r\n        menus: [\r\n           \r\n        \r\n        ],\r\n       \r\n        \r\n    }\r\n    \r\n  \r\n];","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport * as actions from \"../../store/actions\";\r\nimport Navigator from '../../components/Navigator';\r\nimport { adminMenu, doctorMenu, communityDoctorMenu, onlineDoctorMenu } from './menuApp';\r\nimport './Header.scss';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { USER_ROLE, languages } from '../../utils/constant';\r\n\r\n\r\nclass Header extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n\r\n            menuApp: []\r\n        }\r\n    }\r\n\r\n    handleChangeLanguage = (language) => {\r\n        this.props.changeLanguageAppRedux(language)\r\n    }\r\n\r\n    componentDidMount(){\r\n        let {userInfo} = this.props;\r\n        let menu = [];\r\n        if(userInfo ){\r\n            let role = userInfo.roleID;\r\n        \r\n            if(role === USER_ROLE.ADMIN){\r\n                menu = adminMenu;\r\n           \r\n            }\r\n            if(role === USER_ROLE.DOCTOR){\r\n                menu = doctorMenu;\r\n            }\r\n\r\n            if(role === USER_ROLE.CommunityDoctor){\r\n                menu = communityDoctorMenu;\r\n            }\r\n            if(role === USER_ROLE.OnlineDoctor){\r\n                menu = onlineDoctorMenu;\r\n            }\r\n            \r\n        }\r\n        this.setState({\r\n            menuApp: menu\r\n        })\r\n\r\n    }\r\n    render() {\r\n        \r\n        const { processLogout, language, userInfo } = this.props;\r\n    \r\n\r\n        return (\r\n\r\n            \r\n            <div className=\"header-container\">\r\n                {/* thanh navigator */}\r\n                <div className=\"header-tabs-container\">\r\n                    <Navigator menus={this.state.menuApp} />\r\n                </div>\r\n\r\n\r\n            \r\n                       \r\n                <div className=\"header-right\">\r\n\r\n                     <div className=\"header-text\">\r\n                        <span className='header-text__title'>\r\n                            <FormattedMessage id = \"home-header.welcome\" />,\r\n                            {userInfo && userInfo.firstName ? userInfo.firstName: ''}\r\n                        </span>\r\n                    </div>\r\n                    <div className=\"languages\">\r\n                        <span className={language === languages.VI ? 'language-vi active' : 'language-vi'}\r\n                        onClick={\r\n                            () => {\r\n                                this.handleChangeLanguage(languages.VI)\r\n                            }\r\n                        }\r\n                        >VN</span>\r\n                        <span className={language === languages.EN ? 'language-en active' : 'language-en'}\r\n                         onClick={\r\n                            () => {\r\n                                this.handleChangeLanguage(languages.EN)\r\n                            }\r\n                        }>EN</span>\r\n                    </div>\r\n\r\n                   \r\n                   <div className=\"logout\">\r\n                    <div className=\"btn btn-logout\" onClick={processLogout}>\r\n                        <i className=\"fas fa-sign-out-alt\"></i>\r\n                   </div>\r\n                </div>\r\n                </div>\r\n                {/* nút logout */}\r\n                \r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isLoggedIn: state.user.isLoggedIn,\r\n        userInfo: state.user.userInfo,\r\n        language: state.app.language\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        processLogout: () => dispatch(actions.processLogout()),\r\n      \r\n        changeLanguageAppRedux: (language) => dispatch(actions.changeLanguageApp(language))\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);\r\n","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { CommonUtils } from '../../../../utils';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport { sendQuestion, getQuestion } from '../../../../services/userServices';\r\n\r\nclass RemedyModal extends Component {\r\n \r\n   \r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n           email : '',\r\n       \r\n            reply: '',\r\n            previewImgURL: '',\r\n            imageBase64: this.props.dataModal.image,\r\n            isOpen: false\r\n        }\r\n    }\r\n    openImg = () => {\r\n        if(!this.state.previewImgURL){\r\n            return\r\n        }\r\n        this.setState({\r\n            isOpen: true,\r\n           \r\n        })\r\n    }\r\n\r\n\r\n    async componentDidMount(){\r\n        \r\n        if(this.props.dataModal){\r\n            this.setState({\r\n                email: this.props.dataModal.email\r\n\r\n            })\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot){\r\n        if( this.props.dataModal !== prevProps.dataModal ){\r\n            this.setState({\r\n                email: this.props.dataModal.email\r\n            })\r\n        }\r\n    }\r\n  \r\n\r\n    handleOnChangeImg = async (event) => {\r\n        let data = event.target.files;\r\n        let file = data[0];\r\n        if(file){\r\n            let base64 = await CommonUtils.getBase64(file);\r\n            \r\n            this.setState({\r\n              \r\n                imageBase64: base64\r\n            })\r\n        }\r\n        \r\n        \r\n    }\r\n    \r\n\r\n    \r\n\r\n    handOnchangeReply = (e) => {\r\n        this.setState({\r\n            reply: e.target.value\r\n        })\r\n\r\n    }\r\n\r\n    handleOnchangeEmail = (event) => {\r\n        this.setState({\r\n            email: event.target.email\r\n        })\r\n    }\r\n\r\n    // sendRemedy = () => {\r\n    //     \r\n    // }\r\n\r\n    handleSendRemedy = () => {\r\n        this.props.sendRemedy(this.state);\r\n       \r\n    }\r\n\r\n    handleSendEmail = () => {\r\n        let dataReply = this.state.reply;\r\n        let img = this.state.imageBase64;\r\n         this.props.sendEmail(dataReply, img);\r\n         \r\n        \r\n     }\r\n    render() {\r\n\r\n        let {isOpenModal, closeModal, dataModal, isReply, isImg, isEmail} = this.props\r\n       \r\n            \r\n        return (\r\n\r\n            <React.Fragment>\r\n               \r\n               <Modal isOpen={isOpenModal} \r\n               \r\n              \r\n               size='xl'\r\n              \r\n               >\r\n                <ModalHeader toggle={closeModal}>Gửi Hoá đơn khám bệnh thành công</ModalHeader>\r\n                <ModalBody>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-6 form-group\">\r\n                           \r\n                                <label htmlFor=\"\">Email bệnh nhân</label>\r\n                                <input className='form-control' type=\"email\" value={this.state.email} \r\n                                \r\n                                onChange={(event) => {\r\n                                    this.handleOnchangeEmail(event)\r\n                                }}  \r\n                                \r\n                                />\r\n                            \r\n                        </div>\r\n                       \r\n\r\n                        {\r\n                            isImg === true && \r\n                            <div className=\"col-6 form-group\">\r\n                                <div className=\"mt-4\">\r\n                                <label htmlFor=\"\">Chọn file kệt quả khám</label>\r\n                                    <input  type=\"file\"  \r\n                                    onChange={(event) => this.handleOnChangeImg(event)}\r\n                                    />\r\n                                </div>\r\n                           \r\n                               </div>\r\n                            \r\n                      \r\n                        }\r\n\r\n\r\n                \r\n                          \r\n                          {isReply === true && \r\n                                 <div className=\"col-6  form-group\">\r\n\r\n                                    <div className='label-upload'>\r\n\r\n                                    <input id=\"preview-img\" type=\"file\" hidden\r\n                                        onChange={(event) => this.handleOnChangeImg(event)}\r\n\r\n                                    />\r\n                                    <label htmlFor=\"preview-img\" className='preview-img'>Tải ảnh <i className=\"fas fa-upload\"></i> </label>\r\n\r\n                                    <div className=\"preview-image\"\r\n                                        style={{backgroundImage: `url(${this.state.imageBase64})`}}\r\n                                        onClick={() => this.openImg()}\r\n                                    > \r\n\r\n                                    </div>\r\n                                    </div>\r\n                                 </div>\r\n                      \r\n                            }\r\n                           \r\n                        <div className=\"col-12 form-group\">\r\n                            {isReply === true && \r\n                                <div className=\"\">\r\n                                    <label htmlFor=\"\">Trả Lời</label>\r\n                                     <textarea className=\"form-control textarea-body\" rows=\"6\"\r\n                                            onChange={ (e) => this.handOnchangeReply(e)}\r\n                                            \r\n                                            \r\n                                   \r\n                                        >\r\n\r\n                                    </textarea>\r\n                                </div>\r\n                               \r\n                               \r\n                                \r\n                            }\r\n                        </div>\r\n                            \r\n\r\n\r\n                    </div>\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <Button color=\"primary\" onClick={() => isEmail === true ? this.handleSendEmail() : this.handleSendRemedy()}>\r\n                        Gửi\r\n                    </Button>{' '}\r\n                    <Button color=\"secondary\" onClick={closeModal}>\r\n                     \r\n                        Hủy bỏ\r\n                    </Button>\r\n                </ModalFooter>\r\n                 \r\n                </Modal>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        \r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        \r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RemedyModal);\r\n","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport './ManagePatient.scss'\r\nimport { FormattedMessage } from 'react-intl';\r\nimport * as actions from '../../../store/actions'\r\nimport DatePicker from '../../../components/Input/DatePicker';\r\nimport moment from 'moment';\r\nimport _ from 'lodash'\r\nimport {getAllPatientBooking, postSendRemedy} from '../../../services/userServices'\r\nimport RemedyModal from '../../Patient/Doctor/modal/RemedyModal';\r\nimport {  toast } from 'react-toastify';\r\nimport LoadingOverlay from 'react-loading-overlay';\r\n\r\nclass ManagePatient extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n    \r\n        \r\n            currentDate: moment(new Date()).startOf('day').valueOf(),\r\n            dataPatient: {},\r\n            isOpenRemedy: false,\r\n            dataModal: {},\r\n\r\n            isShowLoading: false,\r\n            isImg: true,\r\n            isReply: false\r\n        }\r\n    }\r\n \r\n\r\n    async componentDidMount() {\r\n        \r\n \r\n        this.getDataPatient();\r\n    }\r\n\r\n    getDataPatient = async() => {\r\n        let {language, user} = this.props;\r\n        let {currentDate} = this.state;\r\n        let formatDate = new Date(currentDate).getTime();\r\n        let res = await getAllPatientBooking ({\r\n            doctorId: user.id,\r\n            date : formatDate\r\n        })\r\n\r\n        if(res && res.errCode === 0){\r\n            this.setState({\r\n                dataPatient: res.data\r\n            })\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps,prevState) {\r\n        \r\n        \r\n    }\r\n\r\n    closeModal = () => {\r\n        this.setState({\r\n            isOpenRemedy: false\r\n        })\r\n    }\r\n\r\n  \r\n\r\n    \r\n\r\n    handleOnChangeDatePicket = (date) => {\r\n        this.setState({\r\n            currentDate: date[0]\r\n        }, async() => {\r\n            \r\n             await this.getDataPatient();\r\n        })\r\n    }\r\n\r\n\r\n\r\n   \r\n    handlePatientRemedy = (item) => {\r\n        let data = {\r\n            doctorId: item.doctorId,\r\n            patientId: item.patientId,\r\n            email: item.patientData.email,\r\n            timeType: item.timeType,\r\n            patientName: item.patientData\r\n        }\r\n        \r\n\r\n        this.setState({\r\n            isOpenRemedy: true,\r\n            dataModal: data\r\n        })\r\n\r\n      \r\n       \r\n    }\r\n        \r\n\r\n    sendRemedy =  async (dataChileModal) => {\r\n\r\n        this.setState({\r\n            isShowLoading: true\r\n        })\r\n       \r\n        let dataModal = this.state\r\n        \r\n        let res = await postSendRemedy({\r\n            email: dataChileModal.email,\r\n            imgBase64: dataChileModal.imageBase64,\r\n            doctorId: dataModal.dataModal.doctorId,\r\n            patientId: dataModal.dataModal.patientId,\r\n            timeType: dataModal.dataModal.timeType,\r\n            language: this.props.language,\r\n            patientName: dataModal.dataModal.patientName.firstName,\r\n        })\r\n\r\n        \r\n\r\n    \r\n\r\n        if(res && res.errCode == 0){\r\n            this.setState({\r\n                isShowLoading: false\r\n            })\r\n            toast.success('Gửi thông tin khám bệnh thành công')\r\n            await this.getDataPatient();\r\n           \r\n            \r\n        }else{\r\n            this.setState({\r\n                isShowLoading: false\r\n            })\r\n            toast.error('Gửi thông tin khám bệnh thất bại')\r\n        }\r\n\r\n   \r\n    }\r\n    \r\n    render() {\r\n     \r\n     \r\n        let dataPatient = this.state\r\n\r\n    \r\n        let {isOpenRemedy, dataModal} = this.state\r\n\r\n    \r\n        let yesterday = new Date(new Date().setDate(new Date().getDate()-1));\r\n        return (\r\n\r\n            <React.Fragment>\r\n               <div className=\"manage-schedule__container\">\r\n                    <div className=\"m-s-title\">\r\n                        Thông báo kết quả khám\r\n                    </div>\r\n\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-6 form-group\">\r\n                                <label > <FormattedMessage id = \"manage-schedule.choose-time\"/></label>\r\n                               <DatePicker \r\n                                    onChange={this.handleOnChangeDatePicket}\r\n                                    className= 'form-control'\r\n                                    value={this.state.currentDate}\r\n                                    minDate = {yesterday}\r\n                          \r\n                               />\r\n                            </div>\r\n\r\n                            <div className=\"col-12 form-group\">\r\n                            <div className='users-table'>\r\n                   <table className=\"table table-dark mt-4\">\r\n                       <thead>\r\n                           <tr>\r\n                           <th scope=\"col\">#</th>\r\n                           <th scope=\"col\">Họ và tên</th>\r\n                           <th scope=\"col\">Số điện thoại</th>\r\n                           <th scope=\"col\">Giới tính</th>\r\n                           <th scope=\"col\">Địa chỉ</th>\r\n                           <th scope=\"col\">Thời gian đặt lịch khám</th>\r\n                           <th scope=\"col\">Tuỳ chọn</th>\r\n\r\n\r\n                           </tr>\r\n                       </thead>\r\n                       <tbody>\r\n\r\n                        \r\n                                  \r\n                           <>\r\n                         \r\n                         { dataPatient.dataPatient && dataPatient.dataPatient.length > 0 ? dataPatient.dataPatient.map((item, index) => {\r\n                             return(\r\n                                 <tr>\r\n                                     <th scope=\"row\">{index + 1}</th>\r\n                                     <td>{item.patientData.email}</td>\r\n                                      <td>{item.patientData.phoneNumber}</td> \r\n                                      <td>{item.patientData.genderData.valueVi}</td> \r\n                                      <td>{item.patientData.address}</td> \r\n                                      <td>{item.timeTypePatient.valueVi}</td> \r\n                                     <td>    \r\n                                     <button type=\"button\" \r\n                                         className=\"btn btn-success\" \r\n                                         style={{marginRight: 10, paddingRight:10 , paddingLeft: 10}}\r\n\r\n                                         onClick={() => {\r\n                                             this.handlePatientRemedy(item);\r\n                                         }}\r\n                                         >Xác Nhận</button>\r\n                                     \r\n                                     </td>\r\n                                             \r\n                                 </tr>     \r\n                             )\r\n                         })\r\n                         \r\n                         :\r\n                         <tr >\r\n                           <td colSpan={7} style={{textAlign: \"center\"}} > No data</td>\r\n                        </tr>\r\n                         \r\n                         }\r\n                                     \r\n                         </>\r\n  \r\n    \r\n                 \r\n                       </tbody>\r\n                   </table>\r\n               </div>\r\n                            </div>\r\n                          \r\n\r\n                            \r\n                        </div>\r\n                    </div>\r\n               </div>\r\n               \r\n                    \r\n            {\r\n                this.state.isOpenRemedy === true &&\r\n                <RemedyModal \r\n                    isOpenModal = {isOpenRemedy}\r\n                    dataModal = {dataModal}\r\n                    closeModal= {this.closeModal}\r\n                    sendRemedy = {this.sendRemedy}\r\n                    isImg={this.state.isImg}\r\n                    isReply={this.state.isReply}\r\n                />\r\n            }\r\n\r\n                <LoadingOverlay\r\n                active={this.state.isShowLoading}\r\n                spinner\r\n                text='Loading your ...'\r\n                >\r\n                \r\n                </LoadingOverlay>\r\n                \r\n               \r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        language: state.app.language,\r\n        user: state.user.userInfo\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        fetchAllDoctorRedux: () => dispatch(actions.fetchAllDoctor()),\r\n        fetchAllTimeDoctorRedux: () => dispatch(actions.fetchAllTimeDoctor()),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ManagePatient);\r\n","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect, Route, Switch } from 'react-router-dom';\r\nimport ManageSchedule from '../containers/System/Doctor/ManageSchedule';\r\nimport Header from '../containers/Header/Header';\r\nimport ManagePatient from '../containers/System/Doctor/ManagePatient';\r\n\r\nclass Doctor extends Component {\r\n    render() {\r\n     \r\n        const {isLoggedIn } = this.props;\r\n       \r\n        return (\r\n\r\n            <React.Fragment>\r\n                {isLoggedIn && <Header />}\r\n                <div className=\"system-container\">\r\n                    <div className=\"system-list\">\r\n                        <Switch>\r\n                            <Route path=\"/doctor/manage-schedule\" component={ManageSchedule} />\r\n                            <Route path=\"/doctor/manage-patient\" component={ManagePatient} />\r\n                        </Switch>\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        systemMenuPath: state.app.systemMenuPath,\r\n        isLoggedIn: state.user.isLoggedIn\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Doctor);\r\n","import EventEmitter from 'events';\r\nconst _emitter = new EventEmitter();\r\n_emitter.setMaxListeners(0);\r\n\r\nexport const emitter = _emitter;","import { Button, Modal, ModalHeader, ModalBody, ModalFooter, Input ,Label ,FormGroup, Form} from 'reactstrap';\r\nimport React, { Component } from 'react';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { connect } from 'react-redux';\r\nimport { tail } from 'lodash';\r\nimport {emitter } from '../../utils/emitter';\r\n\r\n\r\nclass ModalUser extends Component {\r\n    \r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            email: '',\r\n            password: '',\r\n            firstName: '',\r\n            lastName: '',\r\n            address: '',\r\n           \r\n        }\r\n\r\n        this.listenToEmitter();\r\n    }\r\n    listenToEmitter()  {\r\n        emitter.on('EVENT_CLEAR_MODAL_DATA', () => {\r\n            this.setState({\r\n                email: '',\r\n                password: '',\r\n                firstName: '',\r\n                lastName: '',\r\n                address: '',\r\n            })\r\n        });\r\n    };\r\n    componentDidMount() {\r\n    }\r\n\r\n    toggle = () => {\r\n        this.props.toggleNewUser();\r\n    }\r\n\r\n    handleOnChangeInput = (event, id) => {\r\n      let copyState = {...this.state};\r\n      copyState[id] = event.target.value;\r\n      this.setState({\r\n        ...copyState\r\n      });\r\n\r\n    }\r\n\r\n    checkValidateInput = () => {\r\n        let isValid = true;\r\n        let arrInput = ['email', 'password', 'firstName', 'lastName', 'address'];\r\n        for(let i = 0; i < arrInput.length; i++){\r\n            if(!this.state[arrInput[i]]){\r\n                isValid = false;\r\n                alert('Missing parameter ' + arrInput[i]);\r\n                break;\r\n            }\r\n        }\r\n        return isValid;\r\n    }\r\n\r\n    handleAddNewUser = () => {\r\n       \r\n        let isValid = this.checkValidateInput();\r\n        if(isValid === true){\r\n            this.props.createNewUser(this.state);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Modal \r\n            size='xl'\r\n            centered\r\n\r\n            isOpen={this.props.isOpen} toggle={()=>{this.toggle()}} className={'abcClassName'}\r\n            >\r\n                <ModalHeader toggle={()=>{this.toggle()}} >Modal title</ModalHeader>\r\n                <ModalBody>\r\n                    <Form>\r\n                        <FormGroup>\r\n                            <Label for=\"exampleEmail\">\r\n                            Email\r\n                            </Label>\r\n                            <Input\r\n                            id=\"exampleEmail\"\r\n                            name=\"email\"\r\n                            placeholder=\"with a placeholder\"\r\n                            type=\"email\"\r\n                            onChange={\r\n                                (event) => {\r\n                                    this.handleOnChangeInput(event, 'email')\r\n                                }\r\n                            }\r\n                            value={this.state.email}\r\n                            />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Label for=\"examplePassword\">\r\n                            Password\r\n                            </Label>\r\n                            <Input\r\n                            id=\"examplePassword\"\r\n                            name=\"password\"\r\n                            placeholder=\"password placeholder\"\r\n                            type=\"password\"\r\n                            onChange={\r\n                                (event) => {\r\n                                    this.handleOnChangeInput(event,'password')\r\n                                }\r\n                            }\r\n                            value={this.state.password}\r\n                            />\r\n                        </FormGroup>\r\n\r\n                        <FormGroup>\r\n                            <Label for=\"exampleFistName\">\r\n                                First Name\r\n                            </Label>\r\n                           \r\n                            <Input \r\n                                id=\"FirstName\"\r\n                                name=\"FirstName\"\r\n                                placeholder=\"FirstName placeholder\"\r\n                                type=\"text\"\r\n                                onChange={\r\n                                    (event) => {\r\n                                        this.handleOnChangeInput(event,'firstName')\r\n                                    }\r\n                                }\r\n                                value={this.state.firstName}\r\n                            />\r\n                        </FormGroup>\r\n\r\n                        <FormGroup>\r\n                            <Label for=\"exampleLastName\">\r\n                                Last Name\r\n                            </Label>\r\n                           \r\n                            <Input \r\n                                id=\"LastName\"\r\n                                name=\"LastName\"\r\n                                placeholder=\"LastName placeholder\"\r\n                                type=\"text\"\r\n                                onChange={\r\n                                    (event) => {\r\n                                        this.handleOnChangeInput(event,'lastName')\r\n                                    }\r\n                                }\r\n                                value={this.state.lastName}\r\n                            />\r\n                        </FormGroup>\r\n\r\n                        <FormGroup>\r\n                            <Label for=\"exampleAddress\">\r\n                                Address\r\n                            </Label>\r\n                           \r\n                            <Input \r\n                                id=\"Address\"\r\n                                name=\"Address\"\r\n                                placeholder=\"Address placeholder\"\r\n                                type=\"text\"\r\n                                onChange={\r\n                                    (event) => {\r\n                                        this.handleOnChangeInput(event,'address')\r\n                                    }\r\n                                }\r\n                                value={this.state.address}\r\n                            />\r\n                        </FormGroup>\r\n                    </Form>\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                <Button color=\"primary\" onClick={()=>{this.handleAddNewUser()}}>\r\n                    Add New\r\n                </Button>{' '}\r\n                <Button color=\"secondary\" onClick={()=>{this.toggle()}}>\r\n                    Close\r\n                </Button>\r\n                </ModalFooter>\r\n                </Modal>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ModalUser);\r\n\r\n\r\n\r\n","import { Button, Modal, ModalHeader, ModalBody, ModalFooter, Input ,Label ,FormGroup, Form} from 'reactstrap';\r\nimport React, { Component } from 'react';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { connect } from 'react-redux';\r\nimport _ from 'lodash';\r\n\r\n\r\n\r\nclass ModalEditUser extends Component {\r\n    \r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            id : '',\r\n            email: '',\r\n            password: '',\r\n            firstName: '',\r\n            lastName: '',\r\n            address: '',\r\n           \r\n        }\r\n    }\r\n \r\n    componentDidMount() {  \r\n        let user = this.props.currentUser;\r\n        if(user && !_.isEmpty(user)){\r\n            this.setState({\r\n                id: user.id,\r\n                email: 'aaa',\r\n                password: 'harCode',\r\n                firstName: user.firstName,\r\n                lastName: user.lastName,\r\n                address: user.address,\r\n            })\r\n        }\r\n        \r\n    }\r\n\r\n    toggle = () => {\r\n        this.props.toggleNewUser();\r\n        // this.props.toggleEditUser();\r\n    }\r\n\r\n    handleOnChangeInput = (event, id) => {\r\n      let copyState = {...this.state};\r\n      copyState[id] = event.target.value;\r\n      this.setState({\r\n        ...copyState\r\n      });\r\n\r\n    }\r\n\r\n    checkValidateInput = () => {\r\n        let isValid = true;\r\n        let arrInput = ['email', 'password', 'firstName', 'lastName', 'address'];\r\n        for(let i = 0; i < arrInput.length; i++){\r\n            if(!this.state[arrInput[i]]){\r\n                isValid = false;\r\n                alert('Missing parameter ' + arrInput[i]);\r\n                break;\r\n            }\r\n        }\r\n        return isValid;\r\n    }\r\n\r\n    handleAddNewUser = () => {\r\n       \r\n        let isValid = this.checkValidateInput();\r\n        if(isValid === true){\r\n            this.props.createNewUser(this.state);\r\n        }\r\n    }\r\n\r\n    handleSaveUser = () =>{\r\n        let isValid = this.checkValidateInput();\r\n        if(isValid === true){\r\n            this.props.editUser(this.state);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Modal \r\n            size='xl'\r\n            centered\r\n\r\n            isOpen={this.props.isOpen} toggle={()=>{this.toggle()}} className={'abcClassName'}\r\n            >\r\n                <ModalHeader toggle={()=>{this.toggle()}} >Modal title</ModalHeader>\r\n                <ModalBody>\r\n                    <Form>\r\n                        <FormGroup>\r\n                            <Label for=\"exampleEmail\">\r\n                            Email\r\n                            </Label>\r\n                            <Input\r\n                            id=\"exampleEmail\"\r\n                            name=\"email\"\r\n                            placeholder=\"with a placeholder\"\r\n                            type=\"email\"\r\n                            onChange={\r\n                                (event) => {\r\n                                    this.handleOnChangeInput(event, 'email')\r\n                                }\r\n                            }\r\n                            value={this.state.email}\r\n                            disabled\r\n                            />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Label for=\"examplePassword\">\r\n                            Password\r\n                            </Label>\r\n                            <Input\r\n                            id=\"examplePassword\"\r\n                            name=\"password\"\r\n                            placeholder=\"password placeholder\"\r\n                            type=\"password\"\r\n                            onChange={\r\n                                (event) => {\r\n                                    this.handleOnChangeInput(event,'password')\r\n                                }\r\n                            }\r\n                            value={this.state.password}\r\n                            disabled\r\n                            />\r\n                        </FormGroup>\r\n\r\n                        <FormGroup>\r\n                            <Label for=\"exampleFistName\">\r\n                                First Name\r\n                            </Label>\r\n                           \r\n                            <Input \r\n                                id=\"FirstName\"\r\n                                name=\"FirstName\"\r\n                                placeholder=\"FirstName placeholder\"\r\n                                type=\"text\"\r\n                                onChange={\r\n                                    (event) => {\r\n                                        this.handleOnChangeInput(event,'firstName')\r\n                                    }\r\n                                }\r\n                                value={this.state.firstName}\r\n                            />\r\n                        </FormGroup>\r\n\r\n                        <FormGroup>\r\n                            <Label for=\"exampleLastName\">\r\n                                Last Name\r\n                            </Label>\r\n                           \r\n                            <Input \r\n                                id=\"LastName\"\r\n                                name=\"LastName\"\r\n                                placeholder=\"LastName placeholder\"\r\n                                type=\"text\"\r\n                                onChange={\r\n                                    (event) => {\r\n                                        this.handleOnChangeInput(event,'lastName')\r\n                                    }\r\n                                }\r\n                                value={this.state.lastName}\r\n                            />\r\n                        </FormGroup>\r\n\r\n                        <FormGroup>\r\n                            <Label for=\"exampleAddress\">\r\n                                Address\r\n                            </Label>\r\n                           \r\n                            <Input \r\n                                id=\"Address\"\r\n                                name=\"Address\"\r\n                                placeholder=\"Address placeholder\"\r\n                                type=\"text\"\r\n                                onChange={\r\n                                    (event) => {\r\n                                        this.handleOnChangeInput(event,'address')\r\n                                    }\r\n                                }\r\n                                value={this.state.address}\r\n                            />\r\n                        </FormGroup>\r\n                    </Form>\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                <Button color=\"primary\" onClick={()=>{this.handleSaveUser()}}>\r\n                    Save Changes\r\n                </Button>{' '}\r\n                <Button color=\"secondary\" onClick={()=>{this.toggle()}}>\r\n                    Close\r\n                </Button>\r\n                </ModalFooter>\r\n                </Modal>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ModalEditUser);\r\n\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { connect } from 'react-redux';\r\nimport { getAllUsers, createNewUser, deleteUser, editUser} from '../../services/userServices';\r\nimport ModalUser from './ModalUser';\r\nimport {emitter } from '../../utils/emitter';\r\nimport ModalEditUser from './ModalEditUser';\r\nimport { Fade } from 'reactstrap';\r\n\r\nclass UserManage extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            arrUsers: [],\r\n            isOpenModalUser: false,\r\n            isOpenEditUser: false,\r\n            userEdit: {}\r\n        }\r\n    }\r\n  \r\n    async componentDidMount() {\r\n        await this.getAllUSersFromReact();\r\n        \r\n    }\r\n    getAllUSersFromReact = async() => {\r\n        let response = await getAllUsers('ALL');\r\n        if(response && response.errCode === 0){\r\n            this.setState({\r\n                arrUsers: response.users\r\n            })\r\n        }\r\n    }\r\n    /** Life cycle\r\n         * Run component:\r\n         * 1. Run construct -> init state\r\n         * 2. Did mount\r\n         * 3. Render\r\n    */\r\n    handleAddNewUser = () => {\r\n        this.setState({\r\n            isOpenModalUser: true,\r\n       \r\n        })\r\n    }\r\n    toggleNewUser = () => {\r\n        this.setState({\r\n            isOpenModalUser: !this.state.isOpenModalUser,\r\n        })\r\n    }\r\n\r\n    toggleEditUser = () => {\r\n        this.setState({\r\n            isOpenEditUser: !this.state.isOpenEditUser,\r\n        })\r\n    }\r\n\r\n    createNewUser = async(data) => {\r\n       try {\r\n            let response = await createNewUser(data);\r\n            if(response && response.message.errCode !== 0){\r\n                alert(response.message.errMessage);\r\n            }else{\r\n                await this.getAllUSersFromReact();\r\n                this.setState({\r\n                    isOpenModalUser: false\r\n                })\r\n                emitter.emit('EVENT_CLEAR_MODAL_DATA');\r\n            }\r\n       } catch (error) {\r\n            console(error);\r\n       }\r\n    }\r\n\r\n    handleDeleteUser = async (user) => {\r\n        try {\r\n            let res = await deleteUser(user.id);\r\n            if(res && res.errCode === 0){\r\n                await this.getAllUSersFromReact();\r\n            }else{\r\n                alert(res.errMessage)\r\n            }\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    handleEditUser = (user) => {\r\n        this.setState({\r\n            isOpenEditUser: true,\r\n            userEdit : user\r\n        })\r\n    }\r\n    editUser = async(user) =>{\r\n\r\n        try {\r\n            let res = await editUser(user);\r\n        if(res && res.errCode === 0){\r\n            this.setState({\r\n                isOpenEditUser: false\r\n            })\r\n            await this.getAllUSersFromReact()\r\n        }\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n    render() {\r\n        \r\n        let arrUsers = this.state.arrUsers;\r\n        return (\r\n            <div className=\"user-container\">\r\n                <ModalUser\r\n                    isOpen = {this.state.isOpenModalUser}\r\n                    toggleNewUser = {this.toggleNewUser}\r\n                    createNewUser = {this.createNewUser}\r\n                />\r\n                {this.state.isOpenEditUser &&\r\n                <ModalEditUser\r\n                    isOpen = {this.state.isOpenEditUser}\r\n                    toggleNewUser = {this.toggleEditUser}\r\n                    currentUser = {this.state.userEdit}\r\n                    editUser = {this.editUser}\r\n                />}\r\n                <div className='title text-center'> Manage Users </div>\r\n                <div className=\"mx-1\">\r\n                    \r\n                    <button type=\"button\" className=\"btn btn-primary px-2 mb-3\"\r\n                    onClick={() => {this.handleAddNewUser()}}\r\n                    \r\n                    \r\n                    >\r\n                    <i className=\"fas fa-plus px-2\"></i>\r\n                        Add new users\r\n                    </button>\r\n                </div>\r\n                <div className='users-table'>\r\n                    <table className=\"table table-dark\">\r\n                        <thead>\r\n                            <tr>\r\n                            <th scope=\"col\">#</th>\r\n                            <th scope=\"col\">Email</th>\r\n                            <th scope=\"col\">First Name</th>\r\n                            <th scope=\"col\">Last Name</th>\r\n                            <th scope=\"col\">Address</th>\r\n                            <th scope=\"col\">Actions</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {   arrUsers && arrUsers.map((item, index) => {\r\n                              return (\r\n                                    <>\r\n\r\n                                        <tr>\r\n                                            <th scope=\"row\">{index + 1}</th>\r\n                                            <td>{item.email}</td>\r\n                                            <td>{item.firstName}</td>\r\n                                            <td>{item.lastName}</td>\r\n                                            <td>{item.address}</td>\r\n                                            <td>    \r\n                                                <button type=\"button\" \r\n                                                className=\"btn btn-success\" \r\n                                                style={{marginRight: 10, paddingRight:10 , paddingLeft: 10}}\r\n\r\n                                                onClick={() => {\r\n                                                    this.handleEditUser(item);\r\n                                                }}\r\n                                                >Edit</button>\r\n                                                <button type=\"button\" \r\n                                                className=\"btn btn-danger\"\r\n                                                style={{marginRight: 10, paddingRight:10 , paddingLeft: 10}}\r\n                                                onClick={() => {\r\n                                                    this.handleDeleteUser(item);\r\n                                                }}\r\n                                                >Delete</button>\r\n                                            </td>\r\n                                            \r\n                                        </tr>\r\n                                    </>\r\n                                 )\r\n                                })\r\n\r\n                            }\r\n                            \r\n                            \r\n                            \r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserManage);\r\n","import React, { Component } from 'react';\r\n\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../../../store/actions'\r\nimport './ManageDoctor.scss'\r\nimport MarkdownIt from 'markdown-it';\r\nimport MdEditor from 'react-markdown-editor-lite';\r\nimport 'react-markdown-editor-lite/lib/index.css';\r\nimport { CRUD_ACTIONS, languages } from '../../../utils/constant'\r\nimport Select from 'react-select';\r\nimport {getDetailDoctor} from '../../../services/userServices'\r\n\r\n\r\n\r\n\r\nconst mdParser = new MarkdownIt();\r\nclass ManageDoctor extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            contentMarkdown: '',\r\n            contentHtml: '',\r\n         \r\n            description: '',\r\n            arrDoctor: [],\r\n            hasOldData: false,\r\n            fullNameDoctor: '',\r\n\r\n\r\n            listPrice: [],\r\n            listPayment: [],\r\n            listProvince: [],\r\n            listClinic: [],\r\n            listSpecialty: [],\r\n            selectedPrice: '',\r\n            selectedPayment: '',\r\n            selectedProvince: '',\r\n            selectedClinic: [],\r\n            selectedSpecialty: [],\r\n            addressClinic: '',\r\n            nameClinic: '',\r\n            clinicId: '',\r\n            specialtyId: '',\r\n            note: ''\r\n\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        this.props.fetchAllDoctorRedux();\r\n        this.props.fetchRequiredDoctor();\r\n        \r\n       \r\n    }\r\n\r\n    componentDidUpdate(prevProps,prevState) {\r\n        if(prevProps.allDoctor !== this.props.allDoctor){\r\n            let dataSelect = this.buildDataInputSelect(this.props.allDoctor, 'USERS')\r\n            this.setState({\r\n                arrDoctor: dataSelect\r\n            })\r\n\r\n\r\n        }\r\n     \r\n\r\n        if(prevProps.requireDoctor !== this.props.requireDoctor){\r\n           let  dataSelectPrice = this.buildDataInputSelect(this.props.requireDoctor.resPrice,'PRICE')\r\n           let  dataSelectPayment = this.buildDataInputSelect(this.props.requireDoctor.resPayment, 'PAYMENT')\r\n           let  dataSelectProvince= this.buildDataInputSelect(this.props.requireDoctor.resProvince,'PROVINCE')\r\n           let dataSelectSpecialty = this.buildDataInputSelect(this.props.requireDoctor.resSpecialty,'SPECIALTY')\r\n           let dataSelectClinic = this.buildDataInputSelect(this.props.requireDoctor.resClinic,'CLINIC')\r\n           this.setState({\r\n                listPrice: dataSelectPrice,\r\n                listPayment: dataSelectPayment,\r\n                listProvince: dataSelectProvince,\r\n                listSpecialty: dataSelectSpecialty,\r\n                listClinic: dataSelectClinic\r\n           })\r\n\r\n\r\n           if(prevProps.language !== this.props.language){\r\n            let  dataSelectPrice = this.buildDataInputSelect(this.props.requireDoctor.resPrice,'PRICE')\r\n            let  dataSelectPayment = this.buildDataInputSelect(this.props.requireDoctor.resPayment, 'PAYMENT')\r\n            let  dataSelectProvince= this.buildDataInputSelect(this.props.requireDoctor.resProvince,'PROVINCE')\r\n            let dataSelect = this.buildDataInputSelect(this.props.allDoctor, 'USERS')\r\n            this.setState({\r\n                arrDoctor: dataSelect,\r\n                listPrice: dataSelectPrice,\r\n                listPayment: dataSelectPayment,\r\n                listProvince: dataSelectProvince,\r\n            })\r\n        }\r\n           \r\n        }\r\n    }\r\n\r\n    buildDataInputSelect = (inputData, type) => {\r\n        let result = [];\r\n        let {language} = this.props\r\n        \r\n        if(inputData && inputData.length > 0){\r\n            inputData.map((item, index) => {\r\n\r\n                if(type === 'USERS') {\r\n                    let object = {};\r\n                    let labelVi =  `${item.lastName} ${item.firstName}` \r\n                    let labelEn = `${item.firstName} ${item.lastName} `\r\n                    object.label = language === languages.VI ? labelVi : labelEn\r\n    \r\n                    object.value = item.id;\r\n                    result.push(object)\r\n                }\r\n\r\n                if(type === 'PRICE' ) {\r\n                    let object = {};\r\n                    let labelVi =  `${item.valueVi} VND` \r\n                    let labelEn = `${item.valueEn}  USD`\r\n                    object.label = language === languages.VI ? labelVi : labelEn\r\n    \r\n                    object.value = item.keyMap;\r\n                    result.push(object)\r\n                }\r\n                \r\n                if( type === \"PAYMENT\" || type === \"PROVINCE\") {\r\n                    let object = {};\r\n                    let labelVi =  `${item.valueVi} ` \r\n                    let labelEn = `${item.valueEn}  `\r\n                    object.label = language === languages.VI ? labelVi : labelEn\r\n    \r\n                    object.value = item.keyMap;\r\n                    result.push(object)\r\n                }\r\n                if( type === \"SPECIALTY\") {\r\n                    let object = {};\r\n                    object.label = item.name;\r\n                    object.value = item.id;\r\n                    result.push(object)\r\n                }\r\n\r\n                if( type === \"CLINIC\") {\r\n                    let object = {};\r\n                    object.label = item.name;\r\n                    object.value = item.id;\r\n                    result.push(object)\r\n                }\r\n\r\n            })\r\n           \r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    handleEditorChange = ({ html, text }) => {\r\n        this.setState({\r\n            contentMarkdown: text,\r\n            contentHtml: html,\r\n        })\r\n    }\r\n\r\n    handleSaveContentMarkdown = () => {\r\n        let {hasOldData} = this.state;\r\n\r\n        \r\n        this.props.saveDoctorRedux({\r\n            contentHtml: this.state.contentHtml,\r\n            contentMarkdown: this.state.contentMarkdown,\r\n            description: this.state.description,\r\n            doctorId: this.state.selectedOption.value,\r\n            action: hasOldData === true ? CRUD_ACTIONS.EDIT : CRUD_ACTIONS.CREATE,\r\n       \r\n            selectedPrice: this.state.selectedPrice.value,\r\n            selectedPayment: this.state.selectedPayment.value,\r\n            selectedProvince: this.state.selectedProvince.value,\r\n            addressClinic: this.state.addressClinic,\r\n            nameClinic: this.state.nameClinic,\r\n            note: this.state.note,\r\n\r\n            clinicId: this.state.selectedClinic &&  this.state.selectedClinic.value ? this.state.selectedClinic.value : '',\r\n\r\n            specialtyId: this.state.selectedSpecialty.value\r\n        })\r\n    }\r\n\r\n\r\n     handleOnChangeText = (event, id) => {\r\n        let copyState = {...this.state}\r\n\r\n        copyState[id] = event.target.value\r\n        this.setState({\r\n            ...copyState\r\n        })\r\n    }\r\n\r\n     handleChange = async(selectedOption, name) => {\r\n        this.setState({ selectedOption });\r\n         let res = await getDetailDoctor(selectedOption.value);\r\n\r\n         let {listPayment, listPrice, listProvince, listSpecialty, listClinic} = this.state\r\n\r\n\r\n         if(res && res.errCode === 0 && res.data && res.data.Markdown){\r\n            let markdown = res.data.Markdown;\r\n            let addressClinic = '';\r\n            let nameClinic = '';\r\n            let note = '';\r\n            let paymentId = '';\r\n            let priceId = '';\r\n            let provinceId = '';\r\n            let specialtyId = ''\r\n            let clinicId = ''\r\n\r\n            let selectedPayment = '';\r\n            let selectedPrice = '';\r\n            let selectedProvince = '';\r\n            let selectedSpecialty = '';\r\n            let selectedClinic = ''\r\n        \r\n\r\n            if(res.data.Doctor_info) {\r\n\r\n                addressClinic = res.data.Doctor_info.addressClinic;\r\n                nameClinic = res.data.Doctor_info.nameClinic;\r\n                note = res.data.Doctor_info.note;\r\n                paymentId= res.data.Doctor_info.paymentId\r\n                priceId= res.data.Doctor_info.priceId\r\n                provinceId= res.data.Doctor_info.provinceId\r\n                specialtyId = res.data.Doctor_info.specialtyId\r\n                clinicId = res.data.Doctor_info.clinicId\r\n\r\n                 selectedPayment = listPayment.find(item => {\r\n                    return item && item.value === paymentId\r\n                })\r\n\r\n                  selectedPrice= listPrice.find(item => {\r\n                    return item && item.value === priceId\r\n                })\r\n\r\n                 selectedProvince = listProvince.find(item => {\r\n                    return item && item.value === provinceId\r\n                })\r\n\r\n                selectedSpecialty = listSpecialty.find(item => {\r\n                    return item && item.value === specialtyId\r\n                })\r\n                selectedClinic = listClinic.find(item => {\r\n                    return item && item.value === clinicId\r\n                })\r\n\r\n\r\n                \r\n\r\n            }\r\n\r\n\r\n            this.setState({\r\n                \r\n                contentHtml: markdown.contentHtml,\r\n                contentMarkdown: markdown.contentMarkdown,\r\n                description: markdown.description,\r\n\r\n                addressClinic : addressClinic,\r\n                nameClinic : nameClinic,\r\n                note : note,\r\n                selectedPayment: selectedPayment,\r\n                selectedPrice: selectedPrice,\r\n                selectedProvince: selectedProvince,\r\n                selectedSpecialty: selectedSpecialty,\r\n                selectedClinic: selectedClinic,\r\n                hasOldData:true\r\n            })\r\n         }else{\r\n            this.setState({\r\n                contentHtml: '',\r\n                contentMarkdown: '',\r\n                description: '',\r\n                addressClinic : '',\r\n                nameClinic : '',\r\n                note : '',\r\n                hasOldData:false,\r\n                selectedSpecialty: ''\r\n            })\r\n         }\r\n    };\r\n\r\n    handleChangeSelectDoctorInfo = async (selectedOption, name) => {\r\n        let tateName = name.name;\r\n\r\n        let copyState = {...this.state};\r\n        copyState[tateName] = selectedOption\r\n\r\n        this.setState({\r\n            ...copyState\r\n        })\r\n        \r\n    }\r\n\r\n \r\n\r\n\r\n\r\n    render() {\r\n        \r\n        let {hasOldData, listSpecialty, selectedPayment} = this.state\r\n\r\n  \r\n      \r\n       \r\n        return (\r\n            <div className='manage-doctor__container'>\r\n               <div className=\"manage-doctor__title\"> Thông tin bác sĩ</div>\r\n               <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-6 mt-4\">\r\n                            <label htmlFor=\"\">Chọn bác sĩ</label>\r\n                            <Select\r\n                                \r\n                                onChange={this.handleChange}\r\n                                value={this.state.selectedOption}\r\n                                options={this.state.arrDoctor}\r\n                                placeholder = {'Chọn bác sĩ'}\r\n                                \r\n                            />\r\n                        </div>\r\n                        <div className=\"col-6 mt-4\">\r\n                        <label >Thông tin giới thiệu</label>\r\n                            <textarea className=\"form-control textarea-body\" rows=\"4\"\r\n                            \r\n                                onChange={(event) => this.handleOnChangeText(event, 'description') }\r\n                                value={this.state.description}\r\n                            >\r\n                                \r\n                            </textarea>\r\n                        </div>\r\n\r\n                        <div className=\"col-4 mt-4 form-group\">\r\n                            <label htmlFor=\"\">Chọn Giá</label>\r\n                            <Select\r\n                                \r\n                                onChange={this.handleChangeSelectDoctorInfo}\r\n                                value={this.state.selectedPrice}\r\n                                options={this.state.listPrice}\r\n                                placeholder = {'Chọn Giá'}\r\n                                name = \"selectedPrice\"\r\n                        \r\n                            \r\n                            />\r\n                        </div>\r\n                        <div className=\"col-4 mt-4 form-group\">\r\n                            <label htmlFor=\"\">Chọn phương thức thanh toán</label>\r\n                            <Select\r\n                                \r\n                                onChange={this.handleChangeSelectDoctorInfo}\r\n                                value={this.state.selectedPayment}\r\n                                options={this.state.listPayment}\r\n                                placeholder = {'Chọn phương thức thanh toán'}            \r\n\r\n                                name= 'selectedPayment'\r\n                                    \r\n                                \r\n                            />\r\n                        </div>\r\n                        <div className=\"col-4 mt-4 form-group\">\r\n                            <label htmlFor=\"\">Chọn tỉnh thành</label>\r\n                            <Select\r\n                                \r\n                                onChange={this.handleChangeSelectDoctorInfo}\r\n                                value={this.state.selectedProvince}\r\n                                options={this.state.listProvince}\r\n                                placeholder = {'Chọn tỉnh thành'}\r\n                                name = 'selectedProvince'\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-6 mt-4 form-group\">\r\n                            <label htmlFor=\"\">Địa chỉ phong khám</label>\r\n                            <input className='form-control' type=\"text\" \r\n\r\n                            onChange={(event) => this.handleOnChangeText(event, 'addressClinic') }\r\n                            value={this.state.addressClinic}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"col-6 mt-4 form-group\">\r\n                            <label htmlFor=\"\">Tên phong khám</label>\r\n                            <input className='form-control' type=\"text\" \r\n\r\n                            onChange={(event) => this.handleOnChangeText(event, 'nameClinic') }\r\n                            value={this.state.nameClinic}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-6 mt-4 form-group\">\r\n                            <label htmlFor=\"\">Chọn chuyên khoa</label>\r\n                            <Select\r\n                                \r\n                                onChange={this.handleChangeSelectDoctorInfo}\r\n                                value={this.state.selectedSpecialty}\r\n                                options={this.state.listSpecialty}\r\n                                placeholder = {'Chọn chuyên khoa'}\r\n                                name = 'selectedSpecialty'\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-6 mt-4 form-group\">\r\n                            <label htmlFor=\"\">Chọn phòng khám</label>\r\n                            <Select\r\n                                \r\n                                onChange={this.handleChangeSelectDoctorInfo}\r\n                                value={this.state.selectedClinic}\r\n                                options={this.state.listClinic}\r\n                                placeholder = {'Chọn phòng khám'}\r\n                                name = 'selectedClinic'\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"col-12 mt-4 form-group\">\r\n                            <label htmlFor=\"\">Note</label>\r\n                            <textarea className=\"form-control \" rows=\"4\"\r\n\r\n                            onChange={(event) => this.handleOnChangeText(event, 'note') }\r\n                            value={this.state.note}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"col-12 mt-4\">\r\n                            <MdEditor style={{ height: '500px' }} \r\n                                renderHTML={text => mdParser.render(text)} \r\n                                onChange={this.handleEditorChange} \r\n                                value={this.state.contentMarkdown}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-12 mt-4\">\r\n                            <button className={hasOldData === true ? \"save-content-doctor btn btn-warning\" : \"create-content-doctor btn  btn-primary\"} \r\n                                onClick={() => this.handleSaveContentMarkdown()}>\r\n                                {hasOldData === true ?\r\n                                \r\n                                    <span>Lưu thông tin</span> :\r\n                                    <span>Tạo mới thông tin</span> \r\n                                }\r\n                                \r\n                            </button>\r\n                        </div>\r\n\r\n                    </div>\r\n                    \r\n               </div>\r\n\r\n\r\n              \r\n            </div>\r\n           \r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        language: state.app.language,\r\n        allDoctor: state.admin.allDoctors,\r\n        requireDoctor: state.admin.allRequired\r\n        \r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        fetchAllDoctorRedux: () => dispatch(actions.fetchAllDoctor()),\r\n        saveDoctorRedux: (data) => dispatch(actions.saveDoctor(data)),\r\n       fetchRequiredDoctor: () => dispatch(actions.fetchRequiredDoctorStart())\r\n       \r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ManageDoctor);\r\n","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\n\r\n\r\nimport {  CommonUtils } from '../../../utils';\r\nimport MarkdownIt from 'markdown-it';\r\nimport MdEditor from 'react-markdown-editor-lite';\r\nimport Select from 'react-select';\r\nimport 'react-markdown-editor-lite/lib/index.css';\r\nimport { getDetailSpecialtyById, getAllSpecialty, saveInfoSpecialty, handleDeleteSpecialty } from '../../../services/userServices';\r\nimport { CRUD_ACTIONS } from '../../../utils/constant';\r\n\r\nimport { toast } from 'react-toastify';\r\nconst mdParser = new MarkdownIt();\r\n\r\n\r\n\r\n\r\nclass ManageSpecialty extends Component {\r\n\r\n\r\n  \r\n        \r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            arrClinic: [],\r\n            descriptionHtml: '',\r\n            descriptionMarkdown: '',\r\n            address: '',\r\n            name: '',\r\n            image: '',\r\n            hasOldData: false,\r\n          \r\n        }\r\n    }\r\n  \r\n    handleEditorChange = ({ html, text }) => {\r\n        this.setState({\r\n            descriptionMarkdown: text,\r\n            descriptionHtml: html,\r\n        })\r\n    }\r\n\r\n    async componentDidMount(){\r\n        await this.getAllSpecialty();\r\n    }\r\n\r\n    getAllSpecialty = async () => {\r\n        let res = await getAllSpecialty ();\r\n        let data = res.data;\r\n        let arrClinic = this.buildDataInputSelect(data);\r\n        if(res && res.errCode === 0){\r\n            this.setState({\r\n                arrClinic : arrClinic\r\n            })\r\n        }\r\n    }\r\n\r\n    handleOnChangeImg = async (event) => {\r\n        let data = event.target.files;\r\n       \r\n        let file = data[0];\r\n        if(file){\r\n            let base64 = await CommonUtils.getBase64(file);\r\n            let objectUrl = URL.createObjectURL(file);\r\n            this.setState({\r\n                previewImgURL : objectUrl,\r\n                imageBase64: base64\r\n            })\r\n        }\r\n        \r\n        \r\n    }\r\n\r\n \r\n    buildDataInputSelect = (inputData) => {\r\n        let result = [];\r\n\r\n        \r\n        if(inputData && inputData.length > 0){\r\n            inputData.map((item, index) => {\r\n                    let object = {};\r\n                    object.label = item.name\r\n                    object.value = item.id;\r\n                    result.push(object)\r\n            })\r\n           \r\n        }\r\n\r\n        return result;\r\n    }\r\n  \r\n    handleChange = async(selectedOption) => {\r\n       \r\n       \r\n        this.setState({ selectedOption });\r\n         let res = await getDetailSpecialtyById({\r\n            id: selectedOption.value\r\n         });\r\n\r\n    \r\n\r\n         if(res && res.errCode === 0 ){\r\n            \r\n\r\n            let descriptionHtml = '';\r\n            let descriptionMarkdown = '';\r\n            let name = '';\r\n           \r\n            let imageBase64 = ''\r\n        \r\n\r\n            if(res.data) {\r\n                descriptionHtml = res.data.descriptionHtml;\r\n                descriptionMarkdown = res.data.descriptionMarkdown;\r\n                name = res.data.name;\r\n                imageBase64 = res.data.image;\r\n            }\r\n\r\n\r\n            this.setState({\r\n                descriptionHtml : descriptionHtml,\r\n                descriptionMarkdown: descriptionMarkdown,\r\n                name: name,\r\n                previewImgURL: imageBase64,\r\n                hasOldData: true,\r\n                imageBase64: imageBase64\r\n\r\n            })\r\n         }else{\r\n            this.setState({\r\n                descriptionHtml : '',\r\n                descriptionMarkdown: '',\r\n                address: '',\r\n                name: '',\r\n                previewImgURL: '',\r\n                imageBase64: '',\r\n                hasOldData: false\r\n            })\r\n         }\r\n    };\r\n\r\n    \r\n\r\n     handleClickSave =  async() => {\r\n        let {hasOldData} = this.state;\r\n\r\n      \r\n        \r\n        let res = await saveInfoSpecialty({\r\n            descriptionHtml: this.state.descriptionHtml,\r\n            descriptionMarkdown: this.state.descriptionMarkdown,\r\n            specialtyId: this.state.selectedOption.value,\r\n            name: this.state.name,\r\n            image: this.state.imageBase64,\r\n            action: hasOldData === true ? CRUD_ACTIONS.EDIT : CRUD_ACTIONS.CREATE,\r\n       \r\n            \r\n        })\r\n\r\n        if(res && res.errCode === 0){\r\n            toast.success('Lưu thông tin thành công');\r\n            this.setState({\r\n                descriptionHtml: '',\r\n                descriptionMarkdown: '',\r\n                name: '',\r\n                previewImgURL: '',\r\n                selectedOption: '',\r\n                imageBase64: '',\r\n                image: ''\r\n\r\n            })\r\n        }else{\r\n            toast.error('Lưu thông tin chuyên khoa thất bại')\r\n        }\r\n    }\r\n    handleClickDeleted = async() => {\r\n        \r\n        let res = await handleDeleteSpecialty({\r\n            id: this.state.selectedOption.value\r\n        });\r\n        if(res && res.errCode === 0){\r\n            await this.getAllSpecialty()\r\n            toast.success('Xoá thông tin thành công');\r\n            this.setState({\r\n                descriptionHtml: '',\r\n                descriptionMarkdown: '',\r\n                name: '',\r\n                previewImgURL: '',\r\n                selectedOption: '',\r\n                imageBase64: '',\r\n                image: ''\r\n\r\n            })\r\n           \r\n        }else{\r\n            toast.error('Xoá thông tin chuyên khoa thất bại')\r\n        }\r\n    }\r\n  \r\n\r\n    openImg = () => {\r\n        if(!this.state.previewImgURL){\r\n            return\r\n        }\r\n        this.setState({\r\n            isOpen: true,\r\n           \r\n        })\r\n    }\r\n\r\n\r\n    handleOnchangeName = (event, id) => {\r\n\r\n        let copyState = {...this.state}\r\n        copyState[id] = event.target.value\r\n        this.setState({\r\n            ...copyState\r\n        })\r\n    }\r\n    render() {\r\n\r\n      \r\n        return (\r\n\r\n            <React.Fragment>\r\n                <div className=\"medical__container\">\r\n                    <div className=\"m-s-title\">\r\n                            Quản lý chuyên khoa\r\n                    </div>\r\n\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-6 form-group mt-4\">\r\n                                <label htmlFor=\"\">Tên chuyên khoa</label>\r\n                                <Select\r\n                                    \r\n                                    onChange={this.handleChange}\r\n                                    value={this.state.selectedOption}\r\n                                    options={this.state.arrClinic}\r\n                                    placeholder = {'Chọn phòng khám'}\r\n                                    \r\n                                />\r\n                            </div>\r\n                    \r\n\r\n                            <div className=\"col-6 form-group mt-4\">\r\n                                <label htmlFor=\"\"></label>\r\n                                <div className='label-upload'>\r\n\r\n                                    <input id=\"preview-img\" type=\"file\"hidden\r\n                                        onChange={(event) => this.handleOnChangeImg(event)}\r\n\r\n                                    />\r\n                                    <label htmlFor=\"preview-img\" className='preview-img'>Tải ảnh <i className=\"fas fa-upload\"></i> </label>\r\n\r\n                                    <div className=\"preview-imgg mt-4\"\r\n                                        style={{backgroundImage: `url(${this.state.previewImgURL})`}}\r\n                                        onClick={() => this.openImg()}\r\n                                    > \r\n\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            \r\n                            <div className=\"col-12\">\r\n                                <MdEditor style={{ height: '500px' }} \r\n                                    renderHTML={text => mdParser.render(text)} \r\n                                    onChange={this.handleEditorChange} \r\n                                    value={this.state.descriptionMarkdown}\r\n                                   \r\n                                /> \r\n                            </div>\r\n\r\n                            <div className=\"col-6\">\r\n                                <button className='mt-4 btn btn-primary'\r\n                                \r\n                                onClick={() => this.handleClickSave()}\r\n                                \r\n                                >Lưu thông chuyên khoa</button>\r\n\r\n                                <button className='mt-4 ml-4 btn btn-danger'\r\n                                \r\n                                onClick={() => this.handleClickDeleted()}\r\n                                \r\n                                >Xoá chuyên khoa</button>                  \r\n                            </div>\r\n\r\n                           \r\n                        </div>\r\n                    </div>\r\n                       \r\n                   \r\n                </div>\r\n             \r\n            \r\n    \r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        language: state.app.language\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ManageSpecialty);\r\n","// import { Input } from 'antd';\r\nimport React from 'react';\r\n\r\n\r\nfunction InputForm(props) {\r\n    const { placeholder = 'Nhập text', handleOnChange, ...rests } = props;\r\n    const handleOnChangeInput = (e) => {\r\n        handleOnChange(e.target);\r\n    };\r\n    return (\r\n        <div>\r\n            <input \r\n            placeholder={placeholder} \r\n            value={props.value} \r\n            onChange={handleOnChangeInput} \r\n            \r\n            {...rests} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default InputForm;\r\n","import React, { useState, useEffect  } from 'react';\r\nimport {  CommonUtils } from '../../../utils';\r\nimport MarkdownIt from 'markdown-it';\r\nimport MdEditor from 'react-markdown-editor-lite';\r\nimport Lightbox from 'react-image-lightbox';\r\nimport 'react-markdown-editor-lite/lib/index.css';\r\nimport InputForm from '../../../components/InputFrom/InputForm';\r\nimport './ManageDefault.scss'\r\nconst mdParser = new MarkdownIt();\r\n\r\n\r\nconst ManageDefault = (props) => {\r\n\r\n\r\n        const { getDataQuestion, ...rests } = props;\r\n        const [inputs, setInputs] = useState({});\r\n        const [previewImgURL, setPreviewImgURL] = useState('');\r\n        const [imageBase64, setImageBase64] = useState('');\r\n        const [isOpen, setIsOpen] = useState(false);\r\n        const [descriptionHtml, setDescriptionHtml] = useState('');\r\n        const [descriptionMarkdown, setDescriptionMarkdown] = useState('');\r\n        \r\n\r\n\r\n        const  handleOnChangeImg = async (event) => {\r\n            let data = event.target.files;\r\n            let file = data[0];\r\n            if(file){\r\n                let base64 = await CommonUtils.getBase64(file);\r\n                let objectUrl = URL.createObjectURL(file);\r\n\r\n                setPreviewImgURL(objectUrl);\r\n                setImageBase64(base64);\r\n            }\r\n            \r\n            \r\n        }\r\n\r\n        const openImg = () => {\r\n           \r\n            if(!setPreviewImgURL){\r\n                return\r\n            }\r\n            setIsOpen(true)\r\n        }\r\n\r\n\r\n        const handleEditorChange = ({ html, text }) => {\r\n         \r\n            setDescriptionHtml(html)\r\n            setDescriptionMarkdown(text)\r\n         \r\n        }\r\n\r\n           \r\n    \r\n\r\n        const handleChange = value => {\r\n            setInputs(prevState => ({ ...prevState, [value.name] : value.value }));\r\n          \r\n        } \r\n\r\n      \r\n\r\n        \r\n     \r\n\r\n       const handleClickSave = () => {\r\n         \r\n            let data = {\r\n                name: inputs.name,\r\n                image: imageBase64,\r\n                descriptionHtml: descriptionHtml,\r\n                descriptionMarkdown: descriptionMarkdown,\r\n                address: inputs.address ? inputs.address : ''\r\n            }\r\n            getDataQuestion(data );\r\n            setInputs({});\r\n            setDescriptionHtml('');\r\n            setDescriptionMarkdown('');\r\n            setPreviewImgURL('');\r\n       }\r\n        return (\r\n\r\n         \r\n           \r\n            \r\n            <React.Fragment>\r\n\r\n         \r\n                <div className=\"medical__container\">\r\n                    <div className=\"m-s-title\">\r\n                        {props.title}\r\n                    </div>\r\n\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-6 form-group\">\r\n                                    <label htmlFor=\"\">{props.name} </label>\r\n                                    <InputForm \r\n                                        name= 'name'\r\n                                        placeholder={props.placeholder}\r\n                                        type=\"text\"\r\n                                        handleOnChange={handleChange}\r\n                                        className=\"form-control\"\r\n                                        value={inputs.name || ''}\r\n                                    />\r\n                            </div>\r\n\r\n                            {props.isOpenInput === true &&\r\n                             <div className=\"col-6 form-group\">\r\n                                <label htmlFor=\"\"> Thêm địa trỉ cơ sở y tế </label>\r\n                                    <InputForm \r\n                                        name= 'address'\r\n                                        placeholder={props.placeholder}\r\n                                        type=\"text\"\r\n                                        handleOnChange={handleChange}\r\n                                        className=\"form-control\"\r\n                                        value={inputs.address || ''}\r\n                                    />\r\n                             </div>\r\n                            \r\n                            \r\n                            \r\n                            }\r\n\r\n                            \r\n\r\n                            <div className=\"col-6  form-group\">\r\n\r\n                                    <label htmlFor=\"\">Ảnh chuyên khoa</label>\r\n                                    <div className='label-upload'>\r\n                                        <input id=\"preview-img\" type=\"file\" className='file-control' hidden\r\n                                            onChange={(event) => handleOnChangeImg(event)}\r\n\r\n                                        />\r\n                                        <label htmlFor=\"preview-img\" className='preview-img'>Tải ảnh <i className=\"fas fa-upload\"></i> </label>\r\n\r\n                                        <div className=\"preview-imagee\"\r\n                                            style={{backgroundImage: `url(${previewImgURL})`}}\r\n                                            onClick={ openImg}\r\n                                        > \r\n\r\n                                        </div>\r\n                                    </div>\r\n                            </div>\r\n\r\n                            <div className=\"col-12\">\r\n                                <MdEditor style={{ height: '500px' }} \r\n                                        renderHTML={text => mdParser.render(text)} \r\n                                        onChange={handleEditorChange} \r\n                                        value={descriptionMarkdown}\r\n                                    /> \r\n                            </div>\r\n                            <div className=\"col-12 mt-5\">\r\n                                <button className='save-content-specialty btn btn-warning'\r\n                                \r\n                                onClick={handleClickSave}\r\n                                \r\n                                >Lưu thông tin hỏi đáp</button>\r\n                            </div>\r\n                        </div>\r\n                        \r\n                    </div>\r\n                       \r\n                   \r\n                </div>\r\n\r\n                {isOpen && \r\n                    <Lightbox\r\n                        mainSrc={previewImgURL}\r\n                        onCloseRequest={() => setIsOpen(false)}\r\n                    />\r\n                 } \r\n             \r\n    \r\n            </React.Fragment>\r\n        );\r\n    \r\n}\r\n\r\n\r\n\r\nexport default (ManageDefault);\r\n","import React from 'react';\r\nimport { createNewMedicalFacilities } from '../../../services/userServices';\r\nimport { toast } from 'react-toastify';\r\nimport ManageDefault from '../Admin/ManageDefault';\r\n\r\n\r\n\r\nconst ManageMedicalFacilities = () => {\r\n\r\n\r\n        \r\n        const getDataQuestion = async(data) => {\r\n\r\n                let res = await createNewMedicalFacilities ({\r\n                    name: data.name,\r\n                    image: data.image,\r\n                    descriptionHtml: data.descriptionHtml,\r\n                    descriptionMarkdown: data.descriptionMarkdown,\r\n                    address: data.address\r\n                })\r\n\r\n                if(res && res.errCode === 0){\r\n                    toast.success('Lưu thông tin thành công');\r\n               \r\n\r\n                }else{\r\n                    toast.error('Lưu thông tin  thất bại')\r\n                }\r\n        \r\n        }\r\n        \r\n\r\n     \r\n        return (\r\n\r\n         \r\n           \r\n            \r\n            <React.Fragment>\r\n\r\n         \r\n                <ManageDefault \r\n                    getDataQuestion = {getDataQuestion}\r\n                    title = 'Thêm mới cơ sở y tế'\r\n                    name = 'Tên cơ sở y tế '\r\n                    \r\n                    isOpenInput = {true}\r\n                />\r\n\r\n               \r\n             \r\n    \r\n            </React.Fragment>\r\n        );\r\n    \r\n}\r\n\r\n\r\n\r\nexport default (ManageMedicalFacilities);\r\n","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { FormattedDate } from 'react-intl';\r\nimport './ManageClinic.scss';\r\nimport {  CommonUtils } from '../../../utils';\r\nimport MarkdownIt from 'markdown-it';\r\nimport MdEditor from 'react-markdown-editor-lite';\r\nimport Select from 'react-select';\r\nimport 'react-markdown-editor-lite/lib/index.css';\r\nimport { getMedicalFacilitiesById, getAllMedicalFacilities, saveInfoMedicalFacilities,deleteMedicalFacilities } from '../../../services/userServices';\r\nimport { CRUD_ACTIONS } from '../../../utils/constant';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst mdParser = new MarkdownIt();\r\n\r\n\r\n\r\n\r\nclass ManageClinic extends Component {        \r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n           \r\n            arrClinic: [],\r\n            descriptionHtml: '',\r\n            descriptionMarkdown: '',\r\n            address: '',\r\n            name: '',\r\n            image: '',\r\n            hasOldData: false,\r\n          \r\n        }\r\n    }\r\n  \r\n    handleEditorChange = ({ html, text }) => {\r\n        this.setState({\r\n            descriptionMarkdown: text,\r\n            descriptionHtml: html,\r\n        })\r\n    }\r\n\r\n    async componentDidMount(){\r\n        await this.getAllMedicalFacilities();\r\n    }\r\n\r\n\r\n    getAllMedicalFacilities = async() => {\r\n        let res = await getAllMedicalFacilities ();\r\n\r\n        let data = res.data;\r\n\r\n        let arrClinic = this.buildDataInputSelect(data);\r\n        if(res && res.errCode === 0){\r\n            this.setState({\r\n                arrClinic : arrClinic\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    handleOnChangeImg = async (event) => {\r\n        let data = event.target.files;\r\n       \r\n        let file = data[0];\r\n        if(file){\r\n            let base64 = await CommonUtils.getBase64(file);\r\n            let objectUrl = URL.createObjectURL(file);\r\n            this.setState({\r\n                previewImgURL : objectUrl,\r\n                imageBase64: base64\r\n            })\r\n        }\r\n        \r\n        \r\n    }\r\n\r\n   \r\n \r\n    buildDataInputSelect = (inputData) => {\r\n        let result = [];\r\n\r\n        \r\n        if(inputData && inputData.length > 0){\r\n            inputData.map((item, index) => {\r\n                    let object = {};\r\n                    object.label = item.name\r\n                    object.value = item.id;\r\n                    result.push(object)\r\n            })\r\n           \r\n        }\r\n\r\n        return result;\r\n    }\r\n  \r\n    handleChange = async(selectedOption) => {\r\n       \r\n        let {hasOldData} = this.state;\r\n        this.setState({ selectedOption });\r\n         let res = await getMedicalFacilitiesById({\r\n            id: selectedOption.value\r\n         });\r\n\r\n\r\n         if(res && res.errCode === 0 ){\r\n            \r\n\r\n            let descriptionHtml = '';\r\n            let descriptionMarkdown = '';\r\n            let  address = '';\r\n            let name = '';\r\n            let imageBase64 = '';\r\n            let previewImgURL = '';\r\n        \r\n\r\n            if(res.data) {\r\n                descriptionHtml = res.data.descriptionHtml;\r\n                descriptionMarkdown = res.data.descriptionMarkdown;\r\n                address = res.data.address;\r\n                name = res.data.name;\r\n                previewImgURL = imageBase64;\r\n                imageBase64 =  res.data.image;\r\n            }\r\n\r\n\r\n            this.setState({\r\n                descriptionHtml : descriptionHtml,\r\n                descriptionMarkdown: descriptionMarkdown,\r\n                address: address,\r\n                name: name,\r\n                previewImgURL: imageBase64,\r\n                imageBase64: imageBase64,\r\n                hasOldData: true\r\n\r\n            })\r\n         }else{\r\n            this.setState({\r\n                descriptionHtml : '',\r\n                descriptionMarkdown: '',\r\n                address: '',\r\n                name: '',\r\n                previewImgURL: '',\r\n                imageBase64: '',\r\n                hasOldData: false\r\n            })\r\n         }\r\n    };\r\n\r\n    \r\n\r\n     handleClickSave =  async() => {\r\n        let {hasOldData} = this.state;\r\n\r\n      \r\n        \r\n        let res = await saveInfoMedicalFacilities({\r\n            descriptionHtml: this.state.descriptionHtml,\r\n            descriptionMarkdown: this.state.descriptionMarkdown,\r\n            address: this.state.address,\r\n            clinicId: this.state.selectedOption.value,\r\n            name: this.state.name,\r\n            image: this.state.imageBase64,\r\n            action: hasOldData === true ? CRUD_ACTIONS.EDIT : CRUD_ACTIONS.CREATE,\r\n       \r\n            \r\n        })\r\n\r\n        if(res && res.errCode === 0){\r\n            toast.success('Lưu thông tin cơ sở y tế thành công');\r\n            this.setState({\r\n                descriptionHtml: '',\r\n                descriptionMarkdown: '',\r\n                address: '',\r\n                name: '',\r\n                previewImgURL: '',\r\n                selectedOption: '',\r\n                image: '',\r\n                imageBase64:  '',\r\n\r\n            })\r\n        }else{\r\n            toast.error('Lưu thông tin cơ sở y tế thất bai')\r\n        }\r\n    }\r\n\r\n    handleClickDeleted = async() => {\r\n        \r\n        let res = await deleteMedicalFacilities({\r\n            id: this.state.selectedOption.value\r\n        });\r\n        if(res && res.errCode === 0){\r\n            await this.getAllMedicalFacilities();\r\n            toast.success('Xoá thông tin cơ sở y tế thành công');\r\n\r\n            this.setState({\r\n                descriptionHtml: '',\r\n                descriptionMarkdown: '',\r\n                address: '',\r\n                name: '',\r\n                previewImgURL: '',\r\n                selectedOption: '',\r\n                image: '',\r\n                imageBase64:  '',\r\n\r\n            })\r\n        }else{\r\n            toast.error('Xoá tin cơ sở y tế thất bại')\r\n        }\r\n    }\r\n\r\n  \r\n\r\n    openImg = () => {\r\n        if(!this.state.previewImgURL){\r\n            return\r\n        }\r\n        this.setState({\r\n            isOpen: true,\r\n           \r\n        })\r\n    }\r\n\r\n\r\n    handleOnchangeName = (event, id) => {\r\n\r\n        let copyState = {...this.state}\r\n        copyState[id] = event.target.value\r\n        this.setState({\r\n            ...copyState\r\n        })\r\n    }\r\n    render() {\r\n        \r\n    \r\n        \r\n      \r\n        return (\r\n\r\n            <React.Fragment>\r\n                <div className=\"medical__container\">\r\n                    <div className=\"m-s-title\">\r\n                            Quản lý cơ sở y tế\r\n                    </div>\r\n\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-6 form-group mt-4\">\r\n                                <label htmlFor=\"\">Tên cơ sở y tế</label>\r\n                                <Select\r\n                                    \r\n                                    onChange={this.handleChange}\r\n                                    value={this.state.selectedOption}\r\n                                    options={this.state.arrClinic}\r\n                                    placeholder = {'Chọn phòng khám'}\r\n                                    \r\n                                />\r\n                            </div>\r\n                            \r\n                            <div className=\"col-6 form-group mt-4\">\r\n                                <label htmlFor=\"\">Địa chỉ cơ sở y tế</label>\r\n                                <input type='text' className='form-control'\r\n                                value={(this.state.address)}\r\n                                onChange={(event) => this.handleOnchangeName(event, 'address')}\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"col-6 form-group mt-4\">\r\n                                <label htmlFor=\"\"></label>\r\n                                <div className='label-upload'>\r\n\r\n                                    <input id=\"preview-img\" type=\"file\"hidden\r\n                                        onChange={(event) => this.handleOnChangeImg(event)}\r\n\r\n                                    />\r\n                                    <label htmlFor=\"preview-img\" className='preview-img'>Tải ảnh <i className=\"fas fa-upload\"></i> </label>\r\n\r\n                                    <div className=\"preview-imgg mt-4\"\r\n                                        style={{backgroundImage: `url(${this.state.previewImgURL})`}}\r\n                                        onClick={() => this.openImg()}\r\n                                    > \r\n\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            \r\n                            <div className=\"col-12\">\r\n                                <MdEditor style={{ height: '500px' }} \r\n                                    renderHTML={text => mdParser.render(text)} \r\n                                    onChange={this.handleEditorChange} \r\n                                    value={this.state.descriptionMarkdown}\r\n                                   \r\n                                /> \r\n                            </div>\r\n\r\n                            <div className=\"col-12\">\r\n                                <button className='mt-4 btn btn-warning'\r\n                                \r\n                                onClick={() => this.handleClickSave()}\r\n                                \r\n                                >Lưu thông tin cơ sở y tế</button>\r\n                                 <button className='mt-4 ml-4 btn btn-danger'\r\n                                \r\n                                onClick={() => this.handleClickDeleted()}\r\n                                \r\n                                >Xoá cơ sở y tế</button>  \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                       \r\n                   \r\n                </div>\r\n             \r\n            \r\n    \r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        language: state.app.language\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ManageClinic);\r\n","\r\nimport React from 'react';\r\nimport { createNewSpecialty } from '../../../services/userServices';\r\nimport { toast } from 'react-toastify';\r\nimport ManageDefault from '../Admin/ManageDefault';\r\n\r\n\r\n\r\n\r\nconst AddSpecialty = () => {\r\n    const getDataQuestion = async(data) => {\r\n\r\n            let res = await createNewSpecialty ({\r\n                name: data.name,\r\n                image: data.image,\r\n                descriptionHtml: data.descriptionHtml,\r\n                descriptionMarkdown: data.descriptionMarkdown\r\n            })\r\n\r\n            if(res && res.errCode === 0){\r\n                toast.success('Lưu thông tin chuyên khoa thành công');\r\n           \r\n            }else{\r\n                toast.error('Lưu thông tin chuyên khoa thất bại')\r\n            }\r\n    \r\n    }\r\n    \r\n\r\n \r\n    return (\r\n\r\n     \r\n       \r\n        \r\n        <React.Fragment>\r\n\r\n     \r\n            <ManageDefault\r\n                getDataQuestion = {getDataQuestion}\r\n                title = 'Thêm mới chuyên khoa'\r\n                name = 'Tên chuyên khoa'\r\n                placeholder = 'VD: Xương khớp...'\r\n            />\r\n         \r\n\r\n        </React.Fragment>\r\n    );\r\n\r\n}\r\n\r\n\r\n\r\nexport default (AddSpecialty);\r\n\r\n\r\n","import React, { useState, useEffect  } from 'react';\r\nimport { getQuestion, sendQuestion } from '../../../services/userServices';\r\nimport RemedyModal from '../../Patient/Doctor/modal/RemedyModal';\r\nimport {  toast } from 'react-toastify';\r\n\r\nconst TableQA = (props) => {\r\n    const [dataQuestion, setDataQuestion] = useState({});\r\n    const[isOpenRemedy, setIsOpenRemedy] = useState(false);\r\n    const [dataModal, setDateModal] = useState([])\r\n    const [isReply, setIsReply] = useState(true)\r\n    const [isImg, setIsImg] = useState(false)\r\n  \r\n\r\n    useEffect( async() => {\r\n        \r\n        getDataQuestion()\r\n       \r\n    }, [])\r\n    \r\n\r\n\r\n    const getDataQuestion = async() => {\r\n        let res = await getQuestion ({\r\n        })\r\n\r\n        if(res && res.errCode === 0){\r\n            setDataQuestion(res.data);\r\n         }else{\r\n            setDataQuestion('')\r\n        }\r\n    }\r\n\r\n    const handleQA  = (item) => {\r\n        \r\n        let data = {\r\n           \r\n            email: item.email,\r\n            question: item.question,\r\n            fullName: item.fullName,\r\n            phoneNumber: item.phoneNumber,\r\n            image: item.image\r\n        }\r\n        \r\n        setDateModal(data);\r\n        \r\n        setIsOpenRemedy(true);\r\n    }\r\n    \r\n    const sendEmail = async(dataReply, img) => {\r\n        \r\n      \r\n        let res = await sendQuestion({\r\n            email: dataModal.email,\r\n            question: dataModal.question,\r\n            reply: dataReply,\r\n            fullName: dataModal.fullName,\r\n            image: img\r\n        })\r\n\r\n        console.log(img);\r\n\r\n      \r\n\r\n        \r\n\r\n    \r\n\r\n        if(res && res.errCode == 0){\r\n            setIsOpenRemedy(false)\r\n            toast.success('Gửi câu trả lời thành công')\r\n            getDataQuestion();\r\n           \r\n            \r\n        }else{\r\n            setIsOpenRemedy(false)\r\n            toast.error('Gửi câu trả lời thất bại')\r\n        }\r\n       \r\n    }\r\n     const closeModal = () => {\r\n        setIsOpenRemedy(false)\r\n    }\r\n\r\n    return(\r\n        <React.Fragment>\r\n               <div className='question-table'>\r\n                   <table className=\"table table-dark\">\r\n                       <thead>\r\n                           <tr>\r\n                           <th scope=\"col\">#</th>\r\n                           <th scope=\"col\">Email</th>\r\n                           <th scope=\"col\">Question</th>\r\n                           <th scope=\"col\">Actions</th>\r\n                           </tr>\r\n                       </thead>\r\n                       <tbody>\r\n\r\n                           <>\r\n                         \r\n                           { dataQuestion && dataQuestion .length > 0 && dataQuestion.map((item, index) => {\r\n                               return(\r\n                                   <tr>\r\n                                       <th scope=\"row\">{index + 1}</th>\r\n                                       <td>{item.email}</td>\r\n                                       <td>{item.question}</td>\r\n                                       <td>    \r\n                                        \r\n                                         \r\n                                                <button type=\"button\" \r\n                                                className=\"btn btn-success\" \r\n                                                onClick={() => {\r\n                                                    handleQA(item);\r\n                                                }}\r\n\r\n                                              \r\n                                                >Gửi và Thêm</button>\r\n                                        \r\n                                           \r\n                                    \r\n                                       \r\n                        \r\n                                       </td>\r\n                                       \r\n                                               \r\n                                   </tr>     \r\n                               )\r\n                           })}\r\n                                       \r\n                           </>\r\n    \r\n                 \r\n                       </tbody>\r\n                   </table>\r\n\r\n\r\n               </div>\r\n\r\n               {\r\n                isOpenRemedy === true &&\r\n                <RemedyModal \r\n                    isOpenModal = {isOpenRemedy}\r\n                    dataModal = {dataModal}\r\n                    closeModal= {closeModal}\r\n                    // sendRemedy = {this.sendRemedy}\r\n                    sendEmail = {sendEmail}\r\n                    isReply = {isReply}\r\n                    isImg = {isImg}\r\n                    isEmail = {true}\r\n                />\r\n            }\r\n          \r\n        </React.Fragment>\r\n    )\r\n    \r\n}\r\n\r\n\r\n\r\nexport default (TableQA);\r\n","import React, {useState} from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport InputForm from '../../../components/InputFrom/InputForm';\r\nimport './ManageQA.scss'\r\nimport TableQA from './TableQA';\r\nimport {  CommonUtils } from '../../../utils';\r\nimport MarkdownIt from 'markdown-it';\r\nimport MdEditor from 'react-markdown-editor-lite';\r\nimport Lightbox from 'react-image-lightbox';\r\nimport 'react-markdown-editor-lite/lib/index.css';\r\nconst mdParser = new MarkdownIt();\r\n\r\n\r\nconst ManageQA = () => {\r\n\r\n    \r\n\r\n\r\n   \r\n\r\n   \r\n\r\n\r\n\r\n    \r\n\r\n       \r\n\r\n\r\n  \r\n\r\n  \r\n\r\n    \r\n \r\n\r\n\r\n    \r\n        return (\r\n\r\n         \r\n           \r\n            \r\n            <React.Fragment>\r\n                    <div className=\"m-s-title\">\r\n                        Quản lý hỏi đáp\r\n                    </div>\r\n                <div className=\"container mt-5\">\r\n                    <TableQA />\r\n                </div>\r\n\r\n               \r\n\r\n            \r\n             \r\n    \r\n            </React.Fragment>\r\n        );\r\n    \r\n}\r\n\r\n\r\n\r\nexport default (ManageQA);\r\n","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect, Route, Switch } from 'react-router-dom';\r\nimport UserManage from '../containers/System/UserManage';\r\nimport UserRedux from '../containers/System/Admin/UserRedux';\r\nimport ManageDoctor from '../containers/System/Admin/ManageDoctor';\r\nimport ManageSpecialty from '../containers/System/Specialty/ManageSpecialty';\r\nimport Header from '../containers/Header/Header';\r\nimport ManageMedicalFacilities from '../containers/System/Admin/ManageMedicalFacilities';\r\nimport ManageClinic from '../containers/System/Clinic/ManageClinic';\r\nimport AddSpecialty from '../containers/System/Specialty/AddSpecialty';\r\nimport ManageQA from '../containers/System/AskAnswered/ManageQA';\r\n\r\nclass System extends Component {\r\n    render() {\r\n     \r\n        const { systemMenuPath, isLoggedIn } = this.props;\r\n        return (\r\n\r\n            <React.Fragment>\r\n                {isLoggedIn && <Header />}\r\n                <div className=\"system-container\">\r\n                    <div className=\"system-list\">\r\n                        <Switch>\r\n                            <Route path=\"/system/user-manage\" component={UserManage} />\r\n                            <Route path=\"/system/user-redux\" component={UserRedux} />\r\n                            <Route path=\"/system/manage-doctor\" component={ManageDoctor} />\r\n                            <Route path=\"/system/add-specialty\" component={AddSpecialty} />\r\n                            <Route path=\"/system/manage-specialty\" component={ManageSpecialty} />\r\n                            <Route path=\"/system/manage-medical-facilities\" component={ManageMedicalFacilities} />\r\n                            <Route path=\"/system/manage-update-clinic\" component={ManageClinic} />\r\n\r\n                            <Route path=\"/system/manage-asked-answered\" component={ManageQA} />\r\n                            <Route component={() => { return (<Redirect to={systemMenuPath} />) }} />\r\n                        </Switch>\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        systemMenuPath: state.app.systemMenuPath,\r\n        isLoggedIn: state.user.isLoggedIn\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(System);\r\n","import React, { Component } from 'react';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { connect } from 'react-redux';\r\nimport { Modal } from 'reactstrap';\r\n\r\nimport './ConfirmModal.scss';\r\nimport * as actions from \"../store/actions\";\r\nimport { KeyCodeUtils } from \"../utils\";\r\n\r\nclass ConfirmModal extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.acceptBtnRef = React.createRef();\r\n    }\r\n\r\n    initialState = {\r\n    };\r\n\r\n    state = {\r\n        ...this.initialState\r\n    };\r\n\r\n    componentDidMount() {\r\n        document.addEventListener('keydown', this.handlerKeyDown);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener('keydown', this.handlerKeyDown);\r\n    }\r\n\r\n    handlerKeyDown = (event) => {\r\n        const keyCode = event.which || event.keyCode;\r\n        if (keyCode === KeyCodeUtils.ENTER) {\r\n            if (!this.acceptBtnRef.current || this.acceptBtnRef.current.disabled) return;\r\n            this.acceptBtnRef.current.click();\r\n        }\r\n    }\r\n\r\n    onAcceptBtnClick = () => {\r\n        const { contentOfConfirmModal } = this.props;\r\n        if (contentOfConfirmModal.handleFunc) {\r\n            contentOfConfirmModal.handleFunc(contentOfConfirmModal.dataFunc);\r\n        }\r\n        this.onClose();\r\n    }\r\n\r\n    onClose = () => {\r\n        this.props.setContentOfConfirmModal({\r\n            isOpen: false,\r\n            messageId: \"\",\r\n            handleFunc: null,\r\n            dataFunc: null\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { contentOfConfirmModal } = this.props;\r\n\r\n        return (\r\n            <Modal isOpen={contentOfConfirmModal.isOpen} className='confirm-modal' centered={true}>\r\n                <div className=\"modal-header\">\r\n                    <div className=\"modal-title\">\r\n                        <FormattedMessage id={\"common.confirm\"} />\r\n                    </div>\r\n                    <div className=\"col-auto\">\r\n                        <button className=\"btn btn-close\" onClick={this.onClose}>\r\n                            <i className=\"fal fa-times\" />\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"modal-body\">\r\n                    <div className=\"confirm-modal-content\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12\">\r\n                                <FormattedMessage id={contentOfConfirmModal.messageId ? contentOfConfirmModal.messageId : \"common.confirm-this-task\"} />\r\n                            </div>\r\n\r\n                            <hr />\r\n\r\n                            <div className=\"col-12\">\r\n                                <div className=\"btn-container text-center\">\r\n                                    <button className=\"btn btn-add\" onClick={this.onClose} >\r\n                                        <FormattedMessage id=\"common.close\" />\r\n                                    </button>\r\n                                    <button ref={this.acceptBtnRef} className=\"btn btn-add\" onClick={this.onAcceptBtnClick}>\r\n                                        <FormattedMessage id={\"common.accept\"} />\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Modal >\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        lang: state.app.language,\r\n        contentOfConfirmModal: state.app.contentOfConfirmModal\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        setContentOfConfirmModal: (contentOfConfirmModal) => dispatch(actions.setContentOfConfirmModal(contentOfConfirmModal))\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ConfirmModal);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport './Specialty.scss';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport Slider from \"react-slick\";\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\nimport { getAllSpecialty } from '../../../services/userServices';\r\nimport { withRouter } from 'react-router';\r\nclass Specialty extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n          \r\n            dataSpecialty: []\r\n        }\r\n    }\r\n  \r\n\r\n    async componentDidMount(){\r\n       \r\n        let res = await getAllSpecialty();\r\n\r\n      \r\n        if(res && res.errCode === 0){\r\n            this.setState({\r\n                dataSpecialty: res.data\r\n            })\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot){\r\n        \r\n    }\r\n\r\n\r\n    handleViewDetailSpecialty = (specialty) => {\r\n       \r\n        \r\n        this.props.history.push(`/detail-specialty/${specialty.id}`)\r\n\r\n    }\r\n\r\n    handleOnClickSpecialty = () => {\r\n        this.props.history.push(`/header-specialty`)\r\n    }\r\n\r\n    render() {\r\n     \r\n        let dataSpecialty = this.state.dataSpecialty;\r\n        return (\r\n           < React.Fragment>\r\n                <div className=\"section-specialty\">\r\n                    <div className=\"grid wide \">\r\n                        <div className=\"row center\">\r\n                            \r\n                            <div className=\"col-8 header__title--body\">\r\n                                    <div className=\"specialty-header__title\"><FormattedMessage id =\"home-page.specialist\"/></div>\r\n                            </div>\r\n                            <div className=\"col-4 header__button--body\">\r\n                                <button type=\"button\" className=\"btn btn-info specialty-header__button\" \r\n                                    \r\n                                onClick={() => this.handleOnClickSpecialty()}\r\n                                ><FormattedMessage id =\"home-page.see-more\"/></button>\r\n                            </div>\r\n                          \r\n                        </div>\r\n                    </div>\r\n                    \r\n                </div>\r\n                <div className=\"grid wide \">\r\n                        <Slider {...this.props.settings}>\r\n                        {dataSpecialty && dataSpecialty.length > 0 && dataSpecialty.map((item, index) => {          \r\n                        return(\r\n                            \r\n                            <div className=\"specialty-content__body\">\r\n                                <div className='specialty-content height-specialty' \r\n                                \r\n                                onClick={() => this.handleViewDetailSpecialty(item)}\r\n                                > \r\n                                    <div className=\"specialty-content__img img_specialty\"\r\n                                    style={{backgroundImage: `url(${item.image})`}}\r\n                                    \r\n                                    ></div>\r\n                                    \r\n                                    <span className='specialty-content__text'>{item.name}</span>\r\n                                </div>\r\n                        </div>\r\n                        )\r\n\r\n\r\n                        })}\r\n                       \r\n                    </Slider>\r\n                </div>\r\n                        \r\n                 \r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isLoggedIn: state.user.isLoggedIn,\r\n        language: state.app.language\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n \r\n    };\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Specialty));\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Slider from \"react-slick\";\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\nimport \"./MedicalFacility.scss\";\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { getAllMedicalFacilities } from '../../../services/userServices';\r\nimport { withRouter } from 'react-router';\r\n\r\nclass MedicalFacility extends Component {\r\n    \r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n           \r\n            arrMedicalFacility: [],\r\n     \r\n          \r\n        }\r\n    }\r\n  \r\n\r\n    async componentDidMount(){\r\n      \r\n        let res = await getAllMedicalFacilities();\r\n        this.setState({\r\n            arrMedicalFacility: res.data\r\n        })\r\n\r\n      \r\n    }\r\n\r\n\r\n\r\n\r\n    handleViewDetailClinic = (clinic) => {\r\n       \r\n        this.props.history.push(`/detail-clinic/${clinic.id}`)\r\n\r\n    }\r\n\r\n    handleOnClickClinic = () => {\r\n        this.props.history.push(`/header-clinic`)\r\n    }\r\n\r\n    render() {\r\n        let {arrMedicalFacility, clinicId} = this.state\r\n\r\n        return (\r\n            < React.Fragment>\r\n               <div className=\"medical-facility-container\">\r\n               <div className=\"section-specialty\">\r\n                    <div className=\"grid wide \">\r\n                        <div className=\"row center\">\r\n                            \r\n                            <div className=\"col-8 header__title--body\">\r\n                                    <div className=\"specialty-header__title\"><FormattedMessage id =\"home-page.health-facilities\"/></div>\r\n                            </div>\r\n                            <div className=\"col-4 header__button--body\">\r\n                                <button type=\"button\" className=\"btn btn-info specialty-header__button\"\r\n                                    onClick={() => this.handleOnClickClinic()}\r\n                                \r\n                                ><FormattedMessage id =\"home-page.see-more\"/></button>\r\n                            </div>\r\n                        \r\n                        </div>\r\n                    </div>\r\n                    \r\n                </div>\r\n                <div className=\"grid wide \">\r\n                        <Slider {...this.props.settings}>\r\n\r\n\r\n                        {arrMedicalFacility && arrMedicalFacility.length > 0 && arrMedicalFacility.map((item, index) => {\r\n \r\n                        return(\r\n                            <div className=\"specialty-content__body\" \r\n                            \r\n                                 onClick={() => this.handleViewDetailClinic(item)}\r\n                            >\r\n                            <div className='specialty-content medical-facility-content ab'> \r\n                                <div className=\"specialty-content__img medical-content__img\" \r\n                                    style={{backgroundImage: `url(${item.image})`}}\r\n                                \r\n                                ></div>\r\n                                \r\n                                <span className='specialty-content__text'>{item.name}</span>\r\n                            </div>\r\n                        </div>\r\n                           \r\n                        )\r\n\r\n                   \r\n\r\n                        })}\r\n                        \r\n                        \r\n\r\n                   \r\n                    \r\n                    </Slider>\r\n                </div>\r\n               </div>\r\n\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isLoggedIn: state.user.isLoggedIn\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n    };\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(MedicalFacility));\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Slider from \"react-slick\";\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\nimport \"./AnsweredDoctor.scss\";\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { withRouter } from 'react-router';\r\nclass AnsweredDoctor extends Component {\r\n\r\n\r\n\r\n\r\n    handleDetailerAsKAnswer = () => {\r\n        \r\n        this.props.history.push(`/doctor_ask-answer`)\r\n    }\r\n\r\n    handleOnClickPatientAsked = () => {\r\n        this.props.history.push(`/patient_asked`)\r\n    }\r\n    render() {\r\n        \r\n    \r\n        return (\r\n            < React.Fragment>\r\n                <div className=\"section-specialty\" >\r\n                    <div className=\"specialty-content \">\r\n                    <div className=\"grid wide \">\r\n                        <div className=\"row center\">\r\n                            \r\n                            <div className=\"col-8 header__title--body\">\r\n                                    <div className=\"specialty-header__title\">Bác sĩ hỏi đáp</div>\r\n                            </div>\r\n                            <div className=\"col-4 header__button--body\">\r\n                                <button type=\"button\" className=\"btn btn-info specialty-header__button\"\r\n                                onClick={() => this.handleOnClickDoctor()}\r\n                                \r\n                                \r\n                                ><FormattedMessage id =\"home-page.see-more\"/></button>\r\n                            </div>\r\n                        \r\n                        </div>\r\n                    </div>\r\n\r\n                    </div>\r\n\r\n                    <div className=\"grid wide\">\r\n                                <Slider {...this.props.settings}>\r\n                           \r\n                                    <div className=\"specialty-content__body \" onClick={() => this.handleOnClickPatientAsked()}>\r\n                                        <div className='specialty-content'> \r\n                                            <div className=\"specialty-content__img img_answered-1\"></div>\r\n                                            \r\n                                            <span className='specialty-content__text answered-text'>Bệnh nhân đặt câu hỏi</span>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"specialty-content__body \" onClick={() => this.handleDetailerAsKAnswer()}>\r\n                                        <div className='specialty-content'> \r\n                                            <div className=\"specialty-content__img img_answered\"></div>\r\n                                            \r\n                                            <span className='specialty-content__text answered-text'>Cảm nang hỏi đáp</span>\r\n                                        </div>\r\n                                    </div>\r\n                                </Slider>\r\n                            </div>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isLoggedIn: state.user.isLoggedIn\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n    };\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(AnsweredDoctor));\r\n\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Slider from \"react-slick\";\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\nimport './ForYou.scss'\r\nclass ForYou extends Component {\r\n\r\n    render() {\r\n        \r\n      \r\n        return (\r\n           < React.Fragment>\r\n                <div className=\"section-specialty section-doctor\">\r\n                    <div className=\"specialty-content\">\r\n                    <div className=\"grid wide \">\r\n                        <div className=\"row center\">\r\n                            \r\n                            <div className=\"col-12 header__title--body\">\r\n                                    <div className=\"specialty-header__title\">Dành cho bạn</div>\r\n                            </div>\r\n                            <div className=\"col-4 mt-4\">\r\n                                <div className=\"specialty-content__body\">\r\n                                    <div className='specialty-content doctor-container '> \r\n                                        <div className=\"specialty-content__img  img_for-you\"></div>\r\n                                        \r\n                                        <div className='specialty-content for-you-container__text'>\r\n                                            <span className=\"for-you_doctor\">Bài viết</span>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"col-4 mt-4\">\r\n                                <div className=\"specialty-content__body\">\r\n                                    <div className='specialty-content doctor-container '> \r\n                                        <div className=\"specialty-content__img  img_for-you\"></div>\r\n                                        \r\n                                        <div className='specialty-content for-you-container__text'>\r\n                                            <span className=\"for-you_doctor\">Bài viết</span>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"col-4 mt-4\">\r\n                                <div className=\"specialty-content__body\">\r\n                                    <div className='specialty-content doctor-container '> \r\n                                        <div className=\"specialty-content__img  img_for-you\"></div>\r\n                                        \r\n                                        <div className='specialty-content for-you-container__text'>\r\n                                            <span className=\"for-you_doctor\">Bài viết</span>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            \r\n                        \r\n                        </div>\r\n                    </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isLoggedIn: state.user.isLoggedIn\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ForYou);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport './Specialty.scss';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport Slider from \"react-slick\";\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\nimport SpecialtyImg from \"../../../assets/img-specialty/sieu-am-thai.jpg\"\r\n\r\nclass  MentalHealth extends Component {\r\n   \r\n\r\n    render() {\r\n     \r\n\r\n        return (\r\n           < React.Fragment>\r\n                <div className=\"section-specialty bg_1\">\r\n                    <div className=\"section-specialty\">\r\n                        <div className=\"grid wide \">\r\n                            <div className=\"row center\">\r\n                                \r\n                                <div className=\"col-8 header__title--body\">\r\n                                        <div className=\"specialty-header__title\">Sức khoẻ tinh thần</div>\r\n                                </div>\r\n                                <div className=\"col-4 header__button--body\">\r\n                                    <button type=\"button\" className=\"btn btn-info specialty-header__button\"><FormattedMessage id =\"home-page.see-more\"/></button>\r\n                                </div>\r\n                            \r\n                            </div>\r\n                        </div>\r\n                        \r\n                    </div>\r\n\r\n                    <div className=\"grid wide \">\r\n                        <Slider {...this.props.settings}>\r\n                            <div className=\"specialty-content__body\">\r\n                                <div className='specialty-content'> \r\n                                    <div className=\"specialty-content__img img_mental-health\"></div>\r\n                                    \r\n                                    <span className='specialty-content__text'>Sức Khỏe tâm thần</span>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"specialty-content__body\">\r\n                                <div className='specialty-content'> \r\n                                    <div className=\"specialty-content__img img_mental-health\"></div>\r\n                                    \r\n                                    <span className='specialty-content__text'>Sức Khỏe tâm thần</span>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"specialty-content__body\">\r\n                                <div className='specialty-content'> \r\n                                    <div className=\"specialty-content__img img_mental-health\"></div>\r\n                                    \r\n                                    <span className='specialty-content__text'>Sức Khỏe tâm thần</span>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"specialty-content__body\">\r\n                                <div className='specialty-content'> \r\n                                    <div className=\"specialty-content__img img_mental-health\"></div>\r\n                                    \r\n                                    <span className='specialty-content__text'>Sức Khỏe tâm thần</span>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"specialty-content__body\">\r\n                                <div className='specialty-content'> \r\n                                    <div className=\"specialty-content__img img_mental-health\"></div>\r\n                                    \r\n                                    <span className='specialty-content__text'>Sức Khỏe tâm thần</span>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"specialty-content__body\">\r\n                                <div className='specialty-content'> \r\n                                    <div className=\"specialty-content__img img_mental-health\"></div>\r\n                                    <span className='specialty-content__text'>Sức Khỏe tâm thần</span>\r\n                                </div>\r\n                            </div>\r\n    \r\n                           \r\n                        </Slider>\r\n                    </div>\r\n                    \r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isLoggedIn: state.user.isLoggedIn,\r\n        language: state.app.language\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n \r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MentalHealth);\r\n","export default __webpack_public_path__ + \"static/media/sieu-am-thai.d50cbd1c.jpg\";","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport './Specialty.scss';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport Slider from \"react-slick\";\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\nimport './ForLife.scss'\r\n\r\n\r\n\r\nclass  ForLife extends Component {\r\n    \r\n\r\n    render() {\r\n       \r\n\r\n        return (\r\n           < React.Fragment>\r\n               \r\n                <div className=\"section-specialty\">\r\n                    <div className=\"grid wide \">\r\n                        <div className=\"row center\">\r\n                            \r\n                            <div className=\"col-8 header__title--body\">\r\n                                    <div className=\"specialty-header__title\">Sống khoẻ suốt đời</div>\r\n                            </div>\r\n                            <div className=\"col-4 header__button--body\">\r\n                                <button type=\"button\" className=\"btn btn-info specialty-header__button\"><FormattedMessage id =\"home-page.see-more\"/></button>\r\n                            </div>\r\n                        \r\n                        </div>\r\n                    </div>\r\n                    \r\n                </div>\r\n                 <div className=\"grid wide \">\r\n                 <Slider {...this.props.settings}>\r\n                            <div className=\"specialty-content__body\">\r\n                                <a target=\"_blank\"  href=\"https://www.vinmec.com/vi/tin-tuc/thong-tin-suc-khoe/nhi/muon-tang-chieu-cao-phai-lam-sao\" style={{textDecoration: \"none\"}}>\r\n                                    <div className='specialty-content for-life-content '> \r\n                                        <div className=\"specialty-content__img img_for-life\"></div>\r\n                                        \r\n                                        <span className='for-life-content__text'>Muốn tăng chiều cao: Phải làm sao?.....</span>\r\n                                    </div>\r\n                                </a>\r\n                            </div>\r\n\r\n                            <div className=\"specialty-content__body\">\r\n                                <a target=\"_blank\" href=\"https://www.vinmec.com/vi/tin-tuc/thong-tin-suc-khoe/nhi/cha-me-don-cac-huong-dan-khi-nuoi-con-1-minh/\" style={{textDecoration: \"none\"}}>\r\n                                    <div className='specialty-content for-life-content '> \r\n                                        <div className=\"specialty-content__img img_for-life-1\"></div>\r\n                                        \r\n                                        <span className='for-life-content__text'>Cha mẹ đơn thân: Các hướng dẫn khi nuôi con 1 mình.....</span>\r\n                                    </div>\r\n                                </a>\r\n                            </div>\r\n                            <div className=\"specialty-content__body\">\r\n                                <a target=\"_blank\" href=\"https://www.vinmec.com/vi/tin-tuc/thong-tin-suc-khoe/nhi/tuan-dau-tien-sau-khi-chao-doi-lam-quen-voi-tre/\" style={{textDecoration: \"none\"}}>\r\n                                    <div className='specialty-content for-life-content '> \r\n                                        <div className=\"specialty-content__img img_for-life-2\"></div>\r\n                                        \r\n                                        <span className='for-life-content__text'>Tuần đầu tiên sau khi chào đời: Làm quen với trẻ.....</span>\r\n                                    </div>\r\n                                </a>\r\n                            </div>\r\n\r\n                            <div className=\"specialty-content__body\">\r\n                                <a target=\"_blank\" href=\"https://www.vinmec.com/vi/tin-tuc/thong-tin-suc-khoe/nhi/lam-gi-khi-tre-bi-mem-sun-thanh-quan/\" style={{textDecoration: \"none\"}}>\r\n                                    <div className='specialty-content for-life-content '> \r\n                                        <div className=\"specialty-content__img img_for-life-3\"></div>\r\n                                        \r\n                                        <span className='for-life-content__text'>Làm gì khi trẻ bị mềm sụn thanh quản?....</span>\r\n                                    </div>\r\n                                </a>\r\n                            </div>\r\n\r\n                            <div className=\"specialty-content__body\">\r\n                                <a target=\"_blank\" href=\"https://www.vinmec.com/vi/tin-tuc/thong-tin-suc-khoe/nhi/dieu-tri-nhiem-trung-so-sinh-nao/\" style={{textDecoration: \"none\"}}>\r\n                                    <div className='specialty-content for-life-content '> \r\n                                        <div className=\"specialty-content__img img_for-life-4\"></div>\r\n                                        \r\n                                        <span className='for-life-content__text'>Điều trị nhiễm trùng sơ sinh thế nào?....</span>\r\n                                    </div>\r\n                                </a>\r\n                            </div>\r\n\r\n                            <div className=\"specialty-content__body\">\r\n                                <a target=\"_blank\" href=\"https://www.vinmec.com/vi/tin-tuc/thong-tin-suc-khoe/san-phu-khoa-va-ho-tro-sinh-san/cac-xet-nghiem-can-lam-de-chan-doan-nhiem-trung-so-sinh-som/?link_type=related_posts\" style={{textDecoration: \"none\"}}>\r\n                                    <div className='specialty-content for-life-content '> \r\n                                        <div className=\"specialty-content__img img_for-life-5\"></div>\r\n                                        \r\n                                        <span className='for-life-content__text'>Các xét nghiệm cần làm để chẩn đoán nhiễm trùng sơ sinh sớm?....</span>\r\n                                    </div>\r\n                                </a>\r\n                            </div>\r\n\r\n                    \r\n\r\n                            \r\n                           \r\n                        </Slider>\r\n                 </div>\r\n                       \r\n                    \r\n               \r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isLoggedIn: state.user.isLoggedIn,\r\n        language: state.app.language\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n \r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ForLife);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport './ForYou.scss';\r\nimport '../../gird/gird.scss';\r\n\r\nimport './VideoDoctor.scss';\r\n\r\n\r\nclass VideoDoctor extends Component {\r\n\r\n    render() {\r\n      \r\n      \r\n        return (\r\n            <div className=\"video-doctor-body bg mt-4\">\r\n                <div className=\"video-header\">\r\n                    <div className=\"video-header__text\">\r\n                        Truyền thông nói về Booking Care\r\n                    </div>\r\n                </div>\r\n                <div className=\"video__footer \">\r\n                    <div className=\"grid wide\">\r\n                        <div className=\"video_body\">\r\n                            <div className=\"row\">\r\n                            \r\n                                <div className=\"col l-6 m-12 c-12\">\r\n                                    <div className=\"video-content\">\r\n                                        <iframe  width=\"592\" height=\"332\" className='video' src=\"https://www.youtube.com/embed/FyDQljKtWnI\" title=\"CÀ PHÊ KHỞI NGHIỆP VTV1 - BOOKINGCARE - HỆ THỐNG ĐẶT LỊCH KHÁM TRỰC TUYẾN\" frameBorder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" allowFullScreen></iframe>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col l-6 m-0 c-0\">\r\n                                    \r\n                                    <div className=\"row\">\r\n                                            <div className=\"col l-6 c-6 logo-video__container mt-2\">\r\n                                                <a target='_black' href=\"https://vtv.vn/video/ca-phe-khoi-nghiep-14-11-2018-334894.htm\" className='link-video'>\r\n                                                        <div className=\"img-video\"></div>\r\n                                                </a>\r\n                                            </div>\r\n\r\n                                            <div className=\"col l-6 c-6 logo-video__container mt-2\">\r\n                                                <a target='_black' href=\"https://dantri.com.vn/nhan-tai-dat-viet/san-pham-nen-tang-dat-kham-booking-care-201908201625624751.htm\" className='link-video'>\r\n                                                        <div className=\"img-video1\"></div>\r\n                                                </a>\r\n                                            </div>\r\n                                            <div className=\"col l-6 c-6 logo-video__container mt-4\">\r\n                                                <a target='_black' href=\"https://vtc.vn/dat-kham-chuyen-khoa-va-hanh-trinh-ho-tro-cac-benh-vien-qua-tai-ar434101.html\" className='link-video'>\r\n                                                        <div className=\"img-video2\"></div>\r\n                                                </a>\r\n                                            </div>\r\n\r\n                                            <div className=\"col l-6 c-6 logo-video__container mt-4\">\r\n                                                <a target='_black' href=\"https://infonet.vietnamnet.vn/da-co-hon-20000-luot-benh-nhan-dat-lich-kham-qua-bookingcare-175080.html\" className='link-video'>\r\n                                                        <div className=\"img-video3\"></div>\r\n                                                </a>\r\n                                            </div>\r\n\r\n                                            <div className=\"col l-6 c-6 logo-video__container mt-4\">\r\n                                                <a target='_black' href=\"https://vtv.vn/video/ca-phe-khoi-nghiep-14-11-2018-334894.htm\" className='link-video'>\r\n                                                        <div className=\"img-video4\"></div>\r\n                                                </a>\r\n                                            </div>\r\n\r\n                                            <div className=\"col l-6 c-6  logo-video__container mt-4\">\r\n                                                <a target='_black' href=\"https://vtv.vn/video/ca-phe-khoi-nghiep-14-11-2018-334894.htm\" className='link-video'>\r\n                                                        <div className=\"img-video5\"></div>\r\n                                                </a>\r\n                                            </div>\r\n\r\n                                            <div className=\"col l-6 c-6  logo-video__container mt-4\">\r\n                                                <a target='_black' href=\"https://vtv.vn/video/ca-phe-khoi-nghiep-14-11-2018-334894.htm\" className='link-video'>\r\n                                                        <div className=\"img-video6\"></div>\r\n                                                </a>\r\n                                            </div>\r\n\r\n                                            <div className=\"col l-6 c-6   logo-video__container mt-4\">\r\n                                                <a target='_black' href=\"https://vtv.vn/video/ca-phe-khoi-nghiep-14-11-2018-334894.htm\" className='link-video'>\r\n                                                        <div className=\"img-video\"></div>\r\n                                                </a>\r\n                                            </div>\r\n                                    \r\n                                    </div>\r\n                                        \r\n                                            \r\n\r\n                                        \r\n                                               \r\n                                </div>\r\n                              \r\n                            </div>\r\n                        </div>  \r\n                    </div>\r\n                </div>\r\n            </div>\r\n            \r\n            \r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isLoggedIn: state.user.isLoggedIn\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(VideoDoctor);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport HomeHeader from './HomeHeader';\r\nimport Specialty from './Section/Specialty';\r\nimport MedicalFacility from './Section/MedicalFacility';\r\nimport OutstandingDoctor from './Section/OutstandingDoctor';\r\nimport AnsweredDoctor from './Section/AnsweredDoctor';\r\nimport ForYou from './Section/ForYou';\r\nimport MentalHealth from './Section/MentalHealth';\r\nimport ForLife from './Section/ForLife';\r\nimport VideoDoctor from './Section/VideoDoctor';\r\nimport HomeFooter from './HomeFooter';\r\nimport './Section/Responsive.scss'\r\n\r\nimport './HomePage.scss'\r\n\r\nclass HomePage extends Component {\r\n  \r\n\r\n    render() {\r\n        // let settings = {\r\n        //     // dots: false,\r\n        //     // infinite: false,\r\n        //     // speed: 500,\r\n        //     // slidesToShow: 3,\r\n        //     // slidesToScroll: 1,\r\n         \r\n        //   };                               \r\n\r\n          var settings = {\r\n            dots: false,\r\n            infinite: false,\r\n            speed: 500,\r\n            slidesToShow: 3,\r\n            slidesToScroll: 1,\r\n        \r\n            responsive: [\r\n             \r\n              {\r\n                breakpoint: 1024,\r\n                settings: {\r\n                  slidesToShow: 3,\r\n                  slidesToScroll: 1,\r\n                  infinite: true,\r\n                  dots: false\r\n                }\r\n              },\r\n              {\r\n                breakpoint: 820,\r\n                settings: {\r\n                  slidesToShow: 2,\r\n                  slidesToScroll: 1,\r\n                  initialSlide: 2\r\n                }\r\n              },\r\n              {\r\n                breakpoint: 920,\r\n                settings: {\r\n                  slidesToShow: 3,\r\n                  slidesToScroll: 1,\r\n                  initialSlide: 3\r\n                }\r\n              },\r\n              {\r\n                breakpoint: 768,\r\n                settings: {\r\n                  slidesToShow: 2,\r\n                  slidesToScroll: 1,\r\n                  initialSlide: 2\r\n                }\r\n              },\r\n              {\r\n                breakpoint: 600,\r\n                settings: {\r\n                  slidesToShow: 2,\r\n                  slidesToScroll: 1,\r\n                  initialSlide: 2\r\n                }\r\n              },\r\n              {\r\n                breakpoint: 480,\r\n                settings: {\r\n                  slidesToShow: 2,\r\n                  slidesToScroll: 1\r\n                }\r\n              },\r\n              {\r\n                breakpoint: 420,\r\n                settings: {\r\n                  slidesToShow: 1,\r\n                  slidesToScroll: 1\r\n                }\r\n              },\r\n              {\r\n                breakpoint: 400,\r\n                settings: {\r\n                  slidesToShow: 1,\r\n                  slidesToScroll: 1\r\n                }\r\n              }\r\n            ]\r\n          };\r\n      \r\n        return (\r\n            < div>\r\n                <HomeHeader isShowBanner = {true}/>\r\n                <Specialty \r\n                settings = {settings} />\r\n\r\n                 <MedicalFacility\r\n                settings= {settings} />\r\n\r\n                <OutstandingDoctor  \r\n                settings= {settings} />\r\n\r\n                <AnsweredDoctor\r\n                 settings= {settings}/>\r\n\r\n                {/* <ForYou/> */}\r\n\r\n                {/* <MentalHealth  \r\n                settings= {settings} /> */}\r\n              \r\n                <VideoDoctor />\r\n\r\n                <ForLife  settings= {settings} />\r\n\r\n                <HomeFooter/>\r\n           </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isLoggedIn: state.user.isLoggedIn\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HomePage);\r\n","import React, { useState, useEffect  } from 'react';\r\nimport { getQuestionById } from '../../../../services/userServices';\r\nimport {  Modal, ModalHeader, ModalBody } from 'reactstrap';\r\nimport './DetailsModal.scss'\r\n\r\n\r\nconst DetailsModal = (props) => {\r\n\r\n    let {isOpenModal, closeModal, questionId, title } = props\r\n    const[dataModal, setDataModal] = useState('');\r\n\r\n\r\n\r\n    useEffect (async() => {\r\n\r\n        let res = await getQuestionById({\r\n            id: questionId\r\n        });\r\n\r\n  \r\n        let data = res.data;\r\n        if(res && res.errCode === 0){\r\n            setDataModal(data);\r\n        }\r\n    }, [])\r\n    return(\r\n\r\n        \r\n        <React.Fragment>\r\n               \r\n            <Modal isOpen={isOpenModal} \r\n                size='xl'\r\n                \r\n            >\r\n                <ModalHeader toggle={closeModal}>{title}</ModalHeader>\r\n                <ModalBody>\r\n                  <div className=\"body-QA\">\r\n                        <div className=\"title\">Câu hỏi: </div>\r\n                        <div className=\"nd\">\r\n                            {dataModal.question}\r\n                        </div>\r\n\r\n                        <div className=\"title\">Trả lời: </div>\r\n                        <div className=\"nd\">\r\n                            {dataModal.reply}\r\n                        </div>\r\n                  </div>\r\n                </ModalBody>\r\n                \r\n            </Modal>\r\n        </React.Fragment>\r\n    )\r\n    \r\n}\r\n\r\n\r\n\r\nexport default (DetailsModal);\r\n","import React, {useEffect, useState} from 'react';\r\nimport './DetailsDefault.scss'\r\nimport { withRouter } from 'react-router';\r\nimport DetailsModal from '../Doctor/modal/DetailsModal';\r\n\r\n\r\n\r\n\r\n\r\nconst DetailsDefault  = (props) => {\r\n\r\n    const {title, nameLink, setSizeImg, modal, arrDetails, setQuestion} = props  \r\n    const[isOpen, setIsOpen] = useState(false)\r\n\r\n\r\n    const[questionId, setQuestionId] = useState('');\r\n\r\n  \r\n    \r\n    const handleViewDetail = (clinic) => {\r\n        props.history.push(`/${nameLink}/${clinic.id}`)\r\n    }\r\n\r\n    const handleOnClick = (item) => {\r\n        setIsOpen(true);\r\n        setQuestionId(item.id);\r\n    }\r\n\r\n    const close = () => {\r\n        setIsOpen(false);\r\n        \r\n    }\r\n  \r\n\r\n \r\n\r\n    \r\n       \r\n        return (\r\n\r\n         \r\n           \r\n            <React.Fragment>\r\n          \r\n                <div className=\"link-container mt  mr-t\">\r\n                        <div className=\"container\">\r\n\r\n            \r\n                        <div className=\"row\">\r\n                            <div className=\"col-12\">\r\n                                <div className=\"link-text\">{title}</div>\r\n                            </div>\r\n\r\n                            \r\n                            \r\n                        </div>\r\n                        </div>\r\n                    \r\n                            <div className=\"container\">\r\n                            \r\n\r\n\r\n                                {arrDetails && arrDetails.length > 0 &&\r\n                                \r\n                                arrDetails.map((item, index) => {\r\n                                    return (\r\n                                    \r\n                                        \r\n                                    <div className=\"row mt mt-child\"\r\n                                    \r\n                                        onClick={() => modal === true ? handleOnClick(item) : handleViewDetail(item)}\r\n                                    >\r\n                                            \r\n                                                <div className=\"col-2 \">\r\n\r\n                                                \r\n                                                    <div className=\"detail__img \"\r\n\r\n                                        \r\n\r\n                                                    style={{backgroundImage: `url(${item.image})`,\r\n                                                \r\n                                                    backgroundSize : setSizeImg === true ? 'cover' : 'contain'\r\n                                                \r\n                                                    }}\r\n                                                    \r\n                                                    >\r\n\r\n                                                    </div>\r\n                                        \r\n                                                \r\n                                                </div>\r\n\r\n                                                <div className=\"col-10 \">\r\n                                                        <div className=\"detail__body-text\">\r\n                                                    \r\n                                                        <div className=\"detail__text-up\">\r\n\r\n                                                            {\r\n                                                                setQuestion === true ? item.question : item.name\r\n                                                            }\r\n                                                          \r\n                                                        </div>\r\n                                                    \r\n                                                        {/* <div className=\"detail-clinic__dow\">\r\n                                                            {item.address}\r\n                                                        </div> */}\r\n                                                    \r\n                                                        </div>\r\n                                                </div>\r\n                                    </div>\r\n                                        \r\n                                        \r\n                                \r\n\r\n                                    )\r\n                                })\r\n\r\n                                \r\n                                \r\n                                }\r\n                                \r\n                            \r\n                        </div>\r\n                        \r\n                </div>\r\n\r\n\r\n                {\r\n                    isOpen === true && \r\n                   <DetailsModal \r\n                        isOpenModal = {isOpen}\r\n                        closeModal = {close}\r\n                        dataModal = {arrDetails}\r\n                        questionId = {questionId}\r\n                        title = 'Bác sĩ trả lời'\r\n                   />\r\n                   \r\n                }\r\n        \r\n\r\n            </React.Fragment>\r\n        );\r\n    \r\n}\r\n\r\n\r\n\r\nexport default withRouter (DetailsDefault);\r\n","import React, { useState, useEffect } from 'react';\r\nimport HomeHeader from '../../HomePage/HomeHeader';\r\nimport HomeFooter from '../../HomePage/HomeFooter';\r\nimport './HeaderClinic.scss';\r\nimport { getAllMedicalFacilities } from '../../../services/userServices';\r\nimport DetailsDefault from '../DetailsDefault/DetailsDefault';\r\n\r\n\r\n\r\nconst HeaderClinic = () => {\r\n    \r\n    const[arrClinic, setArrClinic] = useState([])\r\n    const[sizeImg, setSizeImg] = useState(false)\r\n\r\n    useEffect( async() => {\r\n\r\n        let res = await getAllMedicalFacilities()\r\n        setArrClinic(res.data)\r\n        \r\n    }, [])\r\n\r\n\r\n    return(\r\n        <React.Fragment>\r\n    \r\n            <HomeHeader />\r\n\r\n            <DetailsDefault \r\n                title = 'Danh sách cơ sở y tế...'\r\n                nameLink='detail-clinic'\r\n                arrDetails = {arrClinic}\r\n                setSizeImg = {false}\r\n            />\r\n\r\n\r\n            <HomeFooter />\r\n\r\n        </React.Fragment>\r\n\r\n    )\r\n    \r\n    \r\n}\r\n\r\n\r\n\r\nexport default (HeaderClinic);\r\n\r\n","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\n\r\nimport './ProfileDoctor.scss'\r\nimport { languages } from '../../../utils';\r\nimport {getProfileDoctor} from '../../../services/userServices'\r\nimport _ from 'lodash';\r\nimport moment from 'moment';\r\nclass ProfileDoctor extends Component {\r\n\r\n        \r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n           dataProfile: {}\r\n        }\r\n    }\r\n  \r\n\r\n    async componentDidMount(){\r\n       let data = await this.getInfoDoctor(this.props.doctorId)\r\n       \r\n        this.setState({\r\n            dataProfile: data\r\n        })\r\n\r\n        \r\n     \r\n    }\r\n\r\n     getInfoDoctor = async (id) => {\r\n        let result = {};\r\n        if (id) {\r\n            let res = await getProfileDoctor(id);\r\n\r\n            if(res && res.errCode === 0){\r\n                result = res.data\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n\r\n  \r\n\r\n    renderTimeBooking = (dataTime) => {\r\n\r\n        let {language} = this.props\r\n        if(dataTime && !_.isEmpty(dataTime)){\r\n            let data = language === languages.VI ? moment(new Date()).format('dddd - DD/MM/YYYY')\r\n            :\r\n            moment(new Date()).locale('en').format('ddd - DD/MM/YYYY')\r\n            \r\n\r\n            let time = language === languages.VI ? dataTime.timeTypeData.valueVi : dataTime.timeTypeData.valueEn\r\n            \r\n            return (\r\n\r\n                <>\r\n                    <div className='time'>{time} - {data}</div>\r\n                    <div className='time-text'>Đặt lịch miễn phí</div>\r\n    \r\n                </>\r\n            )\r\n        }\r\n       \r\n    }\r\n\r\n\r\n    render() {\r\n        let{language, isShowDescription, dataTime} = this.props;\r\n        let {dataProfile} = this.state;\r\n    \r\n        let nameVi = '', nameEn = ''\r\n        if(dataProfile && dataProfile.positionData){\r\n           nameVi = `${dataProfile.positionData.valueVi}, ${dataProfile.lastName} ${dataProfile.firstName} `;\r\n           nameEn = `${dataProfile.positionData.valueEn}, ${dataProfile.firstName} ${dataProfile.lastName}`;\r\n        }\r\n       \r\n      \r\n        \r\n        return (\r\n\r\n            <React.Fragment>\r\n               <div className=\"detail-dataProfile \">\r\n                    \r\n                      <div className=\"dataProfile-left\">\r\n                            <div className=\"dataProfile-img\"\r\n\r\n                            style={{backgroundImage: `url(${dataProfile && dataProfile.image ? dataProfile.image : ''})`}}>\r\n\r\n                            </div>  \r\n                      </div>\r\n                     \r\n                      \r\n                      \r\n                            <div className=\"dataProfile-right\">\r\n                                <div className=\"dataProfile-right-up\">\r\n                                            <span className='dataProfile-right-up__text'>\r\n                                                {language === languages.VI ? nameVi : nameEn}\r\n                                            </span>\r\n                                                \r\n                                            \r\n                                </div>\r\n                                    \r\n                                <div className=\"dataProfile-right-dow\">\r\n                                            {isShowDescription === true ?\r\n                                                    <>\r\n\r\n\r\n                                                    {dataProfile && dataProfile.Markdown && dataProfile.Markdown.description\r\n                                                                && <span className='dataProfile-right-dow__text'>\r\n\r\n                                                                    {dataProfile.Markdown.description}\r\n                                                                </span>\r\n                                                            }\r\n                                                    </>\r\n                                                    :\r\n                                                    <>\r\n                                                        {this.renderTimeBooking(dataTime)}\r\n                                                    </>\r\n                                            }\r\n                                        \r\n                                                \r\n                                </div>\r\n                                \r\n                                <div className=\"dataProfile-right-footer\">\r\n\r\n                                    <i className=\"fas fa-map-marker-alt\"></i>\r\n\r\n                                    <>\r\n\r\n                                        {dataProfile && dataProfile.Doctor_info && dataProfile.Doctor_info.typeProvinceData\r\n                                            && <span className='dataProfile-right-footer__text'>\r\n                                                {dataProfile.Doctor_info.typeProvinceData.valueVi}\r\n                                            </span>\r\n                                        }\r\n                                    </>\r\n                                        \r\n\r\n\r\n                                                \r\n                                </div>\r\n\r\n                            </div> \r\n                                   \r\n                   </div>\r\n    \r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        language: state.app.language\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProfileDoctor);\r\n","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { FormattedDate } from 'react-intl';\r\nimport './BookingModal.scss';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport ProfileDoctor from '../ProfileDoctor';\r\nimport _, { times } from 'lodash'\r\nimport DatePicker from '../../../../components/Input/DatePicker';\r\nimport * as actions from '../../../../store/actions'\r\nimport {  languages } from '../../../../utils/constant';\r\nimport {postPatientBooking} from '../../../../services/userServices';\r\nimport { Toast, toast } from 'react-toastify';\r\nimport NumberFormat from 'react-number-format';\r\nimport LoadingOverlay from 'react-loading-overlay';\r\nimport moment from 'moment';\r\n\r\n\r\n\r\n\r\nclass BookingModal extends Component {\r\n   \r\n        \r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n           fullName: '',\r\n           phoneNumber: '',\r\n           email: '',\r\n           address:'',\r\n           reason: '',\r\n           gender: '',\r\n           doctorId: '',\r\n           birthday: '',\r\n           timeType: '',\r\n           extraInfo: {},\r\n           isShowLoading: false\r\n        }\r\n    }\r\n  \r\n\r\n\r\n    async componentDidMount(){\r\n        \r\n      \r\n        this.props.fetchGenderStart()\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot){\r\n        if( this.props.genderRedux !== prevProps.genderRedux ){\r\n            let arrGenders = this.props.genderRedux\r\n            this.setState({\r\n                genderArr: arrGenders,\r\n                gender: arrGenders &&  arrGenders.length > 0 ? arrGenders[0].keyMap : ''\r\n            })\r\n        }\r\n\r\n        if( this.props.fetchExtra !== prevProps.fetchExtra ){\r\n           \r\n            this.setState({\r\n \r\n                extraInfo: this.props.fetchExtra\r\n            })\r\n        }\r\n\r\n        if( this.props.dataScheduleTimeModal !== prevProps.dataScheduleTimeModal ){\r\n            if(this.props.dataScheduleTimeModal && !_.isEmpty(this.props.dataScheduleTimeModal)){\r\n                let doctorId = this.props.dataScheduleTimeModal.doctorId\r\n                \r\n                this.props.fetchExtraDoctor(this.props.dataScheduleTimeModal.doctorId);\r\n\r\n                this.setState({\r\n                    doctorId: doctorId,                    \r\n                    timeType: this.props.dataScheduleTimeModal.timeType\r\n                })\r\n\r\n            }\r\n            \r\n\r\n\r\n        }\r\n    }\r\n\r\n  \r\n\r\n     handleOnChangeInput = (event, id) => {\r\n        let valueInput = event.target.value;\r\n        let stateCopy = {...this.state}\r\n\r\n        stateCopy[id] = valueInput\r\n        this.setState({\r\n            ...stateCopy\r\n        })\r\n    }\r\n\r\n\r\n   \r\n        handleOnChangeDatePicket = (date) => {\r\n            this.setState({\r\n                birthday: date[0]\r\n            })\r\n        }\r\n    \r\n        handleConfirmBooking = async() => {\r\n            this.setState({\r\n                isShowLoading: true\r\n            })\r\n           \r\n            let date = new Date(this.state.birthday).getTime();\r\n            let timeString = this.buildTimeBooking(this.props.dataScheduleTimeModal);\r\n            let nameString = this.buildDoctorName(this.props.dataScheduleTimeModal);\r\n           \r\n\r\n            let res = await postPatientBooking({\r\n                fullName: this.state.fullName,\r\n                phoneNumber: this.state.phoneNumber,\r\n                email: this.state.email,\r\n                address:this.state.address,\r\n                reason: this.state.reason,\r\n                doctorId: this.props.dataScheduleTimeModal.doctorId,\r\n                date:this.props.dataScheduleTimeModal.date,\r\n                gender: this.state.gender,\r\n                timeType:  this.props.dataScheduleTimeModal.timeType,\r\n                language: this.props.language,\r\n                timeString: timeString,\r\n                doctorName: nameString\r\n                \r\n            })\r\n\r\n            if(res && res.errCode === 0){\r\n                this.setState({\r\n                    isShowLoading: false\r\n                })\r\n                toast.success('Đạt lịch thành công');\r\n                this.props.closeModalBooking();\r\n            }else{\r\n                this.setState({\r\n                    isShowLoading: false\r\n                })\r\n                toast.error('Đặt lịch thật bại')\r\n            }\r\n                \r\n            \r\n        }\r\n\r\n\r\n        buildDoctorName = (dataTime) => {\r\n            let {language} = this.props;\r\n            if(dataTime && !_.isEmpty(dataTime)){\r\n                let name = language === languages.VI ?  ` ${dataTime.doctorData.lastName} ${dataTime.doctorData.firstName}` \r\n                :\r\n               \r\n                `${dataTime.doctorData.firstName} ${dataTime.doctorData.lastName}` \r\n                return name\r\n            }\r\n        }\r\n\r\n        buildTimeBooking = (dataTime) => {\r\n\r\n            let {language} = this.props\r\n            if(dataTime && !_.isEmpty(dataTime)){\r\n                let data = language === languages.VI ? moment(new Date()).format('dddd - DD/MM/YYYY')\r\n                :\r\n                moment(new Date()).locale('en').format('ddd - DD/MM/YYYY')\r\n                \r\n    \r\n                let time = language === languages.VI ? dataTime.timeTypeData.valueVi : dataTime.timeTypeData.valueEn\r\n                \r\n                return   `${time} - ${data}`\r\n    \r\n    \r\n                \r\n            }\r\n            return ''\r\n           \r\n        }\r\n    render() {\r\n\r\n\r\n   \r\n     \r\n        let language = this.props.language;\r\n        let genders = this.state.genderArr;\r\n        let extraInfo = this.state.extraInfo;\r\n   \r\n        \r\n        let {isOpenModalBooking, closeModalBooking, dataScheduleTimeModal} = this.props\r\n\r\n     \r\n       \r\n       let today = new Date()\r\n       \r\n     \r\n\r\n        let doctorId = '';\r\n        if(dataScheduleTimeModal && !_.isEmpty(dataScheduleTimeModal)){\r\n            doctorId = dataScheduleTimeModal.doctorId\r\n        }\r\n\r\n      \r\n\r\n\r\n        return (\r\n\r\n            <React.Fragment>\r\n               \r\n             \r\n               <Modal isOpen={isOpenModalBooking} \r\n               \r\n               className='booking-modal-body'\r\n               size='lg'\r\n               centered\r\n               >\r\n\r\n                    <LoadingOverlay\r\n                        active={this.state.isShowLoading}\r\n                        spinner\r\n                        text='Loading your ...'\r\n                        >\r\n                \r\n                    </LoadingOverlay>\r\n                   <div className=\"booking-modal-container\">\r\n                        <div className=\"booking-modal-header\">\r\n                            <span className='left'>Thông tin đặt lịch khám bệnh</span>\r\n                           <span className=\"right\"\r\n                           onClick={closeModalBooking}\r\n                           \r\n                           > <i className='fas fa-times'></i></span>\r\n                        </div>\r\n\r\n                        <div className=\"booking-modal-childe__body\">\r\n                            <div className=\"doctor-info\">\r\n                                <ProfileDoctor \r\n                                    doctorId = {doctorId}\r\n                                    isShowDescription = {false}\r\n                                    dataTime = {dataScheduleTimeModal}\r\n                                /> \r\n                            </div>\r\n                            <div className=\"price\">\r\n                                <div class=\"form-check\">\r\n                                    <input class=\"form-check-input\" type=\"radio\" name=\"exampleRadios\" id=\"exampleRadios1\" value=\"option1\" checked />\r\n                                    <label class=\"form-check-label\" for=\"exampleRadios1\">\r\n                                        Giá Khám: \r\n                                        <NumberFormat\r\n\r\n                                        className=\"currency\"\r\n\r\n                                        value={\r\n\r\n                                        extraInfo.typePriceData && extraInfo.typePriceData.valueVi \r\n                                        ? extraInfo.typePriceData.valueVi  : ''} \r\n                                        displayType={'text'} thousandSeparator={true} suffix={'VND'} />\r\n                                    </label>\r\n                                </div>\r\n                                \r\n\r\n                            </div>\r\n\r\n                            <div className=\"content mt-4\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-6 form-group\">\r\n                                        <label htmlFor=\"\">Họ tên</label>\r\n                                        <input type=\"text\"  className='form-control'\r\n                                            value={this.state.fullName}\r\n                                            onChange={(event) =>this.handleOnChangeInput(event, 'fullName')}\r\n                                            placeholder='Nguyễn Văn A'\r\n                                        \r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"col-6 form-group\">\r\n                                        <label htmlFor=\"\">Số điện thoại</label>\r\n                                        <input type=\"text\"  className='form-control'\r\n                                            value={this.state.phoneNumber}\r\n                                            onChange={(event) =>this.handleOnChangeInput(event, 'phoneNumber')}\r\n                                            placeholder='0705500...'\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"col-6 form-group\">\r\n                                        <label htmlFor=\"\">Địa chỉ email</label>\r\n                                        <input type=\"text\"  className='form-control'\r\n                                            value={this.state.email}\r\n                                            onChange={(event) =>this.handleOnChangeInput(event, 'email')}\r\n                                            placeholder='email@gmail.com'\r\n\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"col-6 form-group\">\r\n                                        <label htmlFor=\"\">Địa liên hệ</label>\r\n                                        <input type=\"text\"  className='form-control'\r\n                                            value={this.state.address}\r\n                                            onChange={(event) =>this.handleOnChangeInput(event, 'address')}\r\n                                            placeholder='Hà Nội'\r\n\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"col-12 form-group\">\r\n                                        <label htmlFor=\"\">Lý do khám</label>\r\n                                        <textarea className=\"form-control textarea-body\" rows=\"4\"\r\n                        \r\n                                            onChange={(event) => this.handleOnChangeInput(event, 'reason')}\r\n                                            value={this.state.reason}\r\n                                            placeholder='Tội bị đau...'\r\n                                        >\r\n                                            \r\n                                        </textarea>\r\n                                    </div>\r\n                                    <div className=\"col-6 form-group\">\r\n                                        <label htmlFor=\"\">Ngày sinh</label>\r\n                                        <DatePicker \r\n                                            onChange={this.handleOnChangeDatePicket}\r\n                                            className= 'form-control'\r\n                                            value={this.state.birthday}\r\n                                            placeholder='Ấn chọn ngày sinh'\r\n                                        \r\n                                          \r\n                          \r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"col-6 form-group\">\r\n                                        <label htmlFor=\"\">Chọn giới tính</label>\r\n                                        <select className=\"form-control\"\r\n                                 \r\n                                            onChange={(event) => {this.handleOnChangeInput(event, 'gender')}}\r\n                                          \r\n                                            value={this.state.gender}\r\n                                            >\r\n\r\n                                                {genders && genders.length > 0 && \r\n                                                    genders.map((item, index) => {\r\n                                                        return (\r\n                                                            <option keyMap={index}  value={item.keyMap}> \r\n                                                                {language === languages.VI ? item.valueVi : item.valueEn}\r\n                                                            </option>\r\n                                                        )\r\n                                                    })\r\n                                                }\r\n      \r\n                                  \r\n                                        </select>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"booking-modal-footer\">\r\n                            <button type=\"button\" className=\"btn btn-modal__one btn-primary \"\r\n                            onClick={() => this.handleConfirmBooking()}\r\n                            \r\n                            \r\n                            >Xác nhận </button>\r\n                            <button type=\"button\" className=\"btn btn-modal__two btn-danger\" \r\n                                onClick={closeModalBooking}\r\n                            >Huỷ</button>\r\n                        </div>\r\n                   </div>\r\n                 \r\n                </Modal>\r\n\r\n\r\n                \r\n                \r\n             \r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        genderRedux: state.admin.genders,\r\n        language: state.app.language,\r\n        fetchExtra: state.admin.extraInfo,\r\n         \r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        fetchGenderStart: () => dispatch(actions.fetchGenderStart()),\r\n        fetchExtraDoctor: (doctorId) => dispatch(actions.fetchExtraInfo(doctorId)),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(BookingModal);\r\n","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport './doctorSchedule.scss';\r\nimport '../../gird/gird.scss';\r\nimport moment from 'moment';\r\n\r\nimport { languages } from '../../../utils';\r\nimport { getScheduleDoctor } from '../../../services/userServices';\r\nimport BookingModal from './modal/BookingModal';\r\n\r\n\r\n\r\nclass doctorSchedule extends Component {\r\n\r\n        \r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            allDay : [],\r\n            allTimes: [],\r\n            isOpenModalBooking: false,\r\n            dataScheduleTimeModal: {}\r\n        }\r\n    }\r\n  \r\n\r\n    async componentDidMount(){\r\n        \r\n        let{language} = this.props;\r\n        let arrDate = this.getArrDays(language);\r\n\r\n        if(this.props.doctorIdFromParent){\r\n            let res = await getScheduleDoctor(this.props.doctorIdFromParent, arrDate[0].value);\r\n\r\n            this.setState({\r\n                allTimes: res.data ? res.data : []\r\n            })\r\n        }\r\n\r\n        if(arrDate && arrDate.length > 0){\r\n            \r\n            this.setState({\r\n                allDay:arrDate,\r\n             \r\n            })\r\n        }\r\n\r\n        \r\n        \r\n        \r\n        \r\n    }\r\n\r\n    capitalizeFirstLetter(string) {\r\n        return string.charAt(0).toUpperCase() + string.slice(1)\r\n    }\r\n\r\n\r\n    getArrDays = (language) => {\r\n        let arrDate = [];\r\n        for(let i = 0; i < 7; i++){\r\n            let object = {};\r\n            if(language === languages.VI){\r\n                if(i === 0){\r\n                    let ddMM = moment(new Date()).format('DD/MM');\r\n                    let today = `Hôm nay - ${ddMM}`\r\n                    object.label = today\r\n                }else{\r\n                    let labelVi = moment(new Date()).add(i,'days').format('dddd - DD/MM');\r\n                    object.label = this.capitalizeFirstLetter(labelVi)\r\n                }\r\n\r\n            }else{\r\n                if(i === 0){\r\n                    let ddMM = moment(new Date()).format('DD/MM');\r\n                    let today = `Today - ${ddMM}`\r\n                    object.label = today\r\n                }else{\r\n                    object.label = moment(new Date()).add(i,'days').locale('en').format('ddd - DD/MM');\r\n                }\r\n\r\n                \r\n            }\r\n\r\n\r\n            object.value = moment(new Date()).add(i,'days').startOf('day').valueOf();\r\n            arrDate.push(object);\r\n        }\r\n       \r\n\r\n        return arrDate;\r\n\r\n        \r\n    }\r\n\r\n    async componentDidUpdate (prevProps, prevState, snapshot){\r\n        if(this.props.language !== prevProps.language){\r\n            let arrDate = this.getArrDays(this.props.language);\r\n            this.setState({\r\n                allDay: arrDate\r\n            })\r\n        }\r\n        if(this.props.doctorIdFromParent !== prevProps.doctorIdFromParent){\r\n            let arrDate = this.getArrDays(this.props.language);\r\n            let res = await getScheduleDoctor(this.props.doctorIdFromParent, arrDate[0].value);\r\n\r\n            this.setState({\r\n                allTimes: res.data ? res.data : []\r\n            })\r\n        }\r\n    }\r\n\r\n    handleOnChangeSelect = async(event) => {\r\n        if(this.props.doctorIdFromParent && this.props.doctorIdFromParent !== -1){\r\n            let doctorId = this.props.doctorIdFromParent;\r\n          \r\n         \r\n            let res = await getScheduleDoctor(doctorId, event.target.value);\r\n          \r\n            if(res && res.errCode === 0){\r\n\r\n                this.setState({\r\n                    allTimes: res.data ? res.data : []\r\n                })\r\n            }\r\n         \r\n          \r\n        }\r\n    }\r\n\r\n\r\n    handleClickScheduleTime = ( time) => {\r\n        this.setState({\r\n            isOpenModalBooking: true,\r\n            dataScheduleTimeModal: time\r\n        })\r\n    }\r\n\r\n    closeModalBooking = () => {\r\n        this.setState({\r\n            isOpenModalBooking: false\r\n        })\r\n    }\r\n\r\n    render() {\r\n        \r\n     \r\n        let{language} = this.props\r\n        let {allDay, allTimes, isOpenModalBooking, dataScheduleTimeModal} = this.state\r\n        \r\n       \r\n        return (\r\n\r\n\r\n\r\n            <React.Fragment>\r\n                <div className=\"schedule-container\">\r\n                    <div className=\"all-schedule\">\r\n                    <select onChange={(event) => this.handleOnChangeSelect(event)}>\r\n                        {allDay && allDay.length> 0 &&\r\n                        allDay.map((item, index) => {\r\n                            return (\r\n                                <option \r\n                                    value={item.value} \r\n                                    key={index}>\r\n                                    {item.label}\r\n                                </option>\r\n                            )\r\n                            \r\n                        })}\r\n                        \r\n                    </select>\r\n                    </div>\r\n\r\n                    <div className=\"all-available-time\">\r\n                        <div className=\"text-calender\">\r\n                            <span>\r\n                                <i className=\"fas fa-calendar-alt\"></i>\r\n                                Lịch Khám\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"time-content\">\r\n                    \r\n                                {allTimes && allTimes.length > 0 \r\n                                ? allTimes.map((item, index) => {\r\n                                    let timeDisplay = language === languages.VI ? item.timeTypeData.valueVi :\r\n                                    item.timeTypeData.valueEn\r\n\r\n                                    return(\r\n                                \r\n                                        <button  className='btn btn-time-schedule'\r\n\r\n                                        onClick={() => this.handleClickScheduleTime(item)}\r\n                                        key={index}>{timeDisplay}</button>\r\n                                    )\r\n                                })\r\n                                :\r\n                                <div className=\"text-no-schedule\">Không có lịch hẹn trông thời gian này, vui lòng chọn thời gian khác !</div>\r\n                            \r\n                            }\r\n                                        \r\n                    \r\n                    \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n               \r\n                <BookingModal \r\n                    isOpenModalBooking={isOpenModalBooking}\r\n                    closeModalBooking={this.closeModalBooking}\r\n                    dataScheduleTimeModal={dataScheduleTimeModal}\r\n                />\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        language: state.app.language\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(doctorSchedule);\r\n","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { FormattedDate } from 'react-intl';\r\nimport './DoctorExtralnfor.scss'\r\nimport { languages } from '../../../utils';\r\n\r\nimport {getExtraInfoById} from '../../../services/userServices'\r\n\r\nimport * as actions from '../../../store/actions'\r\n\r\nimport NumberFormat from 'react-number-format';\r\nclass DoctorExtralnfor extends Component {\r\n\r\n        \r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n           isShowDetailInfo : false,\r\n           extraInfo: {},\r\n         \r\n        }\r\n    }\r\n  \r\n\r\n    async componentDidMount(){\r\n        if(this.props.doctorIdFromParent){\r\n            this.props.fetchExtraDoctor(this.props.doctorIdFromParent);\r\n        }\r\n\r\n        \r\n            \r\n        \r\n       \r\n    }\r\n\r\n    async componentDidUpdate(prevProps, prevState, snapshot){\r\n        \r\n        if(this.props.doctorIdFromParent !== prevProps.doctorIdFromParent){\r\n          \r\n           \r\n  \r\n\r\n        this.props.fetchExtraDoctor(this.props.doctorIdFromParent);\r\n          \r\n     \r\n\r\n\r\n        \r\n        }\r\n        if(prevProps.fetchExtra !== this.props.fetchExtra){\r\n            this.setState({\r\n                extraInfo: this.props.fetchExtra\r\n            })\r\n        }\r\n    }\r\n\r\n   \r\n  \r\n\r\n\r\n    showHideDetailInfo = (status) => {\r\n        this.setState({\r\n            isShowDetailInfo: status\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n        \r\n        let isShowDetailInfo = this.state.isShowDetailInfo\r\n        let {extraInfo} = this.state\r\n        let language = this.props\r\n    \r\n     \r\n        return (\r\n\r\n            <React.Fragment>\r\n               <div className=\"doctor-extra-info-container\">\r\n                    <div className=\"doctor-extra-info__up\">\r\n                        <div className=\"extra-info__up--title\">Địa Chỉ Khám</div>\r\n                        <div className=\"extra-info__up--name\">\r\n                            {extraInfo && extraInfo.nameClinic ? extraInfo.nameClinic : ''}\r\n                        </div>\r\n                        <div className=\"extra-info__up--address\">\r\n                            {extraInfo && extraInfo.addressClinic ? extraInfo.addressClinic : ''}\r\n\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"doctor-extra-info__dow\">\r\n                    \r\n                        {isShowDetailInfo === false && \r\n                            <div className=\"extra-info__dow--container\">\r\n                                Giá Khám: \r\n                            \r\n                                  <span className='dow--price'>\r\n                                  <NumberFormat\r\n\r\n                                        className=\"currency\"\r\n\r\n                                        value={\r\n\r\n                                        extraInfo.typePriceData && extraInfo.typePriceData.valueVi \r\n                                        ? extraInfo.typePriceData.valueVi  : ''} \r\n                                        displayType={'text'} thousandSeparator={true} suffix={'VND'} />\r\n                                  </span>\r\n                                \r\n                                <span\r\n                                    onClick={() => this.showHideDetailInfo(true)}\r\n                                    className='dow--show'\r\n                                >\r\n\r\n                                     .Xem chi tiết\r\n                                </span>\r\n                            </div>\r\n\r\n                            \r\n\r\n                        }\r\n\r\n                    {isShowDetailInfo === true && \r\n                            <div className=\"price-show-container\">\r\n                                \r\n                                <div className=\"show-container-header\">Sức khoẻ tâm thần</div>\r\n                                <div className=\"show-container-price\">Giá khám</div>\r\n\r\n                                <div className=\"show-container-body\">\r\n                                    <div className=\"container-body-text-price\">\r\n                                        Giá khám:\r\n\r\n                                        \r\n                                    </div>\r\n                                    <div className=\"container-body-price\">\r\n\r\n                                            <NumberFormat\r\n\r\n                                                    className=\"currency\"\r\n\r\n                                                    value={\r\n\r\n                                                    extraInfo.typePriceData && extraInfo.typePriceData.valueVi \r\n                                                    ? extraInfo.typePriceData.valueVi  : ''} \r\n                                                    displayType={'text'} thousandSeparator={true} suffix={'VND'} />\r\n\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"container-body__atm\">Phòng khám có thanh toán hình thức  '\r\n\r\n                                 {   extraInfo.typePaymentData && extraInfo.typePaymentData.valueVi ? extraInfo.typePaymentData.valueVi : ''}' </div>\r\n\r\n\r\n\r\n                                <span\r\n                                    onClick={() => this.showHideDetailInfo(false)}\r\n                                >\r\n                                    Ẩn bảng giá.\r\n                                    \r\n                                </span>\r\n                            </div>\r\n\r\n                            \r\n\r\n                        }   \r\n                    </div>\r\n               </div>\r\n          \r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        language: state.app.language,\r\n        fetchExtra: state.admin.extraInfo,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n\r\n        fetchExtraDoctor: (doctorId) => dispatch(actions.fetchExtraInfo(doctorId)),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DoctorExtralnfor);\r\n","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport HomeHeader from '../../HomePage/HomeHeader';\r\nimport './DetailDoctor.scss';\r\nimport '../../gird/gird.scss'\r\nimport {getDetailDoctor} from '../../../services/userServices'\r\nimport { languages } from '../../../utils';\r\nimport DoctorSchedule from './doctorSchedule';\r\nimport HomeFooter from '../../HomePage/HomeFooter'\r\nimport DoctorExtralnfor from './DoctorExtralnfor';\r\n\r\n\r\nclass DetaiDoctor extends Component {\r\n\r\n        \r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            detailDoctor: {},\r\n            currentDoctorId: -1\r\n        }\r\n    }\r\n  \r\n\r\n    async componentDidMount(){\r\n       if(this.props.match && this.props.match.params && this.props.match.params.id){\r\n            let id = this.props.match.params.id;\r\n\r\n            this.setState({\r\n                currentDoctorId: id\r\n            })\r\n            let res = await getDetailDoctor(id);\r\n            if(res && res.errCode === 0){\r\n                this.setState({\r\n                    detailDoctor: res.data,\r\n                   \r\n                })\r\n            }\r\n            \r\n       }\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot){\r\n        if(prevProps.topDoctorsRedux !== this.props.topDoctorsRedux){\r\n            this.setState({\r\n                arrDoctors: this.props.topDoctorsRedux\r\n            \r\n            })\r\n        }\r\n    }\r\n    handleViewDetailDoctor = (doctor) => {\r\n        \r\n      \r\n        this.props.history.push(`/detail-doctor/${doctor.id}`)\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    render() {\r\n        let{language} = this.props;\r\n    \r\n        let {detailDoctor} = this.state;\r\n         let nameVi = '', nameEn = ''\r\n        if(detailDoctor && detailDoctor.positionData){\r\n            nameVi = `${detailDoctor.positionData.valueVi}, ${detailDoctor.lastName} ${detailDoctor.firstName} `;\r\n            nameEn = `${detailDoctor.positionData.valueEn}, ${detailDoctor.firstName} ${detailDoctor.lastName}`;\r\n        }\r\n        \r\n      \r\n        return (\r\n\r\n            <React.Fragment>\r\n                <HomeHeader isShowBanner = {false}/>\r\n\r\n               <div className=\"body\">\r\n                    <div className=\"detail-container__one\">\r\n                       \r\n                        <div className=\"grid wide\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col l-2 m-3 c-2\">\r\n                                    <div className=\"container__one-left\"\r\n\r\n                                    style={{backgroundImage: `url(${detailDoctor && detailDoctor.image ? detailDoctor.image : ''})`}}>\r\n                                    \r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col l-7 m-6 c-8\">\r\n                                    <div className=\"container__one-right\">\r\n                                    <div className=\"container__one-right-up\">\r\n                                        <span className='container__one-right-up__text'>\r\n                                            {language === languages.VI ? nameVi : nameEn}\r\n                                        </span>\r\n                                            \r\n                                        \r\n                                    </div>\r\n                                    <div className=\"container__one-right-dow\">\r\n                                            {detailDoctor && detailDoctor.Markdown && detailDoctor.Markdown.description\r\n                                                && <span className='container__one-right-dow__text'>\r\n\r\n                                                    {detailDoctor.Markdown.description}\r\n                                                </span>\r\n                                            }\r\n                                    </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            \r\n                        </div>\r\n                            \r\n                                \r\n                    </div>\r\n\r\n                    <div className=\"detail-container__two\">\r\n                        <div className=\"grid wide\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col l-8  m-6 c-12\">\r\n                                    <div className=\"container__two-left\">\r\n                            \r\n                                            <DoctorSchedule \r\n                                                doctorIdFromParent = {this.state.currentDoctorId}\r\n                                            />\r\n                                    </div>\r\n                                </div>  \r\n                                <div className=\"col l-4  m-6 c-12\">\r\n                                    <div className=\"container__two-right\">\r\n                                        <DoctorExtralnfor \r\n                                         doctorIdFromParent = {this.state.currentDoctorId}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"detail-container__three\">\r\n                        <div className=\"grid wide\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-8\">\r\n                                    <div className=\"detail-container__three-list\">\r\n                                        {detailDoctor && detailDoctor.Markdown && detailDoctor.Markdown.contentHtml\r\n                                            &&\r\n                                            <div dangerouslySetInnerHTML={{__html: detailDoctor.Markdown.contentHtml }}></div>\r\n                                        \r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n               </div>\r\n               \r\n               <div className=\"\"><HomeFooter /></div>\r\n                \r\n                \r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        language: state.app.language\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DetaiDoctor);\r\n","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { FormattedDate } from 'react-intl';\r\nimport './DetailSpecialty.scss'\r\nimport HomeHeader from '../../HomePage/HomeHeader';\r\nimport { getDetailSpecialtyById, getAllCodeService } from '../../../services/userServices';\r\nimport DoctorSchedule from '../Doctor/doctorSchedule';\r\nimport DoctorExtralnfor from '../Doctor/DoctorExtralnfor';\r\nimport ProfileDoctor from '../Doctor/ProfileDoctor';\r\nimport { dateFilter } from 'react-bootstrap-table2-filter';\r\nimport Select from 'react-select';\r\nimport _ from 'lodash';\r\nimport { languages } from '../../../utils';\r\nimport HomeFooter from '../../../containers/HomePage/HomeFooter'\r\n\r\nclass DetailSpecialty extends Component {\r\n\r\n        \r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n           arrDoctorId: [],\r\n           detailSpecialty: {},\r\n           listProvince: [], \r\n           selectProvince: '',\r\n      \r\n        }\r\n    }\r\n  \r\n\r\n    async componentDidMount(){\r\n        if(this.props.match && this.props.match.params && this.props.match.params.id){\r\n             let id = this.props.match.params.id;\r\n\r\n\r\n\r\n             let res = await getDetailSpecialtyById({\r\n                id: id,\r\n                location: 'All'\r\n             });\r\n        \r\n             let resProvince = await getAllCodeService(\"PROVINCE\");\r\n            \r\n             if(res && res.errCode === 0 && resProvince && resProvince.errCode === 0){\r\n                let data = res.data;\r\n                let arrDoctorId = []\r\n                if(data && !_.isEmpty(res.data)){\r\n                    let arr = data.doctorSpecialty;\r\n                    if(arr && arr.length > 0){\r\n                        arr.map(item => {\r\n                            arrDoctorId.push(item.doctorId)\r\n                        })\r\n                    }\r\n                }\r\n                let  dataSelectPrice = this.buildDataInputSelect(resProvince.data)\r\n\r\n        \r\n               \r\n                 this.setState({\r\n                    detailSpecialty: res.data, \r\n                    arrDoctorId: arrDoctorId,\r\n                    listProvince: dataSelectPrice\r\n                 })\r\n             }\r\n             \r\n        }\r\n     }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot){\r\n        \r\n      \r\n    }\r\n  \r\n\r\n    buildDataInputSelect = (inputData) => {\r\n        let result = [];\r\n        let {language} = this.props\r\n        \r\n        if(inputData && inputData.length > 0){\r\n            inputData.map((item, index) => {\r\n                    let object = {};\r\n                    let labelVi =  `${item.valueVi} ` \r\n                    let labelEn = `${item.valueEn} `\r\n                    object.label = language === languages.VI ? labelVi : labelEn\r\n    \r\n                    object.value = item.id;\r\n                    object.keyMap = item.keyMap;\r\n                    result.push(object)     \r\n            })\r\n           \r\n        }\r\n\r\n        return result;\r\n    }\r\n    \r\n\r\n    handleChangeSelect =  async (selectedOption) => {\r\n        if(this.props.match && this.props.match.params && this.props.match.params.id){\r\n            let id = this.props.match.params.id;\r\n            let location = selectedOption.keyMap;\r\n            let res = await getDetailSpecialtyById({\r\n                id: id,\r\n                location: location\r\n             });\r\n        \r\n             let resProvince = await getAllCodeService(\"PROVINCE\");\r\n\r\n             if(res && res.errCode === 0 && resProvince && resProvince.errCode === 0){\r\n                let data = res.data;\r\n                let arrDoctorId = []\r\n                if(data && !_.isEmpty(res.data)){\r\n                    let arr = data.doctorSpecialty;\r\n                    if(arr && arr.length > 0){\r\n                        arr.map(item => {\r\n                            arrDoctorId.push(item.doctorId)\r\n                        })\r\n                    }\r\n                }\r\n                let  dataSelectPrice = this.buildDataInputSelect(resProvince.data)\r\n\r\n                 this.setState({\r\n                    detailSpecialty: res.data, \r\n                    arrDoctorId: arrDoctorId,\r\n                    listProvince: dataSelectPrice\r\n                 })\r\n             }\r\n        }\r\n        \r\n        \r\n    }\r\n\r\n    render() {\r\n        \r\n        let {arrDoctorId} = this.state\r\n        let {detailSpecialty} = this.state\r\n        let { listProvince} = this.state\r\n   \r\n\r\n        \r\n        return (\r\n            \r\n            <React.Fragment>\r\n                 <HomeHeader />\r\n                <div className=\"detail-specialty-container mt mr-t\">\r\n                <div className=\"grid wide bg-container\">\r\n                    <div className=\"row\">\r\n\r\n                        <div className=\"col l-12 m-12 c-12\">\r\n                            {detailSpecialty && detailSpecialty.name &&\r\n                                <span className='detail-specialty-span'> Chuyên khoa: {detailSpecialty.name}</span>\r\n                            }\r\n                        </div>\r\n                        <div className=\"col l-12 m-12 c-12\">\r\n                            \r\n                        {detailSpecialty && detailSpecialty.descriptionHtml\r\n                            &&\r\n                            <div dangerouslySetInnerHTML={{__html: detailSpecialty.descriptionHtml }}></div>\r\n                                     \r\n                            \r\n                        }\r\n                        \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"grid wide bg-container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col l-3 m-3 c-12 \">\r\n                        <Select\r\n                                \r\n                                // value={this.state.selectedPrice}\r\n                                options={listProvince}\r\n                                placeholder = {'Toàn Quốc'}\r\n                                name = \"selectProvince\"\r\n                                onChange={this.handleChangeSelect}\r\n                            \r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"grid wide bg-container\">\r\n                    <div className=\"row\">\r\n                        {arrDoctorId && arrDoctorId.length > 0 &&\r\n                                arrDoctorId.map((item, index) => {\r\n                                    return(\r\n\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col l-6 m-6 c-12 mt-5\">\r\n                                            <ProfileDoctor \r\n                                            doctorId = {item}\r\n                                            isShowDescription = {true} />\r\n                                            </div>\r\n                                            \r\n\r\n                                        <div className=\"col l-6 m-6 c-12 body mt-5\">\r\n                                        <div className=\"\">\r\n                                        <DoctorSchedule\r\n                                            doctorIdFromParent = {item}\r\n                                        />\r\n                                        <div className=\"mb-4\">\r\n                                        <DoctorExtralnfor \r\n                                            doctorIdFromParent = {item}\r\n                                        />\r\n                                        </div>\r\n                                        </div>\r\n                                        </div>\r\n                                    </div>\r\n                                      \r\n                                    )\r\n                                   \r\n                                   \r\n                            \r\n                                })\r\n                                }\r\n                    </div>\r\n                               \r\n\r\n                            \r\n                        \r\n                </div>\r\n                </div>\r\n                <HomeFooter />\r\n            </React.Fragment>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        language: state.app.language\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DetailSpecialty);\r\n","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { FormattedDate } from 'react-intl';\r\nimport HomeHeader from '../../HomePage/HomeHeader';\r\nimport HomeFooter from '../../HomePage/HomeFooter';\r\nimport './DetailClinic.scss'\r\nimport {getMedicalFacilitiesById} from '../../../services/userServices';\r\nimport ProfileClinic from './profileClinic';\r\nimport _ from 'lodash';\r\nimport ProfileDoctor from '../Doctor/ProfileDoctor';\r\nimport DoctorSchedule from '../Doctor/doctorSchedule';\r\nimport DoctorExtralnfor from '../Doctor/DoctorExtralnfor';\r\nclass DetailClinic extends Component {\r\n     \r\n        \r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            detailClinic: {},\r\n            arrDoctorId: []\r\n        }\r\n    }\r\n  \r\n\r\n    async componentDidMount(){\r\n        if(this.props.match && this.props.match.params && this.props.match.params.id){\r\n            let id = this.props.match.params.id;\r\n            \r\n            let res = await getMedicalFacilitiesById({\r\n                id : id\r\n            });\r\n\r\n         \r\n            \r\n            if(res && res.errCode === 0) {\r\n                let data = res.data;\r\n                let arrDoctorId = []\r\n                if(data && !_.isEmpty(res.data)){\r\n                    let arr = data.doctorClinic;\r\n                    if(arr && arr.length > 0){\r\n                        arr.map(item => {\r\n                            arrDoctorId.push(item.doctorId)\r\n                        })\r\n                    }\r\n                }\r\n\r\n                this.setState({\r\n                    detailClinic: data,\r\n                    arrDoctorId: arrDoctorId\r\n                })\r\n\r\n            }\r\n          \r\n        }\r\n     \r\n    }\r\n\r\n    async componentDidUpdate (prevProps, prevState, snapshot){\r\n      \r\n    }\r\n  \r\n\r\n\r\n\r\n\r\n    render() {\r\n        \r\n     \r\n        let {detailClinic, arrDoctorId} = this.state\r\n        \r\n        return (\r\n\r\n            <React.Fragment>\r\n                <HomeHeader />\r\n    \r\n\r\n                <div className=\"clinic-container\">\r\n                    <div className=\"clinic-bg\">\r\n\r\n                    </div>\r\n\r\n                    <div className=\"clinic-header__menu\">\r\n                        <div className=\"container\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-12\">\r\n                                    <ProfileClinic \r\n                        \r\n                                    detailClinic = {detailClinic}\r\n                                    \r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        \r\n                    </div>\r\n                    <div className=\"grid wide bg-container mt-5 \">\r\n                        <div className=\"row\">\r\n                                {arrDoctorId && arrDoctorId.length > 0 &&\r\n                                arrDoctorId.map((item, index) => {\r\n                                    return(\r\n                                       \r\n                                    <div className=\"row doctor\">\r\n                                        <div className=\"col-6 mt-5  m-6 c-12\">\r\n                                            <ProfileDoctor \r\n                                                doctorId = {item}\r\n                                                isShowDescription = {true} />\r\n                                            </div>\r\n                                            \r\n\r\n                                        <div className=\"col-6 body   m-6 c-12 mt-5\">\r\n                                        <div className=\"\">\r\n                                        <DoctorSchedule\r\n                                            doctorIdFromParent = {item}\r\n                                        />\r\n                                        <div className=\"mb-4\">\r\n                                        <DoctorExtralnfor \r\n                                            doctorIdFromParent = {item}\r\n                                        />\r\n                                        </div>\r\n                                        </div>\r\n                                        </div>\r\n                                    </div>\r\n                                      \r\n                                    )\r\n                                   \r\n                                   \r\n                            \r\n                                })\r\n                                }    \r\n                        </div>\r\n                                    \r\n                </div>\r\n\r\n                    <div className=\"container mt-5\">\r\n                        <div className=\"row\">\r\n                        <div className=\"col-12\">\r\n                                    \r\n                                    { detailClinic && detailClinic.descriptionHtml &&\r\n\r\n                                        <div className=\"clinic-list\"\r\n                                               dangerouslySetInnerHTML={{__html: detailClinic.descriptionHtml }}\r\n                                        >\r\n                                        </div>\r\n                                    }\r\n                               \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                \r\n                \r\n         \r\n               <HomeFooter />\r\n    \r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        language: state.app.language\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DetailClinic);\r\n","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { postVerifyBookApp } from '../../services/userServices';\r\nimport HomeHeader from '../HomePage/HomeHeader';\r\nimport './VerifyEmail.scss';\r\nimport LoadingOverlay from 'react-loading-overlay';\r\n\r\nclass VerifyEmail extends Component {\r\n\r\n        \r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n          \r\n            statusVerify: false,\r\n            errCode : 0,\r\n            isShowLoading: false\r\n        }\r\n    }\r\n  \r\n\r\n    async componentDidMount(){\r\n        this.setState({\r\n            isShowLoading: true\r\n        })\r\n        if(this.props.location && this.props.location.search){\r\n            let urlParams = new URLSearchParams(this.props.location.search);\r\n            let token = urlParams.get('token');\r\n            let doctorId = urlParams.get('doctorId');\r\n          \r\n\r\n            let res = await postVerifyBookApp({\r\n                token: token,\r\n                doctorId: doctorId\r\n            })\r\n\r\n            if(res && res.errCode === 0){\r\n                this.setState({\r\n                    statusVerify: true,\r\n                    errCode: res.errCode,\r\n                    isShowLoading:false\r\n                })\r\n            }else{\r\n                this.setState({\r\n                    statusVerify: true,\r\n                    errCode: res && res.errCode ? res.errCode : -1,\r\n                    isShowLoading:false\r\n                })\r\n            }\r\n        }\r\n        \r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot){\r\n      \r\n    }\r\n  \r\n\r\n\r\n\r\n\r\n    render() {\r\n       \r\n        \r\n      let {statusVerify, errCode} = this.state\r\n        return (\r\n\r\n             \r\n            <React.Fragment>\r\n               \r\n                    <HomeHeader isShowBanner = {false}/>\r\n                    <div className=\"ve\">\r\n                    \r\n                {statusVerify == false ? \r\n                            <div className=\"\">\r\n                                    \r\n                            </div>\r\n                        :\r\n                        <div > \r\n\r\n                                {+errCode === 0 ? \r\n                                    <div className=\"verify-container \">\r\n                                        <div className=\"img-success color-success\"></div>\r\n                                        <div className=\"verify-text\">\r\n                                            <FormattedMessage id =\"verifyEmail.success\"/>\r\n                                        </div>\r\n                                        <div className=\"verify-text-chile color-success\">\r\n                                            <FormattedMessage id =\"verifyEmail.chile\"/>\r\n                                            <div className=\"verify-text-chile--one\">\r\n                                                <FormattedMessage id =\"verifyEmail.thank\"/>\r\n                                            </div>\r\n                                        </div>\r\n                                    \r\n                                    </div>\r\n                                \r\n                                \r\n                                :\r\n                                \r\n                \r\n                                <div className=\"verify-container \">\r\n                                        <div className=\"img-err\"></div>\r\n                                        <div className=\"verify-text color-failed\">\r\n                                            <FormattedMessage id =\"verifyEmail.failed\"/>\r\n                                        </div>\r\n                                        <div className=\"verify-text-chile color-failed\">\r\n                                            <FormattedMessage id =\"verifyEmail.chile-failed\"/>\r\n                                            <div className=\"verify-text-chile--one\">\r\n                                                <FormattedMessage id =\"verifyEmail.thank\"/>\r\n                                            </div>\r\n                                        </div>\r\n                                        \r\n                                </div>\r\n                                }\r\n                        </div>\r\n                        }\r\n                    </div>\r\n        \r\n                    <LoadingOverlay\r\n                        active={this.state.isShowLoading}\r\n                        spinner\r\n                        text='Loading your ...'\r\n                        >\r\n                \r\n                    </LoadingOverlay>\r\n              \r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        language: state.app.language\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(VerifyEmail);\r\n","import React, { useState, useEffect } from 'react';\r\nimport HomeHeader from '../../HomePage/HomeHeader';\r\nimport HomeFooter from '../../HomePage/HomeFooter';\r\nimport './HeaderSpecialty.scss';\r\nimport { getAllSpecialty } from '../../../services/userServices';\r\nimport DetailsDefault from '../DetailsDefault/DetailsDefault';\r\nimport { search } from '../../../services/userServices';\r\nimport InputForm from '../../../components/InputFrom/InputForm';\r\n\r\n\r\nconst HeaderSpecialty = () => {\r\n    \r\n    const[arrSpecialty, setArrSpecialty] = useState([])\r\n    const[isOpenInput, setIsOpenInput] = useState(false)\r\n    const [inputs, setInputs] = useState('All')\r\n\r\n    useEffect( async() => {\r\n\r\n        if(inputs === '') {\r\n            setInputs('All')\r\n        }\r\n\r\n        let res = await search({\r\n            search: inputs\r\n        })\r\n        setArrSpecialty(res.data)\r\n        \r\n        \r\n    },[inputs])\r\n\r\n    const handleChange = e => {\r\n    \r\n        setInputs(e.target.value)\r\n      \r\n        // setInputs(prevState => ({ ...prevState, [value.name] : value.value }));\r\n        console.log(inputs)\r\n    } \r\n\r\n\r\n    return(\r\n        <React.Fragment>\r\n          \r\n            <HomeHeader />\r\n            <div className=\"container\">\r\n               \r\n                    <div className=\"col-12\">\r\n                    <div className=\"form-group m-top\">\r\n                        <input type=\"text\"  className='form-control'\r\n                                placeholder=\"Tìm kiếm theo chuyên khoa\"\r\n                                onChange={(e) => handleChange(e)}\r\n                        />\r\n                        </div>\r\n                    </div>\r\n                \r\n            </div>\r\n            <DetailsDefault \r\n                title = 'Danh sách chuyên khoa......'\r\n                nameLink='detail-specialty'\r\n                arrDetails = {arrSpecialty}\r\n                setSizeImg = {true}\r\n                setIsOpenInput = {true}\r\n            \r\n            />\r\n\r\n\r\n            <HomeFooter />\r\n\r\n        </React.Fragment>\r\n\r\n    )\r\n    \r\n    \r\n}\r\n\r\n\r\n\r\nexport default (HeaderSpecialty);\r\n\r\n\r\n","import React, { useEffect, useState } from 'react';\r\nimport HomeHeader from '../../HomePage/HomeHeader';\r\nimport './DetailsAskAnswer.scss'\r\nimport HomeFooter from '../../HomePage/HomeFooter';\r\nimport { getReply } from '../../../services/userServices';\r\nimport DetailsDefault from '../DetailsDefault/DetailsDefault';\r\n\r\nconst DetailsAskAnswer = () => {\r\n\r\n\r\n    const[arrQuestions, setArrQuestions] = useState([]);\r\n  \r\n    const[isOpen, setIsOpen] = useState(false)\r\n  \r\n\r\n   \r\n\r\n    const close = () => {\r\n        setIsOpen(false);\r\n    }\r\n\r\n\r\n    useEffect( async() => {\r\n        let res = await getReply();\r\n        if(res && res.errCode == 0){\r\n            setArrQuestions(res.data);\r\n           \r\n        }\r\n    }, [])\r\n\r\n        return (\r\n\r\n\r\n            \r\n            <React.Fragment>\r\n\r\n            <HomeHeader />\r\n                < DetailsDefault \r\n                    title = 'Câu hỏi cộng đồng...'\r\n                    modal = {true}\r\n                    arrDetails = {arrQuestions}\r\n                    setSizeImg = {true}\r\n                    setQuestion = {true}\r\n                />\r\n\r\n\r\n            <HomeFooter />\r\n    \r\n            </React.Fragment>\r\n        );\r\n    \r\n}\r\n\r\n\r\n\r\nexport default (DetailsAskAnswer);\r\n","import React, { useState  } from 'react';\r\nimport './SliderBG.scss'\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\nimport Slider from \"react-slick\";\r\n\r\n\r\nconst SliderBG = () => {\r\n\r\n    var settings = {\r\n        dots: true,\r\n        infinite: true,\r\n        speed: 500,\r\n        slidesToShow: 1,\r\n        slidesToScroll: 1,\r\n        autoplaySpeed: 3000,\r\n        autoplay: true\r\n      };\r\n    \r\n\r\n    return(\r\n\r\n\r\n       \r\n\r\n\r\n        <React.Fragment>\r\n            <div className=\"body-slider\">\r\n            <Slider {...settings}>\r\n                <div className='slider-content'> \r\n                    <div className=\"img-slider\"></div>\r\n                                            \r\n                </div>\r\n                <div className='slider-content'> \r\n                    <div className=\"img-slider-1\"></div>\r\n                                            \r\n                </div>\r\n                <div className='slider-content'> \r\n                    <div className=\"img-slider-2\"></div>\r\n                                            \r\n                </div>\r\n                <div className='slider-content'> \r\n                    <div className=\"img-slider-2\"></div>                      \r\n                </div>\r\n                </Slider>\r\n            </div>\r\n                \r\n          \r\n        </React.Fragment>\r\n    )\r\n    \r\n}\r\n\r\n\r\n\r\nexport default (SliderBG);\r\n","import React, { useState, useEffect  } from 'react';\r\nimport HomeHeader from '../../HomePage/HomeHeader';\r\nimport HomeFooter from '../../HomePage/HomeFooter';\r\nimport './PatientAsked.scss'\r\nimport Slider from '../../../components/Slider/SliderBG';\r\nimport InputForm from '../../../components/InputFrom/InputForm';\r\nimport { createNewQuestion } from '../../../services/userServices';\r\nimport { toast } from 'react-toastify';\r\nimport {  CommonUtils } from '../../../utils';\r\n\r\n\r\n\r\nconst PatientAsked = (props) => {\r\n    const [inputs, setInputs] = useState({});\r\n    const [textarea, setTextarea] = useState('');\r\n    const [previewImgURL, setPreviewImgURL] = useState('');\r\n    const [imageBase64, setImageBase64] = useState('');\r\n    const [isOpen, setIsOpen] = useState(false);\r\n\r\n \r\n\r\n    const handleChange = value => {\r\n        setInputs(prevState => ({ ...prevState, [value.name] : value.value }));\r\n    }\r\n\r\n    const getDataPatientQuestion = async() => {\r\n        let res = await createNewQuestion ({\r\n            email: inputs.email,\r\n            fullName: inputs.name,\r\n            address: inputs.address,\r\n            phoneNumber: inputs.phoneNumber,\r\n            question: textarea,\r\n            image: imageBase64\r\n        })\r\n\r\n        if(res && res.errCode === 0){\r\n            toast.success('Lưu thông tin chuyên khoa thành công');\r\n            setInputs(\r\n                {\r\n                    email: '',\r\n                    fullName: '',\r\n                    address: '',\r\n                    phoneNumber: '',\r\n                }\r\n            )\r\n            setTextarea('');\r\n            setPreviewImgURL('');\r\n            setImageBase64 ('');\r\n\r\n        }else{\r\n            toast.error('Lưu thông tin chuyên khoa thất bại')\r\n        }\r\n    }\r\n\r\n    const  handleOnChangeImg = async (event) => {\r\n        let data = event.target.files;\r\n        let file = data[0];\r\n        if(file){\r\n            let base64 = await CommonUtils.getBase64(file);\r\n            let objectUrl = URL.createObjectURL(file);\r\n\r\n            setPreviewImgURL(objectUrl);\r\n            setImageBase64(base64);\r\n        }\r\n        \r\n        \r\n    }\r\n\r\n    const openImg = () => {\r\n       \r\n        if(!setPreviewImgURL){\r\n            return\r\n        }\r\n        setIsOpen(true)\r\n    }\r\n\r\n\r\n\r\n\r\n    const handleSaveData = () => {\r\n        getDataPatientQuestion()\r\n    }\r\n    return(\r\n        <React.Fragment>\r\n            <HomeHeader />\r\n            <div className=\"grid wide\">\r\n                <div className=\"row t\">\r\n                    <div className=\"col l-12\">\r\n                        <Slider />\r\n                    </div>\r\n\r\n                    <div className=\"container\">\r\n                        <div className=\"row body-asked\">\r\n                            <div className=\"col-6 form-group\">\r\n                                <label htmlFor=\"\">Nguyễn Văn A</label>\r\n                                    <InputForm \r\n                                        name= 'name'\r\n                                        placeholder='Nhập họ tên'\r\n                                        type=\"text\"\r\n                                        handleOnChange={handleChange}\r\n                                        className=\"form-control\"\r\n                                        value={inputs.name || ''}\r\n                                />\r\n                            </div>\r\n                            <div className=\"col-6 form-group\">\r\n                                <label htmlFor=\"\">Số điện thoại</label>\r\n                                    <InputForm \r\n                                        name= 'phoneNumber'\r\n                                        placeholder='+84....'\r\n                                        type=\"text\"\r\n                                        handleOnChange={handleChange}\r\n                                        className=\"form-control\"\r\n                                        value={inputs.phoneNumber || ''}\r\n                                />\r\n                            </div>\r\n                            <div className=\"col-6 form-group\">\r\n                                <label htmlFor=\"\">Địa trỉ email</label>\r\n                                    <InputForm \r\n                                        name= 'email'\r\n                                        placeholder='email@gmail.com'\r\n                                        type=\"text\"\r\n                                        handleOnChange={handleChange}\r\n                                        className=\"form-control\"\r\n                                        value={inputs.email || ''}\r\n                                />\r\n                            </div>\r\n                            <div className=\"col-6 form-group\">\r\n                                <label htmlFor=\"\">Địa trỉ liên hệ</label>\r\n                                    <InputForm \r\n                                        name= 'address'\r\n                                        placeholder='Tên thành phố của bạn'\r\n                                        type=\"text\"\r\n                                        handleOnChange={handleChange}\r\n                                        className=\"form-control\"\r\n                                        value={inputs.address || ''}\r\n                                />\r\n                            </div>\r\n                            <div className=\"col-12 form-group\">\r\n                                <label htmlFor=\"\">Câu hỏi</label>\r\n                                     <textarea className=\"form-control textarea-body\" rows=\"6\"\r\n                                            onChange={ (e) => setTextarea(e.target.value)}\r\n                                            name='asked'\r\n                                            placeholder='Tội bị đau...'\r\n                                            value={textarea || ''}\r\n                                        >\r\n\r\n                                    </textarea>\r\n                            </div>\r\n\r\n                            <div className=\"col-2\">\r\n                                <div className=\"img-body\">\r\n                                    <div className='label-upload'>\r\n                                        <input id=\"preview-img\" type=\"file\" className='file-control' hidden\r\n                                            onChange={(event) => handleOnChangeImg(event)}\r\n\r\n                                        />\r\n                                        <label htmlFor=\"preview-img\" className='preview-img'>Tải ảnh <i className=\"fas fa-upload\"></i> </label>\r\n\r\n                                        <div className=\"preview-imagee\"\r\n                                            style={{backgroundImage: `url(${previewImgURL})`}}\r\n                                            onClick={ openImg}\r\n                                        > \r\n\r\n                                        </div>\r\n                                </div>\r\n                                </div>\r\n                                \r\n                            </div>\r\n\r\n                            <div className=\"col-10\">\r\n                                <button type=\"button\" className=\"btn btn-modal__one btn-primary \"\r\n                                    onClick={handleSaveData}\r\n                                >Gửi câu hỏi tới bác sĩ</button>\r\n                            </div>\r\n\r\n                            \r\n                        </div>\r\n                    </div>\r\n\r\n                    \r\n                </div>\r\n            </div>\r\n            \r\n                   \r\n             \r\n            <HomeFooter/>\r\n          \r\n        </React.Fragment>\r\n    )\r\n    \r\n}\r\n\r\n\r\n\r\nexport default (PatientAsked);\r\n","import React, { Component, Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport { ConnectedRouter as Router } from 'connected-react-router';\r\nimport { history } from '../redux'\r\nimport { ToastContainer } from 'react-toastify';\r\n\r\n\r\nimport { userIsAuthenticated, userIsNotAuthenticated } from '../hoc/authentication';\r\n\r\nimport { path } from '../utils'\r\n\r\nimport Home from '../routes/Home';\r\nimport Login from './Auth/Login';\r\nimport Doctor from '../routes/Doctor.js';\r\nimport System from '../routes/System';\r\n\r\nimport { CustomToastCloseButton } from '../components/CustomToast';\r\nimport ConfirmModal from '../components/ConfirmModal';\r\n\r\nimport HomePage from './HomePage/HomePage.js'\r\nimport CustomScrollbars from '../components/CustomScrollbars.js';\r\nimport HeaderClinic from './Patient/Clinic/HeaderClinic.js';\r\nimport DetaiDoctor from './Patient/Doctor/DetaiDoctor.js';\r\nimport DetailSpecialty from './Patient/Specialty/DetailSpecialty.js';\r\nimport HeaderDoctor from './Patient/Doctor/HeaderDoctor.js';\r\nimport DetailClinic from './Patient/MedicalFacilities/DetailClinic.js';\r\nimport VerifyEmail from './Patient/VerifyEmail.js'\r\nimport HeaderSpecialty from './Patient/Specialty/HeaderSpecialty.js';\r\nimport DetailsAskAnswer from './Patient/Details/DetailsAskAnswer.js';\r\nimport PatientAsked from './Patient/Clinic/PatientAsked.js';\r\nclass App extends Component {\r\n\r\n    handlePersistorState = () => {\r\n        const { persistor } = this.props;\r\n        let { bootstrapped } = persistor.getState();\r\n        if (bootstrapped) {\r\n            if (this.props.onBeforeLift) {\r\n                Promise.resolve(this.props.onBeforeLift())\r\n                    .then(() => this.setState({ bootstrapped: true }))\r\n                    .catch(() => this.setState({ bootstrapped: true }));\r\n            } else {\r\n                this.setState({ bootstrapped: true });\r\n            }\r\n        }\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.handlePersistorState();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <Router history={history}>\r\n                    <div className=\"main-container\">\r\n                        <ConfirmModal />\r\n                      \r\n\r\n                        <div className=\"content-container\">\r\n\r\n                            <CustomScrollbars style = {{height: '100vh', with: '100%'}}>\r\n                                <Switch>\r\n                                    <Route path={path.HOME} exact component={(Home)} />\r\n                                    <Route path={path.LOGIN} component={userIsNotAuthenticated(Login)} />\r\n                                    <Route path={path.SYSTEM} component={userIsAuthenticated(System)} />\r\n                                    <Route path={'/doctor'} component={userIsAuthenticated(Doctor)} />\r\n                                    \r\n                                    <Route path={path.HOMEPAGE} component={HomePage} />\r\n                                    \r\n                                    <Route path={path.DETAIL_DOCTOR} component={DetaiDoctor}/> \r\n                                    <Route path={path.DETAIL_SPECIALTY} component={DetailSpecialty}/> \r\n                                    <Route path={path.VERIFY_EMAIL_BOOKING} component={VerifyEmail}/> \r\n                                    <Route path={path.HEADER_DOCTOR} component={HeaderDoctor}/> \r\n                                    \r\n                                    <Route path={path.ASK_ANSWER} component={DetailsAskAnswer}/> \r\n                                    <Route path={path.DETAIL_CLINIC} component={DetailClinic}/> \r\n                                    <Route path={path.HEADER_CLINIC} component={HeaderClinic}/> \r\n                                    <Route path={path.HEADER_SPECIALTY} component={HeaderSpecialty}/> \r\n                                    <Route path = {path.PATIENT_ASKED} component= {PatientAsked} />\r\n\r\n                                    <Route path={path.HEADER_DOCTOR} component={HeaderDoctor}/> \r\n\r\n                                </Switch>\r\n                            </CustomScrollbars>\r\n                        </div>\r\n\r\n                        {/* <ToastContainer\r\n                            className=\"toast-container\" toastClassName=\"toast-item\" bodyClassName=\"toast-item-body\"\r\n                            autoClose={false} hideProgressBar={true} pauseOnHover={false}\r\n                            pauseOnFocusLoss={true} closeOnClick={false} draggable={false}\r\n                            closeButton={<CustomToastCloseButton />}\r\n                        /> */}\r\n\r\n                        <ToastContainer\r\n                            position=\"bottom-right\"\r\n                            autoClose={2000}\r\n                            hideProgressBar={false}\r\n                            newestOnTop={false}\r\n                            closeOnClick\r\n                            rtl={false}\r\n                            pauseOnFocusLoss\r\n                            draggable\r\n                            pauseOnHover\r\n                            theme=\"light\"\r\n                        />\r\n                    </div>\r\n                </Router>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        started: state.app.started,\r\n        isLoggedIn: state.user.isLoggedIn\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport { IntlProvider } from \"react-intl\";\r\n\r\nimport '@formatjs/intl-pluralrules/polyfill';\r\nimport '@formatjs/intl-pluralrules/locale-data/en';\r\nimport '@formatjs/intl-pluralrules/locale-data/vi';\r\n\r\nimport '@formatjs/intl-relativetimeformat/polyfill';\r\nimport '@formatjs/intl-relativetimeformat/locale-data/en';\r\nimport '@formatjs/intl-relativetimeformat/locale-data/vi';\r\n\r\nimport { LanguageUtils } from '../utils'\r\n\r\nconst messages = LanguageUtils.getFlattenedMessages();\r\n\r\nclass IntlProviderWrapper extends Component {\r\n\r\n    render() {\r\n        const { children, language } = this.props;\r\n        return (\r\n            <IntlProvider\r\n                locale={language}\r\n                messages={messages[language]}\r\n                defaultLocale=\"vi\">\r\n                {children}\r\n            </IntlProvider>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        language: state.app.language\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(IntlProviderWrapper);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport './styles/styles.scss';\r\n\r\nimport App from './containers/App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport IntlProviderWrapper from \"./hoc/IntlProviderWrapper\";\r\n\r\n\r\nimport { Provider } from 'react-redux';\r\nimport reduxStore, { persistor } from './redux';\r\n\r\nconst renderApp = () => {\r\n    ReactDOM.render(\r\n        <Provider store={reduxStore}>\r\n            <IntlProviderWrapper>\r\n                <App persistor={persistor}/>\r\n            </IntlProviderWrapper>\r\n        </Provider>,\r\n        document.getElementById('root')\r\n    );\r\n};\r\n\r\nrenderApp();\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import { languages } from '../../utils/constant';\r\nimport actionTypes from './actionTypes';\r\n\r\nexport const appStartUpComplete = () => ({\r\n    type: actionTypes.APP_START_UP_COMPLETE\r\n});\r\n\r\nexport const setContentOfConfirmModal = (contentOfConfirmModal) => ({\r\n    type: actionTypes.SET_CONTENT_OF_CONFIRM_MODAL,\r\n    contentOfConfirmModal: contentOfConfirmModal\r\n});\r\n\r\nexport const changeLanguageApp = ( languageInput) => ({\r\n    type: actionTypes.CHANGE_LANGUAGE,\r\n    language: languageInput\r\n})\r\n    \r\n","import React, { Component, Fragment } from 'react';\r\nimport { FormattedMessage, FormattedTime } from 'react-intl';\r\n\r\nimport CustomScrollBar from '../components/CustomScrollbars';\r\n\r\nimport './CustomToast.scss';\r\n\r\nclass CustomToast extends Component {\r\n\r\n    render() {\r\n        const { titleId, message, messageId, time } = this.props;\r\n        return (\r\n            <Fragment>\r\n                <div className=\"custom-toast\">\r\n                    <div className=\"toast-title\">\r\n                        {time && (\r\n                            <span className=\"date\">\r\n                                <FormattedTime hour='numeric' minute='numeric' second='numeric' hour12={true} value={time} />\r\n                            </span>\r\n                        )}\r\n                        <i className=\"fa fa-fw fa-exclamation-triangle\" />\r\n                        <FormattedMessage id={titleId} />\r\n                    </div>\r\n                    {\r\n                        (message && typeof message === 'object') ?\r\n                            <CustomScrollBar autoHeight={true} autoHeightMin={50} autoHeightMax={100}>\r\n                                {\r\n                                    message.map((msg, index) => {\r\n                                        return (\r\n                                            <Fragment key={index}>\r\n                                                <div className=\"toast-content\">{msg}</div>\r\n                                            </Fragment>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </CustomScrollBar> :\r\n                            <div className=\"toast-content\">\r\n                                {message ? message : (messageId ? (<FormattedMessage id={messageId} />) : null)}\r\n                            </div>\r\n                    }\r\n                </div>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport class CustomToastCloseButton extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <button type=\"button\" className=\"toast-close\" onClick={this.props.closeToast}>\r\n                <i className=\"fa fa-fw fa-times-circle\" />\r\n            </button>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CustomToast;","import React, { Component } from 'react';\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\n\r\nimport './CustomScrollbars.scss';\r\n\r\nclass CustomScrollbars extends Component {\r\n\r\n    ref = React.createRef();\r\n\r\n    getScrollLeft =()=>{\r\n        const scrollbars = this.ref.current;\r\n        return scrollbars.getScrollLeft();\r\n    }\r\n    getScrollTop =()=>{\r\n        const scrollbars = this.ref.current;\r\n        return scrollbars.getScrollTop();\r\n    }\r\n\r\n    scrollToBottom = () => {\r\n        if (!this.ref || !this.ref.current) {\r\n            return;\r\n        }\r\n        const scrollbars = this.ref.current;\r\n        const targetScrollTop = scrollbars.getScrollHeight();\r\n        this.scrollTo(targetScrollTop);\r\n    };\r\n\r\n    scrollTo = (targetTop) => {\r\n        const { quickScroll } = this.props;\r\n        if (!this.ref || !this.ref.current) {\r\n            return;\r\n        }\r\n        const scrollbars = this.ref.current;\r\n        const originalTop = scrollbars.getScrollTop();\r\n        let iteration = 0;\r\n\r\n        const scroll = () => {\r\n            iteration++;\r\n            if (iteration > 30) {\r\n                return;\r\n            }\r\n            scrollbars.scrollTop(originalTop + (targetTop - originalTop) / 30 * iteration);\r\n\r\n            if (quickScroll && quickScroll === true) {\r\n                scroll();\r\n            } else {\r\n                setTimeout(() => {\r\n                    scroll();\r\n                }, 20);\r\n            }\r\n        };\r\n\r\n        scroll();\r\n    };\r\n\r\n    renderTrackHorizontal = (props) => {\r\n        return (\r\n            <div {...props} className=\"track-horizontal\" />\r\n        );\r\n    };\r\n\r\n    renderTrackVertical = (props) => {\r\n        return (\r\n            <div {...props} className=\"track-vertical\" />\r\n        );\r\n    };\r\n\r\n    renderThumbHorizontal = (props) => {\r\n        return (\r\n            <div {...props} className=\"thumb-horizontal\" />\r\n        );\r\n    };\r\n\r\n    renderThumbVertical = (props) => {\r\n        return (\r\n            <div {...props} className=\"thumb-vertical\" />\r\n        );\r\n    };\r\n\r\n    renderNone = (props) => {\r\n        return (\r\n            <div />\r\n        );\r\n    };\r\n\r\n    render() {\r\n        const { className, disableVerticalScroll, disableHorizontalScroll, children,...otherProps } = this.props;\r\n        return (\r\n            <Scrollbars\r\n                ref={this.ref}\r\n                autoHide={true}\r\n                autoHideTimeout={200}\r\n                hideTracksWhenNotNeeded={true}\r\n                className={className ? className + ' custom-scrollbar' : 'custom-scrollbar'}\r\n                {...otherProps}\r\n                renderTrackHorizontal={disableHorizontalScroll ? this.renderNone : this.renderTrackHorizontal}\r\n                renderTrackVertical={disableVerticalScroll ? this.renderNone : this.renderTrackVertical}\r\n                renderThumbHorizontal={disableHorizontalScroll ? this.renderNone : this.renderThumbHorizontal}\r\n                renderThumbVertical={disableVerticalScroll ? this.renderNone : this.renderThumbVertical}\r\n            >\r\n                {children}\r\n            </Scrollbars>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CustomScrollbars;"],"sourceRoot":""}